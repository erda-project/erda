syntax = "proto3";

package erda.msp.tenant;
option go_package = "github.com/erda-project/erda-proto-go/msp/tenant/pb";
import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/descriptor.proto";

service TenantService {
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse) {
    option (google.api.http) = {
      post: "/api/msp/tenant?projectId={projectID}"
    };
  }

  rpc GetTenant(GetTenantRequest) returns (GetTenantResponse) {
    option (google.api.http) = {
      get: "/api/msp/tenant?projectId={projectID}"
    };
  }

  rpc DeleteTenant(DeleteTenantRequest) returns (DeleteTenantResponse) {
    option (google.api.http) = {
      delete: "/api/msp/tenant?projectId={projectID}"
    };
  }
}

message CreateTenantRequest {
  string          projectID  = 1 [(validator.field) = {string_not_empty: true}, json_name = "projectId"];
  string          tenantType = 2 [(validator.field) = {string_not_empty: true}];
  repeated string workspaces = 3 [(validator.field) = {string_not_empty: true}];
}

message CreateTenantResponse {
  repeated Tenant data = 1;
}

message GetTenantRequest {
  string projectID  = 1 [(validator.field) = {string_not_empty: true}, json_name = "projectId"];
  string tenantType = 2 [(validator.field) = {string_not_empty: true}];
  string workspace  = 3 [(validator.field) = {string_not_empty: true}];
}

message GetTenantResponse {
  Tenant data = 1;
}

message DeleteTenantRequest {
  string projectID  = 1 [(validator.field) = {string_not_empty: true}, json_name = "projectId"];
  string tenantType = 2 [(validator.field) = {string_not_empty: true}];
  string workspace  = 3 [(validator.field) = {string_not_empty: true}];
}

message DeleteTenantResponse {
  Tenant data = 1;
}

enum Workspace{
  DEV     = 0;
  TEST    = 1;
  STAGING = 2;
  PROD    = 3;
  DEFAULT = 4;
}

enum Type {
  DOP = 0;
  MSP = 1;
}

// Differentiate the actual deployment environment of the service and addon
message Tenant {
  // Tenant id
  string id         = 1;
  // Tenant type
  string type       = 2;
  // Related project id
  string projectID  = 3 [json_name = "projectId"];
  // Related deployment workspace
  string workspace  = 4;
  // Create timestamp
  int64  createTime = 5;
  // Update timestamp
  int64  updateTime = 6;
  // Delete or not
  bool   isDeleted  = 7;
}