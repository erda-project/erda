syntax = "proto3";

package erda.msp.resource;
option go_package = "github.com/erda-project/erda-proto-go/msp/resource/pb";
import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

service ResourceService {
  rpc CreateResource(CreateResourceRequest) returns (CreateResourceResponse) {
    option (google.api.http) = {
      post: "/{engine}/dice/resources"
    };
  }

  rpc DeleteResource(DeleteResourceRequest) returns (DeleteResourceResponse){
    option (google.api.http) = {
      delete: "/{engine}/dice/resources/{id}"
    };
  }

  rpc GetMonitorRuntime(GetMonitorRuntimeRequest) returns (GetMonitorRuntimeResponse){
    option (google.api.http) = {
      get: "/api/msp/monitor/runtime/{runtimeId}?terminus_key={terminusKey}&application_id={applicationId}&runtime_name={runtimeName}"
    };
  }

  rpc GetMonitorInstance(GetMonitorInstanceRequest) returns (GetMonitorInstanceResponse){
    option (google.api.http) = {
      get: "/api/msp/monitor/instances/{terminusKey}"
    };
  }
}

message CreateResourceRequest {
  // 资源类型
  string              engine   = 1 [(validator.field) = {string_not_empty: true}];
  // 请求资源ID
  string              uuid     = 2 [(validator.field) = {string_not_empty: true}];
  // 规格
  string              plan     = 3;
  // 资源所在可用区
  string              az       = 4 [(validator.field) = {string_not_empty: true}];
  // 资源相关配置项
  map<string, string> options  = 5;
  // 回调
  string              callback = 6;
}

message CreateResourceResponse {
  ResourceCreateResult data = 1;
}

message ResourceCreateResult {
  // 请求ID
  string              id        = 1;
  // 环境变量
  map<string, string> config    = 2;
  // 标签
  map<string, string> label     = 3;
  // 创建时间
  string              createdAt = 4;
  // 更新时间
  string              updateAt  = 5;
  // 资源实例状态
  string              status    = 6;
}

message DeleteResourceRequest {
  // 资源类型
  string engine = 1 [(validator.field) = {string_not_empty: true}];
  // 资源id
  string id     = 2 [(validator.field) = {string_not_empty: true}];
}

message DeleteResourceResponse {
  // 操作是否成功
  bool data = 1;
}

message GetMonitorRuntimeRequest {
  string terminusKey   = 1;
  string applicationId = 2;
  string runtimeName   = 3;
  string runtimeId     = 4;
}

message GetMonitorRuntimeResponse {
  MonitorRuntime data = 1;
}

message MonitorRuntime {
  string terminusKey     = 1;
  string projectId       = 2;
  string projectName     = 3;
  string applicationId   = 4;
  string applicationName = 5;
  string workspace       = 6;
  string runtimeId       = 7;
  string runtimeName     = 8;
}

message GetMonitorInstanceRequest {
  string terminusKey = 1 [(validator.field) = {string_not_empty: true}];
}

message GetMonitorInstanceResponse {
  MonitorInstance data = 1;
}

message MonitorInstance {
  string monitorId   = 1;
  string monitorName = 2;
  string terminusKey = 3;
  string projectId   = 4;
  string projectName = 5;
  string workspace   = 6;
  // GMC+8 yyyy-MM-dd HH:mm:ss
  string createTime  = 7;
  // GMC+8 yyyy-MM-dd HH:mm:ss
  string updateTime  = 8;
}