syntax = "proto3";

package erda.orchestrator.runtime;
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "common/http.proto";

option go_package = "github.com/erda-project/erda-proto-go/orchestrator/runtime/pb";

message GetRuntimeRequest {
  string nameOrID = 1;
  string appID = 2;
  string workspace = 3;
}

message Resources {
  double cpu = 1;
  int64 mem = 2;
  int64 disk = 3;
}

message Deployments {
  uint64 replicas = 1;
}

message Service {
  string status = 1;
  Deployments deployments = 2;
  Resources resources = 3;
  map<string, string> envs = 4;
  repeated string addrs = 5;
  repeated string expose = 6;
  repeated ErrorResponse errors = 7;
}

message StatusMap {
  string msg = 1 [json_name = "Msg"];
  string reason = 2 [json_name = "Reason"];
}

message Extra {
  uint64 applicationID = 1 [json_name = "applicationId"] ;
  uint64 buildID = 2 [json_name = "buildId"];
  string workspace = 3;
}

message ErrorResponse {
  string code = 1;
  string msg = 2;
  string ctx = 3;
}

message RuntimeInspect {
  uint64 id = 1;
  string name = 2;
  string serviceGroupName = 3;
  string serviceGroupNamespace = 4;
  string source = 5;
  string status = 6;
  string deployStatus = 7;
  string deleteStatus = 8;
  string releaseID = 9 [json_name = "releaseId"];
  uint64 clusterID = 10 [json_name = "clusterId"] ;
  string clusterName = 11;
  string clusterType = 12;
  Resources resources = 13;
  Extra extra = 14;
  uint64 projectID = 15 [json_name = "projectId"] ;
  map<string, Service> services = 16;
  map<string, StatusMap> lastMessage = 17;
  google.protobuf.Timestamp timeCreated = 18;
  google.protobuf.Timestamp createdAt = 19;
  google.protobuf.Timestamp updatedAt = 20;
  repeated ErrorResponse errors = 21;
}

message DelRuntimeRequest {
  string id = 1;
}

message Runtime {
  uint64 id = 1;
  string name = 2;
  string gitBranch = 3;
  string workspace = 4;
  string clusterName = 5;
  uint64 clusterID = 6 [json_name = "clusterId"] ;
  string status = 7;
  uint64 applicationID = 8 [json_name = "applicationId"] ;
  string applicationName = 9;
  uint64 projectID = 10 [json_name = "projectId"];
  string projectName = 11;
  uint64 orgID = 12 [json_name = "orgId"];
  repeated ErrorResponse errors = 13;
}

service RuntimeService {
  rpc GetRuntime (GetRuntimeRequest) returns (RuntimeInspect) {
    option (google.api.http) = {
      get: "/api/runtimes/{nameOrID}?applicationId={appID}&workspace={workspace}",
    };
  }
  rpc DelRuntime (DelRuntimeRequest) returns (Runtime) {
    option (google.api.http) = {
      delete: "/api/runtimes/{id}",
    };
  }
}