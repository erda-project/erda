syntax = "proto3";

package erda.core.monitor.settings;
option go_package = "github.com/erda-project/erda-proto-go/core/monitor/settings/pb";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "common/openapi.proto";

service SettingsService {
  option (erda.common.openapi_service) = {
    service: "monitor",
    auth: {
      check_login: true,
      check_token: true,
    }
  };
  
  rpc GetSettings (GetSettingsRequest) returns (GetSettingsResponse)  {
    option (google.api.http) = {
      get: "/api/global/settings?org_id={orgID}"
    };
    option (erda.common.openapi) = {
      path: "/api/monitor/settings",
    };
  }

  rpc PutSettings (PutSettingsRequest) returns (PutSettingsResponse)  {
    option (google.api.http) = {
      put: "/api/global/settings?org_id={orgID}",
      body: "data"
    };
    option (erda.common.openapi) = {
      path: "/api/monitor/settings",
    };
  }

  rpc RegisterMonitorConfig (RegisterMonitorConfigRequest) returns (RegisterMonitorConfigResponse)  {
    option (google.api.http) = {
      put: "/api/config/register",
      body: "data"
    };
  }
}

// GetSettings
message GetSettingsRequest {
  int64 orgID = 1 [(validator.field) = {int_gt: 0}];
  string workspace = 2;
}
  
message GetSettingsResponse {
  map<string, ConfigGroups> data = 1;
}

// PutSettings
message PutSettingsRequest {
  map<string, ConfigGroups> data = 1;
  int64 orgID = 2 [(validator.field) = {int_gt: 0}];
}
  
message PutSettingsResponse {
  string data = 1;
}

// RegisterMonitorConfig
message RegisterMonitorConfigRequest {
  repeated MonitorConfig data = 1;
  string desc = 2;
}

message MonitorConfig {
  string scope = 1;
  string scopeID = 2 [json_name = "scope_id"];
  string namespace = 3;
  string type = 4;
  string names = 5;
  string filters = 6;
  bool enable = 7;
  string desc = 8;
}
  
message RegisterMonitorConfigResponse {
  string data = 1;
}

// common
message ConfigGroups {
  repeated ConfigGroup groups = 3;
}

message ConfigGroup {
  string key = 1;
  string name = 2;
  repeated ConfigItem items = 3;
}

message ConfigItem {
  string key = 1;
  string name = 2;
  google.protobuf.Value value = 3;
  string type = 4;
  string unit = 5;
}
