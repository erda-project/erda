syntax = "proto3";

package erda.core.pipeline.cms;

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/erda-project/erda-proto-go/core/pipeline/cms/pb";

service CmsService {
  rpc CreateNs (CmsCreateNsRequest) returns (CmsCreateNsResponse) {
    option (google.api.http) = {
      post: "/api/pipelines/cms/ns",
    };
  }

  rpc ListCmsNs (CmsListNsRequest) returns (CmsListNsResponse) {
    option (google.api.http) = {
      get: "/api/pipelines/cms/ns",
    };
  }

  rpc UpdateCmsNsConfigs (CmsNsConfigsUpdateRequest) returns (CmsNsConfigsUpdateResponse) {
    option (google.api.http) = {
      post: "/api/pipelines/cms/ns/{ns}",
    };
  }

  rpc DeleteCmsNsConfigs (CmsNsConfigsDeleteRequest) returns (CmsNsConfigsDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/pipelines/cms/ns/{ns}",
    };
  }

  rpc GetCmsNsConfigs (CmsNsConfigsGetRequest) returns (CmsNsConfigsGetResponse) {
    option (google.api.http) = {
      get: "/api/pipelines/cms/ns/{ns}",
    };
  }
}

message PipelineCmsNs {
  string pipeline_source = 1;
  string ns = 2;
  google.protobuf.Timestamp timeCreated = 3;
  google.protobuf.Timestamp timeUpdated = 4;
}

message PipelineCmsConfigValue {
  // Value
  // - when updating, Value is realValue;
  // - when getting, if Decrypt=true, Value=decrypt(dbValue); if Decrypt=false, Value=dbValue
  string value = 1;

  // EncryptInDB means whether encrypt in db
  bool encryptInDB = 2;

  // Type
  // - if not specified, default type is `kv`;
  // - if type is `dice-file`, value is uuid of `dice-file`.
  string type = 3;

  // Operations config operations
  // if nil, use default operations according to type
  PipelineCmsConfigOperations operations = 4;

  // Comment
  string comment = 5;

  // From represents where the config comes from. Optional.
  string from = 6;

  // no need to provide these fields when creating or updating.
  google.protobuf.Timestamp timeCreated = 7;
  google.protobuf.Timestamp timeUpdated = 8;
}

message PipelineCmsConfigOperations {
  bool canDownload = 1;
  bool canEdit = 2;
  // can_delete only take affect when deleting a single config.
  // If you delete ns, all configs will be deleted.
  bool canDelete = 3;
}

message PipelineCmsConfigKey {
  string key = 1;
  bool decrypt = 2;
  bool showEncryptedValue = 3; // whether to show original value which is encrypted
}

message PipelineCmsConfig {
  string key = 1;
  string value = 2;
  bool encryptInDB = 3;
  string type = 4;
  PipelineCmsConfigOperations operations = 5;
  string comment = 6;
  string from = 7;
  google.protobuf.Timestamp timeCreated = 8;
  google.protobuf.Timestamp timeUpdated = 9;
}

message CmsCreateNsRequest {
  string pipelineSource = 1 [(validator.field) = {string_not_empty: true}];
  string ns = 2 [(validator.field) = {string_not_empty: true}];
}
message CmsCreateNsResponse {
}

message CmsListNsRequest {
  string pipelineSource = 1 [(validator.field) = {string_not_empty: true}];
  string nsPrefix = 2;
}
message CmsListNsResponse {
  repeated PipelineCmsNs data = 1;
}

message CmsNsConfigsUpdateRequest {
  string ns = 1;
  string pipeline_source = 2 [(validator.field) = {string_not_empty: true}];
  map<string, PipelineCmsConfigValue> KVs = 3 [json_name="kvs"];
}
message CmsNsConfigsUpdateV1Request {
  string ns = 1;
  map<string, string> KVs = 2 [json_name="kvs"];
}
message CmsNsConfigsUpdateResponse {
}

message CmsNsConfigsDeleteRequest {
  string ns = 1;
  string pipelineSource = 2 [(validator.field) = {string_not_empty: true}];
  // Use custom json_name option `deleteNS` for backward-compatible, like fdp.
  // Use field name `deleteNs` for a unified format with other message.
  bool deleteNs = 3 [json_name="deleteNS"];
  bool deleteForce = 4;
  repeated string deleteKeys = 5;
}
message CmsNsConfigsDeleteResponse {
}

message CmsNsConfigsGetRequest {
  string ns = 1;
  string pipelineSource = 2 [(validator.field) = {string_not_empty: true}];
  repeated PipelineCmsConfigKey keys = 3; // only fetch specified keys
  bool globalDecrypt = 4; // global-level setting's priority is lower than key-level
}
message CmsNsConfigsGetResponse {
  repeated PipelineCmsConfig data = 1;
}
