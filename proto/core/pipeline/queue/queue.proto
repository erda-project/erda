syntax = "proto3";

package erda.core.pipeline.queue;

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "common/identity.proto";

option go_package = "github.com/erda-project/erda-proto-go/core/pipeline/queue/pb";

service QueueService {
  rpc CreateQueue (QueueCreateRequest) returns (QueueCreateResponse) {
    option (google.api.http) = {
      post: "/api/pipeline-queues",
    };
  }
  rpc GetQueue (QueueGetRequest) returns (QueueGetResponse) {
    option (google.api.http) = {
      get: "/api/pipeline-queues/{queueID}",
    };
  }
  rpc PagingQueue (QueuePagingRequest) returns (QueuePagingResponse) {
    option (google.api.http) = {
      get: "/api/pipeline-queues",
    };
  }
  rpc UpdateQueue (QueueUpdateRequest) returns (QueueUpdateResponse) {
    option (google.api.http) = {
      put: "/api/pipeline-queues/{queueID}",
    };
  }
  rpc DeleteQueue (QueueDeleteRequest) returns (QueueDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/pipeline-queues/{queueID}",
    };
  }
}
message QueueDeleteRequest {
  uint64 queueID = 1;
}
message QueueDeleteResponse {
}
message QueueUpdateRequest {
  uint64 queueID = 1;
  string    name = 2;
  string pipelineSource = 3;
  string clusterName = 4;
  string scheduleStrategy = 5;
  string    mode = 6;
  int64 priority = 7;
  int64 concurrency = 8;
  double  maxCPU = 9;
  double maxMemoryMB = 10;
  map<string, string> labels = 11;
  common.IdentityInfo identityInfo = 12;
}
message QueueUpdateResponse {
  Queue data = 1;
}
message QueuePagingRequest {
  string name = 1;
  repeated string pipelineSources = 2 ;
  string clusterName = 3;
  string scheduleStrategy = 4;
  int64 priority = 5;

  int64 concurrency = 6;

  // MUST match
  repeated string mustMatchLabels = 7;
  // ANY match
  repeated string anyMatchLabels = 8;

  // AllowNoPipelineSources, default is false.
  // 默认查询必须带上 pipeline source，增加区分度
  bool allowNoPipelineSources = 9;

  // OrderByTargetIDAsc 根据 target_id 升序，默认为 false，即降序
  bool orderByTargetIDAsc = 10;

  int64 pageNo = 11;
  int64 pageSize = 12;
}
message QueuePagingResponse {
  repeated Queue queues = 1;
  int64 total = 2;
}
message QueueGetRequest {
  uint64 queueID = 1;
}
message QueueGetResponse {
  Queue data = 1;
}
message QueueCreateRequest {
  // Name is the queue name.
  // +required
  string    name = 1;

  // PipelineSource group queues by source.
  // +required
  string pipelineSource = 2;

  // ClusterName represents which cluster this queue belongs to.
  // +required
  string clusterName = 3;

  // ScheduleStrategy defines schedule strategy.
  // If not present, will use default strategy.
  // +optional
  string scheduleStrategy = 4;

  // Mode defines queue mode.
  // If not present, will use default mode.
  // +optional
  string    mode = 5;

  // Priority defines item default priority inside queues.
  // Higher number means higher priority.
  // If not present, will use default priority.
  // +optional
  int64 priority = 6;

  // Concurrency defines how many item can running at the same time.
  // If not present, will use default concurrency.
  // +optional
  int64 concurrency = 7;

  // MaxCPU is the cpu resource this queue holds.
  // +optional
  double  maxCPU = 8;

  // MaxMemoryMB is the memory resource this queue holds.
  // +optional
  double maxMemoryMB = 9;

  // Labels contains the other infos for this queue.
  // Labels can be used to query and filter queues.
  // +optional
  map<string, string> labels = 10;

  common.IdentityInfo identityInfo = 11;
}
message QueueCreateResponse {
  Queue data = 1;
}

message Queue {
  uint64 ID = 1 [json_name = "id"];
  string name = 2;
  string pipelineSource = 3;
  string clusterName = 4;
  string scheduleStrategy = 5;
  string mode = 6;
  int64 priority = 7;
  int64 concurrency = 8;
  double maxCPU = 9;
  double maxMemoryMB = 10;
  map<string, string> labels = 11;
  google.protobuf.Timestamp timeCreated = 12;
  google.protobuf.Timestamp timeUpdated = 13;
  QueueUsage usage = 14;
}
message QueueUsage {
  double inUseCPU = 1;
  double inUseMemoryMB = 2;
  double remainingCPU = 3;
  double remainingMemoryMB = 4;
  int64 processingCount = 5;
  int64 pendingCount = 6;
  repeated QueueUsageItem processingDetails = 7;
  repeated QueueUsageItem pendingDetails = 8;
}
message QueueUsageItem {
  uint64 pipelineID = 1;
  double requestsCPU = 2;
  double requestsMemoryMB = 3;
  int64 index = 4;
  int64 priority = 5;
  google.protobuf.Timestamp addedTime = 6;
}
