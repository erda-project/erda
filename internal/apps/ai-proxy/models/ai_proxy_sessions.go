// Copyright (c) 2021 Terminus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by erda-cli. DO NOT EDIT.
// Source: .erda/ai-proxy/migrations/ai-proxy/20230425-filter-audit.sql

package models

import (
	"time"

	"github.com/erda-project/erda-infra/providers/mysql/v2/plugins/fields"
)

// AIProxySessions is the table ai_proxy_sessions
type AIProxySessions struct {
	ID            fields.UUID      `gorm:"column:id;type:char(36)" json:"iD" yaml:"iD"`
	CreatedAt     time.Time        `gorm:"column:created_at;type:datetime" json:"createdAt" yaml:"createdAt"`
	UpdatedAt     time.Time        `gorm:"column:updated_at;type:datetime" json:"updatedAt" yaml:"updatedAt"`
	DeletedAt     fields.DeletedAt `gorm:"column:deleted_at;type:datetime" json:"deletedAt" yaml:"deletedAt"`
	UserID        string           `gorm:"column:user_id;type:varchar(128)" json:"userID" yaml:"userID"`
	Name          string           `gorm:"column:name;type:varchar(128)" json:"name" yaml:"name"`
	Topic         string           `gorm:"column:topic;type:text" json:"topic" yaml:"topic"`
	ContextLength int64            `gorm:"column:context_length;type:int(11)" json:"contextLength" yaml:"contextLength"`
	Source        string           `gorm:"column:source;type:varchar(128)" json:"source" yaml:"source"`
	IsArchived    bool             `gorm:"column:is_archived;type:tinyint(1)" json:"isArchived" yaml:"isArchived"`
	ResetAt       time.Time        `gorm:"column:reset_at;type:datetime" json:"resetAt" yaml:"resetAt"`
	Model         string           `gorm:"column:model;type:varchar(128)" json:"model" yaml:"model"`
	Temperature   string           `gorm:"column:temperature;type:decimal(11,0)" json:"temperature" yaml:"temperature"`
}

// TableName returns the table name ai_proxy_sessions
func (*AIProxySessions) TableName() string { return "ai_proxy_sessions" }

type AIProxySessionsList []*AIProxySessions
