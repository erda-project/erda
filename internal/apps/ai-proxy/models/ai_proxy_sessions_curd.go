// Copyright (c) 2021 Terminus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by erda-cli. DO NOT EDIT.
// Source: .erda/ai-proxy/migrations/ai-proxy/20230425-filter-audit.sql

package models

import (
	"gorm.io/gorm"
)

// FieldID returns the Field interface{} for the field ai_proxy_sessions.id
func (this *AIProxySessions) FieldID() Field { return field{name: "id"} }

// FieldCreatedAt returns the Field interface{} for the field ai_proxy_sessions.created_at
func (this *AIProxySessions) FieldCreatedAt() Field { return field{name: "created_at"} }

// FieldUpdatedAt returns the Field interface{} for the field ai_proxy_sessions.updated_at
func (this *AIProxySessions) FieldUpdatedAt() Field { return field{name: "updated_at"} }

// FieldDeletedAt returns the Field interface{} for the field ai_proxy_sessions.deleted_at
func (this *AIProxySessions) FieldDeletedAt() Field { return field{name: "deleted_at"} }

// FieldUserID returns the Field interface{} for the field ai_proxy_sessions.user_id
func (this *AIProxySessions) FieldUserID() Field { return field{name: "user_id"} }

// FieldName returns the Field interface{} for the field ai_proxy_sessions.name
func (this *AIProxySessions) FieldName() Field { return field{name: "name"} }

// FieldTopic returns the Field interface{} for the field ai_proxy_sessions.topic
func (this *AIProxySessions) FieldTopic() Field { return field{name: "topic"} }

// FieldContextLength returns the Field interface{} for the field ai_proxy_sessions.context_length
func (this *AIProxySessions) FieldContextLength() Field { return field{name: "context_length"} }

// FieldSource returns the Field interface{} for the field ai_proxy_sessions.source
func (this *AIProxySessions) FieldSource() Field { return field{name: "source"} }

// FieldIsArchived returns the Field interface{} for the field ai_proxy_sessions.is_archived
func (this *AIProxySessions) FieldIsArchived() Field { return field{name: "is_archived"} }

// FieldResetAt returns the Field interface{} for the field ai_proxy_sessions.reset_at
func (this *AIProxySessions) FieldResetAt() Field { return field{name: "reset_at"} }

// FieldModel returns the Field interface{} for the field ai_proxy_sessions.model
func (this *AIProxySessions) FieldModel() Field { return field{name: "model"} }

// FieldTemperature returns the Field interface{} for the field ai_proxy_sessions.temperature
func (this *AIProxySessions) FieldTemperature() Field { return field{name: "temperature"} }

func (this *AIProxySessions) Creator(db *gorm.DB) Creator {
	return &creator{db: db, model: this}
}

func (this *AIProxySessions) Deleter(db *gorm.DB) Deleter {
	return &deleter{
		db:    db.Model(this),
		model: this,
		where: make([]Where, 0),
	}
}

func (this *AIProxySessions) Updater(db *gorm.DB) Updater {
	return &updater{
		db:      db.Model(this),
		model:   this,
		where:   nil,
		updates: make(map[string]any),
	}
}

func (this *AIProxySessions) Getter(db *gorm.DB) Getter {
	return &getter{
		db:    db.Model(this),
		model: this,
		where: make([]Where, 0),
	}
}

// FieldID returns the Field interface{} for the field ai_proxy_sessions.id
func (list AIProxySessionsList) FieldID() Field { return field{name: "id"} }

// FieldCreatedAt returns the Field interface{} for the field ai_proxy_sessions.created_at
func (list AIProxySessionsList) FieldCreatedAt() Field { return field{name: "created_at"} }

// FieldUpdatedAt returns the Field interface{} for the field ai_proxy_sessions.updated_at
func (list AIProxySessionsList) FieldUpdatedAt() Field { return field{name: "updated_at"} }

// FieldDeletedAt returns the Field interface{} for the field ai_proxy_sessions.deleted_at
func (list AIProxySessionsList) FieldDeletedAt() Field { return field{name: "deleted_at"} }

// FieldUserID returns the Field interface{} for the field ai_proxy_sessions.user_id
func (list AIProxySessionsList) FieldUserID() Field { return field{name: "user_id"} }

// FieldName returns the Field interface{} for the field ai_proxy_sessions.name
func (list AIProxySessionsList) FieldName() Field { return field{name: "name"} }

// FieldTopic returns the Field interface{} for the field ai_proxy_sessions.topic
func (list AIProxySessionsList) FieldTopic() Field { return field{name: "topic"} }

// FieldContextLength returns the Field interface{} for the field ai_proxy_sessions.context_length
func (list AIProxySessionsList) FieldContextLength() Field { return field{name: "context_length"} }

// FieldSource returns the Field interface{} for the field ai_proxy_sessions.source
func (list AIProxySessionsList) FieldSource() Field { return field{name: "source"} }

// FieldIsArchived returns the Field interface{} for the field ai_proxy_sessions.is_archived
func (list AIProxySessionsList) FieldIsArchived() Field { return field{name: "is_archived"} }

// FieldResetAt returns the Field interface{} for the field ai_proxy_sessions.reset_at
func (list AIProxySessionsList) FieldResetAt() Field { return field{name: "reset_at"} }

// FieldModel returns the Field interface{} for the field ai_proxy_sessions.model
func (list AIProxySessionsList) FieldModel() Field { return field{name: "model"} }

// FieldTemperature returns the Field interface{} for the field ai_proxy_sessions.temperature
func (list AIProxySessionsList) FieldTemperature() Field { return field{name: "temperature"} }

func (list *AIProxySessionsList) Pager(db *gorm.DB) Pager {
	return &pager{
		db:    db,
		list:  list,
		where: nil,
	}
}
