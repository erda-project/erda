// Copyright (c) 2021 Terminus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by erda-cli. DO NOT EDIT.
// Source: bin/erda-cli gorm gen -f .erda/ai-proxy/migrations/ai-proxy/20230823-ai-proxy.sql -o internal/apps/ai-proxy/models

package models

import (
	"time"

	"github.com/erda-project/erda-infra/providers/mysql/v2/plugins/fields"
)

var (
	_ time.Time
	_ fields.UUID
)

// AIProxySession is the table ai_proxy_session
type AIProxySession struct {
	BaseModel
	ClientID    string    `gorm:"column:client_id;type:char(36)" json:"clientID" yaml:"clientID"`
	PromptID    string    `gorm:"column:prompt_id;type:char(36)" json:"promptID" yaml:"promptID"`
	ModelID     string    `gorm:"column:model_id;type:char(36)" json:"modelID" yaml:"modelID"`
	Scene       string    `gorm:"column:scene;type:varchar(191)" json:"scene" yaml:"scene"`
	UserID      string    `gorm:"column:user_id;type:varchar(191)" json:"userID" yaml:"userID"`
	Name        string    `gorm:"column:name;type:varchar(191)" json:"name" yaml:"name"`
	Topic       string    `gorm:"column:topic;type:text" json:"topic" yaml:"topic"`
	NumOfCtxMsg int64     `gorm:"column:num_of_ctx_msg;type:int(11)" json:"numOfCtxMsg" yaml:"numOfCtxMsg"`
	IsArchived  bool      `gorm:"column:is_archived;type:tinyint(1)" json:"isArchived" yaml:"isArchived"`
	ResetAt     time.Time `gorm:"column:reset_at;type:datetime" json:"resetAt" yaml:"resetAt"`
	Temperature float64   `gorm:"column:temperature;type:decimal(11,0)" json:"temperature" yaml:"temperature"`
	Metadata    Metadata  `gorm:"column:metadata;type:mediumtext" json:"metadata" yaml:"metadata"`
}

// TableName returns the table name ai_proxy_session
func (AIProxySession) TableName() string { return "ai_proxy_session" }

type AIProxySessionList []*AIProxySession

// TableName returns the table name ai_proxy_session
func (AIProxySessionList) TableName() string { return "ai_proxy_session" }
