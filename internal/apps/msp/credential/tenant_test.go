// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/erda-project/erda-proto-go/msp/tenant/pb (interfaces: TenantServiceServer)

// Package exporter is a generated GoMock package.
package credential

import (
	context "context"
	reflect "reflect"

	pb "github.com/erda-project/erda-proto-go/msp/tenant/pb"
	gomock "github.com/golang/mock/gomock"
)

// MockTenantServiceServer is a mock of TenantServiceServer interface.
type MockTenantServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockTenantServiceServerMockRecorder
}

// MockTenantServiceServerMockRecorder is the mock recorder for MockTenantServiceServer.
type MockTenantServiceServerMockRecorder struct {
	mock *MockTenantServiceServer
}

// NewMockTenantServiceServer creates a new mock instance.
func NewMockTenantServiceServer(ctrl *gomock.Controller) *MockTenantServiceServer {
	mock := &MockTenantServiceServer{ctrl: ctrl}
	mock.recorder = &MockTenantServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTenantServiceServer) EXPECT() *MockTenantServiceServerMockRecorder {
	return m.recorder
}

// CreateTenant mocks base method.
func (m *MockTenantServiceServer) CreateTenant(arg0 context.Context, arg1 *pb.CreateTenantRequest) (*pb.CreateTenantResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTenant", arg0, arg1)
	ret0, _ := ret[0].(*pb.CreateTenantResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTenant indicates an expected call of CreateTenant.
func (mr *MockTenantServiceServerMockRecorder) CreateTenant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTenant", reflect.TypeOf((*MockTenantServiceServer)(nil).CreateTenant), arg0, arg1)
}

// DeleteTenant mocks base method.
func (m *MockTenantServiceServer) DeleteTenant(arg0 context.Context, arg1 *pb.DeleteTenantRequest) (*pb.DeleteTenantResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTenant", arg0, arg1)
	ret0, _ := ret[0].(*pb.DeleteTenantResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTenant indicates an expected call of DeleteTenant.
func (mr *MockTenantServiceServerMockRecorder) DeleteTenant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTenant", reflect.TypeOf((*MockTenantServiceServer)(nil).DeleteTenant), arg0, arg1)
}

// GetTenant mocks base method.
func (m *MockTenantServiceServer) GetTenant(arg0 context.Context, arg1 *pb.GetTenantRequest) (*pb.GetTenantResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTenant", arg0, arg1)
	ret0, _ := ret[0].(*pb.GetTenantResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTenant indicates an expected call of GetTenant.
func (mr *MockTenantServiceServerMockRecorder) GetTenant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTenant", reflect.TypeOf((*MockTenantServiceServer)(nil).GetTenant), arg0, arg1)
}

// GetTenantProject mocks base method.
func (m *MockTenantServiceServer) GetTenantProject(arg0 context.Context, arg1 *pb.GetTenantProjectRequest) (*pb.GetTenantProjectResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTenantProject", arg0, arg1)
	ret0, _ := ret[0].(*pb.GetTenantProjectResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTenantProject indicates an expected call of GetTenantProject.
func (mr *MockTenantServiceServerMockRecorder) GetTenantProject(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTenantProject", reflect.TypeOf((*MockTenantServiceServer)(nil).GetTenantProject), arg0, arg1)
}
