// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: exception.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterExceptionServiceImp exception.proto
func RegisterExceptionServiceImp(regester transport.Register, srv ExceptionServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterExceptionServiceHandler(regester, ExceptionServiceHandler(srv), _ops.HTTP...)
	RegisterExceptionServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.apm.exception.ExceptionService",
	)
}

var (
	exceptionServiceClientType  = reflect.TypeOf((*ExceptionServiceClient)(nil)).Elem()
	exceptionServiceServerType  = reflect.TypeOf((*ExceptionServiceServer)(nil)).Elem()
	exceptionServiceHandlerType = reflect.TypeOf((*ExceptionServiceHandler)(nil)).Elem()
)

// ExceptionServiceClientType .
func ExceptionServiceClientType() reflect.Type { return exceptionServiceClientType }

// ExceptionServiceServerType .
func ExceptionServiceServerType() reflect.Type { return exceptionServiceServerType }

// ExceptionServiceHandlerType .
func ExceptionServiceHandlerType() reflect.Type { return exceptionServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		exceptionServiceClientType,
		// server types
		exceptionServiceServerType,
		// handler types
		exceptionServiceHandlerType,
	}
}
