// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: trace.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterTraceServiceImp trace.proto
func RegisterTraceServiceImp(regester transport.Register, srv TraceServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterTraceServiceHandler(regester, TraceServiceHandler(srv), _ops.HTTP...)
	RegisterTraceServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.apm.trace.TraceService",
	)
}

var (
	traceServiceClientType  = reflect.TypeOf((*TraceServiceClient)(nil)).Elem()
	traceServiceServerType  = reflect.TypeOf((*TraceServiceServer)(nil)).Elem()
	traceServiceHandlerType = reflect.TypeOf((*TraceServiceHandler)(nil)).Elem()
)

// TraceServiceClientType .
func TraceServiceClientType() reflect.Type { return traceServiceClientType }

// TraceServiceServerType .
func TraceServiceServerType() reflect.Type { return traceServiceServerType }

// TraceServiceHandlerType .
func TraceServiceHandlerType() reflect.Type { return traceServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		traceServiceClientType,
		// server types
		traceServiceServerType,
		// handler types
		traceServiceHandlerType,
	}
}
