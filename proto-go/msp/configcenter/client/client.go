// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: configcenter.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/msp/configcenter/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// ConfigCenterService configcenter.proto
	ConfigCenterService() pb.ConfigCenterServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		configCenterService: pb.NewConfigCenterServiceClient(cc),
	}
}

type serviceClients struct {
	configCenterService pb.ConfigCenterServiceClient
}

func (c *serviceClients) ConfigCenterService() pb.ConfigCenterServiceClient {
	return c.configCenterService
}

type configCenterServiceWrapper struct {
	client pb.ConfigCenterServiceClient
	opts   []grpc1.CallOption
}

func (s *configCenterServiceWrapper) GetGroups(ctx context.Context, req *pb.GetGroupRequest) (*pb.GetGroupResponse, error) {
	return s.client.GetGroups(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *configCenterServiceWrapper) GetGroupProperties(ctx context.Context, req *pb.GetGroupPropertiesRequest) (*pb.GetGroupPropertiesResponse, error) {
	return s.client.GetGroupProperties(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *configCenterServiceWrapper) SaveGroupProperties(ctx context.Context, req *pb.SaveGroupPropertiesRequest) (*pb.SaveGroupPropertiesResponse, error) {
	return s.client.SaveGroupProperties(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
