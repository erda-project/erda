// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: configcenter.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterConfigCenterServiceImp configcenter.proto
func RegisterConfigCenterServiceImp(regester transport.Register, srv ConfigCenterServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterConfigCenterServiceHandler(regester, ConfigCenterServiceHandler(srv), _ops.HTTP...)
	RegisterConfigCenterServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.configcenter.ConfigCenterService",
	)
}

var (
	configCenterServiceClientType  = reflect.TypeOf((*ConfigCenterServiceClient)(nil)).Elem()
	configCenterServiceServerType  = reflect.TypeOf((*ConfigCenterServiceServer)(nil)).Elem()
	configCenterServiceHandlerType = reflect.TypeOf((*ConfigCenterServiceHandler)(nil)).Elem()
)

// ConfigCenterServiceClientType .
func ConfigCenterServiceClientType() reflect.Type { return configCenterServiceClientType }

// ConfigCenterServiceServerType .
func ConfigCenterServiceServerType() reflect.Type { return configCenterServiceServerType }

// ConfigCenterServiceHandlerType .
func ConfigCenterServiceHandlerType() reflect.Type { return configCenterServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		configCenterServiceClientType,
		// server types
		configCenterServiceServerType,
		// handler types
		configCenterServiceHandlerType,
	}
}
