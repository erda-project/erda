// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// Source: authentication.proto

package pb

import (
	grpc1 "github.com/erda-project/erda-infra/pkg/transport/grpc"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion5

// AuthenticationServiceClient is the client API for AuthenticationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AuthenticationServiceClient interface {
}

type authenticationServiceClient struct {
	cc grpc1.ClientConnInterface
}

func NewAuthenticationServiceClient(cc grpc1.ClientConnInterface) AuthenticationServiceClient {
	return &authenticationServiceClient{cc}
}

// AuthenticationServiceServer is the server API for AuthenticationService service.
// All implementations should embed UnimplementedAuthenticationServiceServer
// for forward compatibility
type AuthenticationServiceServer interface {
}

// UnimplementedAuthenticationServiceServer should be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServiceServer struct {
}

func RegisterAuthenticationServiceServer(s grpc1.ServiceRegistrar, srv AuthenticationServiceServer, opts ...grpc1.HandleOption) {
	s.RegisterService(_get_AuthenticationService_serviceDesc(srv, opts...), srv)
}

var _AuthenticationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "erda.core.services.authentication.AuthenticationService",
	HandlerType: (*AuthenticationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "authentication.proto",
}

func _get_AuthenticationService_serviceDesc(srv AuthenticationServiceServer, opts ...grpc1.HandleOption) *grpc.ServiceDesc {
	h := grpc1.DefaultHandleOptions()
	for _, op := range opts {
		op(h)
	}

	var serviceDesc = _AuthenticationService_serviceDesc
	serviceDesc.Methods = []grpc.MethodDesc{}
	return &serviceDesc
}
