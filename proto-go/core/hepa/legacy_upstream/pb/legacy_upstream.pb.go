// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: legacy_upstream.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AsyncRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AsyncRegisterResponse) Reset() {
	*x = AsyncRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacy_upstream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncRegisterResponse) ProtoMessage() {}

func (x *AsyncRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legacy_upstream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncRegisterResponse.ProtoReflect.Descriptor instead.
func (*AsyncRegisterResponse) Descriptor() ([]byte, []int) {
	return file_legacy_upstream_proto_rawDescGZIP(), []int{0}
}

func (x *AsyncRegisterResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type AsyncRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upstream *Upstream `protobuf:"bytes,1,opt,name=upstream,proto3" json:"upstream,omitempty"`
}

func (x *AsyncRegisterRequest) Reset() {
	*x = AsyncRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacy_upstream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncRegisterRequest) ProtoMessage() {}

func (x *AsyncRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legacy_upstream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncRegisterRequest.ProtoReflect.Descriptor instead.
func (*AsyncRegisterRequest) Descriptor() ([]byte, []int) {
	return file_legacy_upstream_proto_rawDescGZIP(), []int{1}
}

func (x *AsyncRegisterRequest) GetUpstream() *Upstream {
	if x != nil {
		return x.Upstream
	}
	return nil
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacy_upstream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_legacy_upstream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_legacy_upstream_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upstream *Upstream `protobuf:"bytes,1,opt,name=upstream,proto3" json:"upstream,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacy_upstream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_legacy_upstream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_legacy_upstream_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterRequest) GetUpstream() *Upstream {
	if x != nil {
		return x.Upstream
	}
	return nil
}

type UpstreamApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	GatewayPath string          `protobuf:"bytes,2,opt,name=gatewayPath,proto3" json:"gatewayPath,omitempty"`
	Method      string          `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Address     string          `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	IsInner     bool            `protobuf:"varint,5,opt,name=isInner,proto3" json:"isInner,omitempty"`
	IsCustom    bool            `protobuf:"varint,6,opt,name=isCustom,proto3" json:"isCustom,omitempty"`
	Doc         *structpb.Value `protobuf:"bytes,7,opt,name=doc,proto3" json:"doc,omitempty"`
	Name        string          `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpstreamApi) Reset() {
	*x = UpstreamApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacy_upstream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamApi) ProtoMessage() {}

func (x *UpstreamApi) ProtoReflect() protoreflect.Message {
	mi := &file_legacy_upstream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamApi.ProtoReflect.Descriptor instead.
func (*UpstreamApi) Descriptor() ([]byte, []int) {
	return file_legacy_upstream_proto_rawDescGZIP(), []int{4}
}

func (x *UpstreamApi) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpstreamApi) GetGatewayPath() string {
	if x != nil {
		return x.GatewayPath
	}
	return ""
}

func (x *UpstreamApi) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *UpstreamApi) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpstreamApi) GetIsInner() bool {
	if x != nil {
		return x.IsInner
	}
	return false
}

func (x *UpstreamApi) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

func (x *UpstreamApi) GetDoc() *structpb.Value {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *UpstreamApi) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Upstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Az          string         `protobuf:"bytes,1,opt,name=az,proto3" json:"az,omitempty"`
	DiceAppId   string         `protobuf:"bytes,2,opt,name=diceAppId,proto3" json:"diceAppId,omitempty"`
	DiceService string         `protobuf:"bytes,3,opt,name=diceService,proto3" json:"diceService,omitempty"`
	RuntimeName string         `protobuf:"bytes,4,opt,name=runtimeName,proto3" json:"runtimeName,omitempty"`
	RuntimeId   string         `protobuf:"bytes,5,opt,name=runtimeId,proto3" json:"runtimeId,omitempty"`
	AppName     string         `protobuf:"bytes,6,opt,name=appName,proto3" json:"appName,omitempty"`
	ServiceName string         `protobuf:"bytes,7,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	OrgId       string         `protobuf:"bytes,8,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ProjectId   string         `protobuf:"bytes,9,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Env         string         `protobuf:"bytes,10,opt,name=env,proto3" json:"env,omitempty"`
	ApiList     []*UpstreamApi `protobuf:"bytes,11,rep,name=apiList,proto3" json:"apiList,omitempty"`
	RegisterId  int32          `protobuf:"varint,12,opt,name=registerId,proto3" json:"registerId,omitempty"`
	RegisterTag string         `protobuf:"bytes,13,opt,name=registerTag,proto3" json:"registerTag,omitempty"`
	PathPrefix  string         `protobuf:"bytes,14,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"`
}

func (x *Upstream) Reset() {
	*x = Upstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacy_upstream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Upstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upstream) ProtoMessage() {}

func (x *Upstream) ProtoReflect() protoreflect.Message {
	mi := &file_legacy_upstream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upstream.ProtoReflect.Descriptor instead.
func (*Upstream) Descriptor() ([]byte, []int) {
	return file_legacy_upstream_proto_rawDescGZIP(), []int{5}
}

func (x *Upstream) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *Upstream) GetDiceAppId() string {
	if x != nil {
		return x.DiceAppId
	}
	return ""
}

func (x *Upstream) GetDiceService() string {
	if x != nil {
		return x.DiceService
	}
	return ""
}

func (x *Upstream) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

func (x *Upstream) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *Upstream) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Upstream) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Upstream) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Upstream) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Upstream) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Upstream) GetApiList() []*UpstreamApi {
	if x != nil {
		return x.ApiList
	}
	return nil
}

func (x *Upstream) GetRegisterId() int32 {
	if x != nil {
		return x.RegisterId
	}
	return 0
}

func (x *Upstream) GetRegisterTag() string {
	if x != nil {
		return x.RegisterTag
	}
	return ""
}

func (x *Upstream) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

var File_legacy_upstream_proto protoreflect.FileDescriptor

var file_legacy_upstream_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x5c, 0x0a, 0x14, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x26,
	0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22,
	0xe9, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x28, 0x0a,
	0x03, 0x64, 0x6f, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc5, 0x03, 0x0a, 0x08,
	0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x7a, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x7a, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x65,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x69, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x32, 0xd8, 0x02, 0x0a, 0x0f, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x1a,
	0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0xab, 0x01, 0x0a, 0x0d, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x34, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68,
	0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x1a, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x3a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x44,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64,
	0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x65, 0x70,
	0x61, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_legacy_upstream_proto_rawDescOnce sync.Once
	file_legacy_upstream_proto_rawDescData = file_legacy_upstream_proto_rawDesc
)

func file_legacy_upstream_proto_rawDescGZIP() []byte {
	file_legacy_upstream_proto_rawDescOnce.Do(func() {
		file_legacy_upstream_proto_rawDescData = protoimpl.X.CompressGZIP(file_legacy_upstream_proto_rawDescData)
	})
	return file_legacy_upstream_proto_rawDescData
}

var file_legacy_upstream_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_legacy_upstream_proto_goTypes = []interface{}{
	(*AsyncRegisterResponse)(nil), // 0: erda.core.hepa.legacy_upstream.AsyncRegisterResponse
	(*AsyncRegisterRequest)(nil),  // 1: erda.core.hepa.legacy_upstream.AsyncRegisterRequest
	(*RegisterResponse)(nil),      // 2: erda.core.hepa.legacy_upstream.RegisterResponse
	(*RegisterRequest)(nil),       // 3: erda.core.hepa.legacy_upstream.RegisterRequest
	(*UpstreamApi)(nil),           // 4: erda.core.hepa.legacy_upstream.UpstreamApi
	(*Upstream)(nil),              // 5: erda.core.hepa.legacy_upstream.Upstream
	(*structpb.Value)(nil),        // 6: google.protobuf.Value
}
var file_legacy_upstream_proto_depIdxs = []int32{
	5, // 0: erda.core.hepa.legacy_upstream.AsyncRegisterRequest.upstream:type_name -> erda.core.hepa.legacy_upstream.Upstream
	5, // 1: erda.core.hepa.legacy_upstream.RegisterRequest.upstream:type_name -> erda.core.hepa.legacy_upstream.Upstream
	6, // 2: erda.core.hepa.legacy_upstream.UpstreamApi.doc:type_name -> google.protobuf.Value
	4, // 3: erda.core.hepa.legacy_upstream.Upstream.apiList:type_name -> erda.core.hepa.legacy_upstream.UpstreamApi
	3, // 4: erda.core.hepa.legacy_upstream.UpstreamService.Register:input_type -> erda.core.hepa.legacy_upstream.RegisterRequest
	1, // 5: erda.core.hepa.legacy_upstream.UpstreamService.AsyncRegister:input_type -> erda.core.hepa.legacy_upstream.AsyncRegisterRequest
	2, // 6: erda.core.hepa.legacy_upstream.UpstreamService.Register:output_type -> erda.core.hepa.legacy_upstream.RegisterResponse
	0, // 7: erda.core.hepa.legacy_upstream.UpstreamService.AsyncRegister:output_type -> erda.core.hepa.legacy_upstream.AsyncRegisterResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_legacy_upstream_proto_init() }
func file_legacy_upstream_proto_init() {
	if File_legacy_upstream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_legacy_upstream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacy_upstream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacy_upstream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacy_upstream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacy_upstream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacy_upstream_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Upstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_legacy_upstream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_legacy_upstream_proto_goTypes,
		DependencyIndexes: file_legacy_upstream_proto_depIdxs,
		MessageInfos:      file_legacy_upstream_proto_msgTypes,
	}.Build()
	File_legacy_upstream_proto = out.File
	file_legacy_upstream_proto_rawDesc = nil
	file_legacy_upstream_proto_goTypes = nil
	file_legacy_upstream_proto_depIdxs = nil
}
