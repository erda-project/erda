// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: image.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/dicehub/image/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// ImageService image.proto
	ImageService() pb.ImageServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		imageService: pb.NewImageServiceClient(cc),
	}
}

type serviceClients struct {
	imageService pb.ImageServiceClient
}

func (c *serviceClients) ImageService() pb.ImageServiceClient {
	return c.imageService
}

type imageServiceWrapper struct {
	client pb.ImageServiceClient
	opts   []grpc1.CallOption
}

func (s *imageServiceWrapper) GetImage(ctx context.Context, req *pb.ImageGetRequest) (*pb.ImageGetResponse, error) {
	return s.client.GetImage(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *imageServiceWrapper) ListImage(ctx context.Context, req *pb.ImageListRequest) (*pb.ImageListResponse, error) {
	return s.client.ListImage(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
