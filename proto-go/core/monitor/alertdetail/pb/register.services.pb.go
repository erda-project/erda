// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: details.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterAlertDetailServiceImp details.proto
func RegisterAlertDetailServiceImp(regester transport.Register, srv AlertDetailServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterAlertDetailServiceHandler(regester, AlertDetailServiceHandler(srv), _ops.HTTP...)
	RegisterAlertDetailServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.monitor.alertdetail.AlertDetailService",
	)
}

var (
	alertDetailServiceClientType  = reflect.TypeOf((*AlertDetailServiceClient)(nil)).Elem()
	alertDetailServiceServerType  = reflect.TypeOf((*AlertDetailServiceServer)(nil)).Elem()
	alertDetailServiceHandlerType = reflect.TypeOf((*AlertDetailServiceHandler)(nil)).Elem()
)

// AlertDetailServiceClientType .
func AlertDetailServiceClientType() reflect.Type { return alertDetailServiceClientType }

// AlertDetailServiceServerType .
func AlertDetailServiceServerType() reflect.Type { return alertDetailServiceServerType }

// AlertDetailServiceHandlerType .
func AlertDetailServiceHandlerType() reflect.Type { return alertDetailServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		alertDetailServiceClientType,
		// server types
		alertDetailServiceServerType,
		// handler types
		alertDetailServiceHandlerType,
	}
}
