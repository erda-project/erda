// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: metric.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*QueryWithInfluxFormatRequest)(nil)
var _ json.Unmarshaler = (*QueryWithInfluxFormatRequest)(nil)
var _ json.Marshaler = (*QueryWithInfluxFormatResponse)(nil)
var _ json.Unmarshaler = (*QueryWithInfluxFormatResponse)(nil)
var _ json.Marshaler = (*Serie)(nil)
var _ json.Unmarshaler = (*Serie)(nil)
var _ json.Marshaler = (*Row)(nil)
var _ json.Unmarshaler = (*Row)(nil)
var _ json.Marshaler = (*Result)(nil)
var _ json.Unmarshaler = (*Result)(nil)
var _ json.Marshaler = (*QueryWithTableFormatRequest)(nil)
var _ json.Unmarshaler = (*QueryWithTableFormatRequest)(nil)
var _ json.Marshaler = (*QueryWithTableFormatResponse)(nil)
var _ json.Unmarshaler = (*QueryWithTableFormatResponse)(nil)
var _ json.Marshaler = (*TableResult)(nil)
var _ json.Unmarshaler = (*TableResult)(nil)
var _ json.Marshaler = (*TableColumn)(nil)
var _ json.Unmarshaler = (*TableColumn)(nil)
var _ json.Marshaler = (*TableRow)(nil)
var _ json.Unmarshaler = (*TableRow)(nil)
var _ json.Marshaler = (*GeneralQueryRequest)(nil)
var _ json.Unmarshaler = (*GeneralQueryRequest)(nil)
var _ json.Marshaler = (*GeneralQueryResponse)(nil)
var _ json.Unmarshaler = (*GeneralQueryResponse)(nil)
var _ json.Marshaler = (*Filter)(nil)
var _ json.Unmarshaler = (*Filter)(nil)

// QueryWithInfluxFormatRequest implement json.Marshaler.
func (m *QueryWithInfluxFormatRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueryWithInfluxFormatRequest implement json.Marshaler.
func (m *QueryWithInfluxFormatRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueryWithInfluxFormatResponse implement json.Marshaler.
func (m *QueryWithInfluxFormatResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueryWithInfluxFormatResponse implement json.Marshaler.
func (m *QueryWithInfluxFormatResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Serie implement json.Marshaler.
func (m *Serie) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Serie implement json.Marshaler.
func (m *Serie) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Row implement json.Marshaler.
func (m *Row) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Row implement json.Marshaler.
func (m *Row) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Result implement json.Marshaler.
func (m *Result) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Result implement json.Marshaler.
func (m *Result) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueryWithTableFormatRequest implement json.Marshaler.
func (m *QueryWithTableFormatRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueryWithTableFormatRequest implement json.Marshaler.
func (m *QueryWithTableFormatRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueryWithTableFormatResponse implement json.Marshaler.
func (m *QueryWithTableFormatResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueryWithTableFormatResponse implement json.Marshaler.
func (m *QueryWithTableFormatResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TableResult implement json.Marshaler.
func (m *TableResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TableResult implement json.Marshaler.
func (m *TableResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TableColumn implement json.Marshaler.
func (m *TableColumn) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TableColumn implement json.Marshaler.
func (m *TableColumn) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TableRow implement json.Marshaler.
func (m *TableRow) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TableRow implement json.Marshaler.
func (m *TableRow) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GeneralQueryRequest implement json.Marshaler.
func (m *GeneralQueryRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GeneralQueryRequest implement json.Marshaler.
func (m *GeneralQueryRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GeneralQueryResponse implement json.Marshaler.
func (m *GeneralQueryResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GeneralQueryResponse implement json.Marshaler.
func (m *GeneralQueryResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Filter implement json.Marshaler.
func (m *Filter) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Filter implement json.Marshaler.
func (m *Filter) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
