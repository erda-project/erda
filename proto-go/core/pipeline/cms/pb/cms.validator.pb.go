// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cms.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PipelineCmsNs) Validate() error {
	if this.TimeCreated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeCreated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeCreated", err)
		}
	}
	if this.TimeUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeUpdated", err)
		}
	}
	return nil
}
func (this *PipelineCmsConfigValue) Validate() error {
	if this.Operations != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Operations); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Operations", err)
		}
	}
	if this.TimeCreated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeCreated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeCreated", err)
		}
	}
	if this.TimeUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeUpdated", err)
		}
	}
	return nil
}
func (this *PipelineCmsConfigOperations) Validate() error {
	return nil
}
func (this *PipelineCmsConfigKey) Validate() error {
	return nil
}
func (this *PipelineCmsConfig) Validate() error {
	if this.Operations != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Operations); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Operations", err)
		}
	}
	if this.TimeCreated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeCreated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeCreated", err)
		}
	}
	if this.TimeUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeUpdated", err)
		}
	}
	return nil
}
func (this *CmsCreateNsRequest) Validate() error {
	if this.PipelineSource == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("PipelineSource", fmt.Errorf(`value '%v' must not be an empty string`, this.PipelineSource))
	}
	if this.Ns == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Ns", fmt.Errorf(`value '%v' must not be an empty string`, this.Ns))
	}
	return nil
}
func (this *CmsCreateNsResponse) Validate() error {
	return nil
}
func (this *CmsListNsRequest) Validate() error {
	if this.PipelineSource == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("PipelineSource", fmt.Errorf(`value '%v' must not be an empty string`, this.PipelineSource))
	}
	return nil
}
func (this *CmsListNsResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *CmsNsConfigsUpdateRequest) Validate() error {
	if this.PipelineSource == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("PipelineSource", fmt.Errorf(`value '%v' must not be an empty string`, this.PipelineSource))
	}
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *CmsNsConfigsUpdateV1Request) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *CmsNsConfigsUpdateResponse) Validate() error {
	return nil
}
func (this *CmsNsConfigsDeleteRequest) Validate() error {
	if this.PipelineSource == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("PipelineSource", fmt.Errorf(`value '%v' must not be an empty string`, this.PipelineSource))
	}
	return nil
}
func (this *CmsNsConfigsDeleteResponse) Validate() error {
	return nil
}
func (this *CmsNsConfigsGetRequest) Validate() error {
	if this.PipelineSource == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("PipelineSource", fmt.Errorf(`value '%v' must not be an empty string`, this.PipelineSource))
	}
	for _, item := range this.Keys {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Keys", err)
			}
		}
	}
	return nil
}
func (this *CmsNsConfigsGetResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
