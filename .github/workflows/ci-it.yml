# Copyright (c) 2021 Terminus, Inc.
#
# This program is free software: you can use, redistribute, and/or modify
# it under the terms of the GNU Affero General Public License, version 3
# or later ("AGPL"), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

name: CI AND IT
on:
  push:
    tags:
      - v*
    branches:
      - develop
      - master
      - release/*
  pull_request:
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt update && sudo apt install libc-dev pkg-config librdkafka-dev
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Go generate files
        run: |
          go generate ./apistructs
          go generate ./modules/openapi/api/generate
          go generate ./modules/openapi/component-protocol/generate
      - name: Set up Go mod
        run: go mod tidy
      - name: Run Lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29
          # Optional: working directory, useful for monorepos
          # working-directory: somedir
          # Optional: golangci-lint command line arguments.
          args: --timeout=10m --out-format=colored-line-number
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true
          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true
          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true
          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: true
      - name: Run Build
        run: make
      - name: Run Test
        run: |
          go test -work -cpu=2 -timeout 3s -race -coverprofile=coverage.txt -covermode=atomic ./...
          bash <(curl -s https://codecov.io/bash)
