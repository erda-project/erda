openapi: 3.0.0

info:
  title: dop
  version: default
  
paths:
  /api/api-access:
    get:
      description: list access
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessRsp'
          description: write description here
      summary: list access
      tags:
      - default
    post:
      description: create access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: create access
      tags:
      - default
  /api/api-access/{accessID}:
    delete:
      description: delete access
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: delete access
      tags:
      - default
    get:
      description: get access
      parameters:
      - in: query
        name: accessID
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessRspAccess'
          description: write description here
      summary: get access
      tags:
      - default
    parameters:
    - in: path
      name: accessID
      required: true
      schema:
        type: string
    put:
      description: update access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: update access
      tags:
      - default
  /api/api-app-services/{appID}:
    get:
      description: list access
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Header'
          description: write description here
      summary: list access
      tags:
      - default
    parameters:
    - in: path
      name: appID
      required: true
      schema:
        type: string
  /api/api-assets:
    get:
      description: 分页查询 API 资料
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIAssetPagingResponse'
          description: write description here
      summary: 分页查询 API 资料
      tags:
      - default
    post:
      description: 创建 API 资料
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIAssetCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 创建 API 资料
      tags:
      - default
  /api/api-assets/{assetID}:
    delete:
      description: 删除 API 资料
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 删除 API 资料
      tags:
      - default
    get:
      description: 查询 API 资料
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIAssetGetResponse'
          description: write description here
      summary: 查询 API 资料
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    put:
      description: 修改 API 资料
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAPIAssetReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 修改 API 资料
      tags:
      - default
  /api/api-assets/{assetID}/swagger-versions:
    get:
      description: list swagger versions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSwaggerVersionRsp'
          description: write description here
      summary: list swagger versions
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
  /api/api-assets/{assetID}/swagger-versions/{swaggerVersion}/attempt-test:
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: swaggerVersion
      required: true
      schema:
        type: string
    post:
      description: list access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APITestReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Header'
          description: write description here
      summary: list access
      tags:
      - default
  /api/api-assets/{assetID}/swagger-versions/{swaggerVersion}/clients:
    get:
      description: list swagger version clients
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSwaggerVersionRsp'
          description: write description here
      summary: list swagger version clients
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: swaggerVersion
      required: true
      schema:
        type: string
  /api/api-assets/{assetID}/swagger-versions/{swaggerVersion}/minors/{minor}/instantiations:
    get:
      description: get instantiations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAddonInstanceDetailResponse'
          description: write description here
      summary: get instantiations
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: swaggerVersion
      required: true
      schema:
        type: string
    - in: path
      name: minor
      required: true
      schema:
        type: string
    post:
      description: create instantiation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstantiationReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: create instantiation
      tags:
      - default
  /api/api-assets/{assetID}/swagger-versions/{swaggerVersion}/minors/{minor}/instantiations/{instantiationID}:
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: swaggerVersion
      required: true
      schema:
        type: string
    - in: path
      name: minor
      required: true
      schema:
        type: string
    - in: path
      name: instantiationID
      required: true
      schema:
        type: string
    put:
      description: update instantiation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstantiationReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: update instantiation
      tags:
      - default
  /api/api-assets/{assetID}/swagger-versions/{swaggerVersion}/slas:
    get:
      description: list SLA
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSLARsp'
          description: write description here
      summary: list SLA
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: swaggerVersion
      required: true
      schema:
        type: string
    post:
      description: create SLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSLAReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Header'
          description: write description here
      summary: create SLA
      tags:
      - default
  /api/api-assets/{assetID}/swagger-versions/{swaggerVersion}/slas/{slaID}:
    delete:
      description: delete SLA
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Header'
          description: write description here
      summary: delete SLA
      tags:
      - default
    get:
      description: get SLA
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSLAsRsp'
          description: write description here
      summary: get SLA
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: swaggerVersion
      required: true
      schema:
        type: string
    - in: path
      name: slaID
      required: true
      schema:
        type: string
    put:
      description: update SLA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSLAReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Header'
          description: write description here
      summary: update SLA
      tags:
      - default
  /api/api-assets/{assetID}/versions:
    get:
      description: 查询 API 资料版本列表
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetVersionRsp'
          description: write description here
      summary: 查询 API 资料版本列表
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    post:
      description: 新增 API 资料版本
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIAssetVersionCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAPIAssetVersionBody'
          description: write description here
      summary: 新增 API 资料版本
      tags:
      - default
  /api/api-assets/{assetID}/versions/{versionID}:
    delete:
      description: 删除指定版本的 API 资料
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 删除指定版本的 API 资料
      tags:
      - default
    get:
      description: 查询 API 资料版本详情
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetVersionRsp'
          description: write description here
      summary: 查询 API 资料版本详情
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: versionID
      required: true
      schema:
        type: string
    put:
      description: 修改指定版本的 API 资料
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetVersionReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Header'
          description: write description here
      summary: 修改指定版本的 API 资料
      tags:
      - default
  /api/api-assets/{assetID}/versions/{versionID}/export:
    get:
      description: 导出 swagger 文本
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 导出 swagger 文本
      tags:
      - default
    parameters:
    - in: path
      name: assetID
      required: true
      schema:
        type: string
    - in: path
      name: versionID
      required: true
      schema:
        type: string
  /api/api-clients:
    get:
      description: list my client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: list my client
      tags:
      - default
    post:
      description: create client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: create client
      tags:
      - default
  /api/api-clients/{clientID}:
    delete:
      description: delete client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: delete client
      tags:
      - default
    get:
      description: get client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: get client
      tags:
      - default
    parameters:
    - in: path
      name: clientID
      required: true
      schema:
        type: string
    put:
      description: get client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: get client
      tags:
      - default
  /api/api-clients/{clientID}/contracts:
    get:
      description: list contract
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContractsRsp'
          description: write description here
      summary: list contract
      tags:
      - default
    parameters:
    - in: path
      name: clientID
      required: true
      schema:
        type: string
    post:
      description: create contract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContractReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: create contract
      tags:
      - default
  /api/api-clients/{clientID}/contracts/{contractID}:
    delete:
      description: delete contract
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: delete contract
      tags:
      - default
    get:
      description: get contract
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: get contract
      tags:
      - default
    parameters:
    - in: path
      name: clientID
      required: true
      schema:
        type: string
    - in: path
      name: contractID
      required: true
      schema:
        type: string
    put:
      description: update contract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: update contract
      tags:
      - default
  /api/api-clients/{clientID}/contracts/{contractID}/operation-records:
    get:
      description: list contract records
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContractRecordsRsp'
          description: write description here
      summary: list contract records
      tags:
      - default
    parameters:
    - in: path
      name: clientID
      required: true
      schema:
        type: string
    - in: path
      name: contractID
      required: true
      schema:
        type: string
  /api/api-instantiations:
    get:
      description: get instantiations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: get instantiations
      tags:
      - default
  /api/apim/{treeName}/filetree:
    get:
      description: list file tree nodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: list file tree nodes
      tags:
      - default
    parameters:
    - in: path
      name: treeName
      required: true
      schema:
        type: string
    post:
      description: create file tree node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIDocCreateNodeReq'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: create file tree node
      tags:
      - default
  /api/apim/{treeName}/filetree/{inode}:
    delete:
      description: delete file tree node
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: delete file tree node
      tags:
      - default
    get:
      description: get file tree node
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: get file tree node
      tags:
      - default
    parameters:
    - in: path
      name: treeName
      required: true
      schema:
        type: string
    - in: path
      name: inode
      required: true
      schema:
        type: string
    put:
      description: update file tree node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: update file tree node
      tags:
      - default
  /api/apim/{treeName}/filetree/{inode}/actions/{action}:
    parameters:
    - in: path
      name: treeName
      required: true
      schema:
        type: string
    - in: path
      name: inode
      required: true
      schema:
        type: string
    - in: path
      name: action
      required: true
      schema:
        type: string
    post:
      description: mv or cp file tree node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: mv or cp file tree node
      tags:
      - default
  /api/apim/metrics/{*}:
    get:
      description: 转发 metrics 请求
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 转发 metrics 请求
      tags:
      - default
    parameters:
    - in: path
      name: '*'
      required: true
      schema:
        type: string
  /api/apim/operations:
    get:
      description: 搜索集市中的接口
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: write description here
      summary: 搜索集市中的接口
      tags:
      - default
  /api/apim/operations/{id}:
    get:
      description: 搜索集市中的接口
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: write description here
      summary: 搜索集市中的接口
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/apim/validate-swagger:
    post:
      description: validate swagger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: validate swagger
      tags:
      - default
  /api/apitests/{id}:
    get:
      description: 'summary: 获取apitest详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTestsGetResponse'
          description: write description here
      summary: 'summary: 获取apitest详情'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 更新 api test的信息
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTestsUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTestsUpdateResponse'
          description: write description here
      summary: 更新 api test的信息
      tags:
      - default
  /api/apitests/actions/attempt-test:
    post:
      description: 'summary: 手动尝试执行单个 usecase API 测试'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APITestsAttemptRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITestsAttemptResponse'
          description: write description here
      summary: 'summary: 手动尝试执行单个 usecase API 测试'
      tags:
      - default
  /api/apitests/actions/cancel-testplan:
    post:
      description: 'summary: 取消测试计划'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTestCancelRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTestCancelResponse'
          description: write description here
      summary: 'summary: 取消测试计划'
      tags:
      - default
  /api/apitests/pipeline/{pipelineID}/task/{taskID}/logs:
    get:
      description: 'summary: 查询测试记录的pipeline task 日志'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSpotLogResponse'
          description: write description here
      summary: 'summary: 查询测试记录的pipeline task 日志'
      tags:
      - default
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    - in: path
      name: taskID
      required: true
      schema:
        type: string
  /api/apitests/pipeline/{pipelineId}:
    get:
      description: 'summary: 查询测试记录的pipeline详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDetailResponse'
          description: write description here
      summary: 'summary: 查询测试记录的pipeline详情'
      tags:
      - default
    parameters:
    - in: path
      name: pipelineId
      required: true
      schema:
        type: string
  /api/applications:
    post:
      description: 'summary: 创建应用'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCreateResponse'
          description: write description here
      summary: 'summary: 创建应用'
      tags:
      - default
  /api/applications/{application}/actions/get-publish-item-relations:
    get:
      description: 'summary: 查询应用发布关联'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAppPublishItemRelationResponse'
          description: write description here
      summary: 'summary: 查询应用发布关联'
      tags:
      - default
    parameters:
    - in: path
      name: application
      required: true
      schema:
        type: string
  /api/applications/{application}/actions/update-publish-item-relations:
    parameters:
    - in: path
      name: application
      required: true
      schema:
        type: string
    post:
      description: 'summary: 更新应用发布关联'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppPublishItemRelationRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppPublishItemRelationResponse'
          description: write description here
      summary: 'summary: 更新应用发布关联'
      tags:
      - default
  /api/applications/{applicationId}:
    delete:
      description: 'summary: 删除应用'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeleteResponse'
          description: write description here
      summary: 'summary: 删除应用'
      tags:
      - default
    parameters:
    - in: path
      name: applicationId
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新应用'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUpdateResponse'
          description: write description here
      summary: 'summary: 更新应用'
      tags:
      - default
  /api/applications/{applicationId}/actions/init:
    parameters:
    - in: path
      name: applicationId
      required: true
      schema:
        type: string
    put:
      description: 'summary: 应用初始化'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationInitRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 应用初始化'
      tags:
      - default
  /api/autotests/filetree:
    get:
      description: 查询自动化测试目录树节点列表
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeListResponse'
          description: write description here
      summary: 查询自动化测试目录树节点列表
      tags:
      - default
    post:
      description: 创建自动化测试目录树节点
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFileTreeNodeCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeCreateResponse'
          description: write description here
      summary: 创建自动化测试目录树节点
      tags:
      - default
  /api/autotests/filetree/{inode}:
    delete:
      description: 删除自动化测试目录树节点
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeDeleteResponse'
          description: write description here
      summary: 删除自动化测试目录树节点
      tags:
      - default
    get:
      description: 查询自动化测试目录树节点详情
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeGetResponse'
          description: write description here
      summary: 查询自动化测试目录树节点详情
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
    put:
      description: 更新自动化测试目录树节点基础信息
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFileTreeNodeUpdateBasicInfoRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeUpdateBasicInfoResponse'
          description: write description here
      summary: 更新自动化测试目录树节点基础信息
      tags:
      - default
  /api/autotests/filetree/{inode}/actions/copy:
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
    post:
      description: 复制自动化测试目录树节点
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFileTreeNodeCopyRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeCopyResponse'
          description: write description here
      summary: 复制自动化测试目录树节点
      tags:
      - default
  /api/autotests/filetree/{inode}/actions/find-ancestors:
    get:
      description: 自动化测试目录树节点寻祖
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeFindAncestorsResponse'
          description: write description here
      summary: 自动化测试目录树节点寻祖
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
  /api/autotests/filetree/{inode}/actions/get-histories:
    get:
      description: 查询自动化测试的历史记录
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 查询自动化测试的历史记录
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
  /api/autotests/filetree/{inode}/actions/move:
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
    post:
      description: 移动自动化测试目录树节点失败
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFileTreeNodeMoveRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeMoveResponse'
          description: write description here
      summary: 移动自动化测试目录树节点失败
      tags:
      - default
  /api/autotests/filetree/{inode}/actions/save-pipeline:
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
    post:
      description: 保存自动化测试用例流水线
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestCaseSavePipelineRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestCaseSavePipelineResponse'
          description: write description here
      summary: 保存自动化测试用例流水线
      tags:
      - default
  /api/autotests/filetree/actions/fuzzy-search:
    get:
      description: 自动化测试目录树节点模糊搜索
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeFuzzySearchResponse'
          description: write description here
      summary: 自动化测试目录树节点模糊搜索
      tags:
      - default
  /api/autotests/global-configs:
    get:
      description: 查询自动化测试全局配置列表
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestGlobalConfigListResponse'
          description: write description here
      summary: 查询自动化测试全局配置列表
      tags:
      - default
    post:
      description: 创建自动化测试全局配置
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestGlobalConfigCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestGlobalConfigCreateResponse'
          description: write description here
      summary: 创建自动化测试全局配置
      tags:
      - default
  /api/autotests/global-configs/{ns}:
    delete:
      description: 删除自动化测试全局配置
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestGlobalConfigDeleteResponse'
          description: write description here
      summary: 删除自动化测试全局配置
      tags:
      - default
    parameters:
    - in: path
      name: ns
      required: true
      schema:
        type: string
    put:
      description: 更新自动化测试全局配置
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestGlobalConfigUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestGlobalConfigUpdateResponse'
          description: write description here
      summary: 更新自动化测试全局配置
      tags:
      - default
  /api/autotests/pipeline-snippets/actions/batch-query-snippet-yml:
    post:
      description: 批量查询自动化测试用例流水线文件
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestCaseSavePipelineRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 批量查询自动化测试用例流水线文件
      tags:
      - default
  /api/autotests/pipeline-snippets/actions/query-snippet-yml:
    post:
      description: 查询自动化测试用例流水线文件
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestCaseSavePipelineRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 查询自动化测试用例流水线文件
      tags:
      - default
  /api/autotests/scenes/{sceneID}/actions/cancel:
    parameters:
    - in: path
      name: sceneID
      required: true
      schema:
        type: string
    post:
      description: 自动化测试场景取消执行
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 自动化测试场景取消执行
      tags:
      - default
  /api/autotests/scenes/{sceneID}/actions/execute:
    parameters:
    - in: path
      name: sceneID
      required: true
      schema:
        type: string
    post:
      description: 自动化测试场景执行
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 自动化测试场景执行
      tags:
      - default
  /api/autotests/scenesets/actions/import:
    post:
      description: 'summary: 导入自动化测试场景集'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestSceneSetImportRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestSceneSetImportResponse'
          description: write description here
      summary: 'summary: 导入自动化测试场景集'
      tags:
      - default
  /api/autotests/spaces/{id}:
    get:
      description: 'summary: 获取autotest-space详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestSpaceResponse'
          description: write description here
      summary: 'summary: 获取autotest-space详情'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/autotests/spaces/actions/export:
    get:
      description: 'summary: 导出自动化测试空间'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestSpaceExportResponse'
          description: write description here
      summary: 'summary: 导出自动化测试空间'
      tags:
      - default
  /api/autotests/spaces/actions/import:
    post:
      description: 'summary: 导入自动化测试空间'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTestSpaceImportRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTestSpaceImportResponse'
          description: write description here
      summary: 'summary: 导入自动化测试空间'
      tags:
      - default
  /api/autotests/testplans:
    post:
      description: 自动化测试计划列表
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 自动化测试计划列表
      tags:
      - default
  /api/autotests/testplans/{testPlanID}/actions/execute:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    post:
      description: 自动化测试计划执行
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 自动化测试计划执行
      tags:
      - default
  /api/branch-rules:
    get:
      description: 'summary: 查询分支规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBranchRuleResponse'
          description: write description here
      summary: 'summary: 查询分支规则'
      tags:
      - default
    post:
      description: 'summary: 创建分支规则'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBranchRuleRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBranchRuleResponse'
          description: write description here
      summary: 'summary: 创建分支规则'
      tags:
      - default
  /api/branch-rules/{id}:
    delete:
      description: 'summary: 删除分支规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBranchRuleResponse'
          description: write description here
      summary: 'summary: 删除分支规则'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新分支规则'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBranchRuleRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBranchRuleResponse'
          description: write description here
      summary: 'summary: 更新分支规则'
      tags:
      - default
  /api/certificates:
    post:
      description: 'summary: 创建证书'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCreateResponse'
          description: write description here
      summary: 'summary: 创建证书'
      tags:
      - default
  /api/certificates/{certificateID}:
    get:
      description: 'summary: 获取证书详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetailResponse'
          description: write description here
      summary: 'summary: 获取证书详情'
      tags:
      - default
    parameters:
    - in: path
      name: certificateID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新证书'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateUpdateResponse'
          description: write description here
      summary: 'summary: 更新证书'
      tags:
      - default
  /api/certificates/{certificatesID}:
    delete:
      description: 'summary: 删除证书'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDeleteResponse'
          description: write description here
      summary: 'summary: 删除证书'
      tags:
      - default
    parameters:
    - in: path
      name: certificatesID
      required: true
      schema:
        type: string
  /api/certificates/actions/application-cancel-quote:
    delete:
      description: 'summary: 应用取消引用证书'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 应用取消引用证书'
      tags:
      - default
  /api/certificates/actions/application-quote:
    post:
      description: 'summary: 应用引用证书'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateQuoteRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 应用引用证书'
      tags:
      - default
  /api/certificates/actions/list-application-quotes:
    get:
      description: 'summary: 获取指定应用的所有引用证书列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagingAppCertificateDTO'
          description: write description here
      summary: 'summary: 获取指定应用的所有引用证书列表'
      tags:
      - default
  /api/certificates/actions/list-certificates:
    get:
      description: 'summary: 查询所有证书列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListResponse'
          description: write description here
      summary: 'summary: 查询所有证书列表'
      tags:
      - default
  /api/certificates/actions/push-configs:
    post:
      description: 'summary: 推送应用证书到配置管理'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushCertificateConfigsRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 推送应用证书到配置管理'
      tags:
      - default
  /api/cicd-crons:
    get:
      description: 'summary: 定时 pipeline 列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCronListResponse'
          description: write description here
      summary: 'summary: 定时 pipeline 列表'
      tags:
      - default
  /api/cicd-crons/{cronID}/actions/start:
    parameters:
    - in: path
      name: cronID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 开始定时 pipeline'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCronStartResponse'
          description: write description here
      summary: 'summary: 开始定时 pipeline'
      tags:
      - default
  /api/cicd-crons/{cronID}/actions/stop:
    parameters:
    - in: path
      name: cronID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 停止定时 pipeline'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCronStopResponse'
          description: write description here
      summary: 'summary: 停止定时 pipeline'
      tags:
      - default
  /api/cicd-pipeline/filetree:
    get:
      description: 'summary: 查询子节点列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeListRequest'
          description: write description here
      summary: 'summary: 查询子节点列表'
      tags:
      - default
    post:
      description: 'summary: 创建节点'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeCreateRequest'
          description: write description here
      summary: 'summary: 创建节点'
      tags:
      - default
  /api/cicd-pipeline/filetree/{inode}:
    delete:
      description: 'summary: 删除节点'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeDeleteRequest'
          description: write description here
      summary: 'summary: 删除节点'
      tags:
      - default
    get:
      description: 'summary: 查询节点详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeGetRequest'
          description: write description here
      summary: 'summary: 查询节点详情'
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
  /api/cicd-pipeline/filetree/{inode}/actions/find-ancestors:
    get:
      description: 'summary: 查询所有父节点'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeFindAncestorsRequest'
          description: write description here
      summary: 'summary: 查询所有父节点'
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
  /api/cicd-pipeline/filetree/actions/fuzzy-search:
    get:
      description: 'summary: 模糊搜索节点'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileTreeNodeFuzzySearchRequest'
          description: write description here
      summary: 'summary: 模糊搜索节点'
      tags:
      - default
  /api/cicd-pipeline/filetree/actions/get-inode-by-pipeline:
    get:
      description: 'summary: 根据 pipeline id 查询流水线'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 根据 pipeline id 查询流水线'
      tags:
      - default
  /api/cicd/{pipelineID}/tasks/{taskID}/logs:
    get:
      description: 'summary: cicd 获取任务日志'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: cicd 获取任务日志'
      tags:
      - default
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    - in: path
      name: taskID
      required: true
      schema:
        type: string
  /api/cicd/{pipelineID}/tasks/{taskID}/logs/actions/download:
    get:
      description: 'summary: cicd 下载任务日志'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: cicd 下载任务日志'
      tags:
      - default
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    - in: path
      name: taskID
      required: true
      schema:
        type: string
  /api/cicds:
    get:
      description: 'summary: pipeline 列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelinePageListResponse'
          description: write description here
      summary: 'summary: pipeline 列表'
      tags:
      - default
    post:
      description: 'summary: 创建 pipeline'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCreateResponse'
          description: write description here
      summary: 'summary: 创建 pipeline'
      tags:
      - default
  /api/cicds-project:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      tags:
      - default
  /api/cicds-project/actions/pipeline-detail:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      tags:
      - default
  /api/cicds/{pipelineID}:
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 操作 pipeline'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineOperateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineOperateResponse'
          description: write description here
      summary: 'summary: 操作 pipeline'
      tags:
      - default
  /api/cicds/{pipelineID}/actions/cancel:
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 取消 pipeline'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCancelResponse'
          description: write description here
      summary: 'summary: 取消 pipeline'
      tags:
      - default
  /api/cicds/{pipelineID}/actions/rerun:
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    post:
      description: 'summary: pipeline 全流程重试'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRerunResponse'
          description: write description here
      summary: 'summary: pipeline 全流程重试'
      tags:
      - default
  /api/cicds/{pipelineID}/actions/rerun-failed:
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    post:
      description: 'summary: pipeline 从失败节点处开始重试'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineRerunFailedResponse'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: pipeline 从失败节点处开始重试'
      tags:
      - default
  /api/cicds/{pipelineID}/actions/run:
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 开始 pipeline'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRunResponse'
          description: write description here
      summary: 'summary: 开始 pipeline'
      tags:
      - default
  /api/cicds/{pipelineid}/actions/get-branch-rule:
    get:
      description: 获取pipeline对应的分支规则
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetBranchRuleResponse'
          description: write description here
      summary: 获取pipeline对应的分支规则
      tags:
      - default
    parameters:
    - in: path
      name: pipelineid
      required: true
      schema:
        type: string
  /api/cicds/actions/app-all-valid-branch-workspaces:
    get:
      description: 'summary: 获取应用下所有符合 gitflow 规范的分支列表，以及每个分支对应的 workspace'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineAppAllValidBranchWorkspaceResponse'
          description: write description here
      summary: 'summary: 获取应用下所有符合 gitflow 规范的分支列表，以及每个分支对应的 workspace'
      tags:
      - default
  /api/cicds/actions/app-invoked-combos:
    get:
      description: 'summary: pipeline 侧边栏 combo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineInvokedComboResponse'
          description: write description here
      summary: 'summary: pipeline 侧边栏 combo'
      tags:
      - default
  /api/cicds/actions/fetch-config-namespaces:
    get:
      description: 'summary: 获取应用级别的配置的命名空间'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineConfigNamespacesFetchResponse'
          description: write description here
      summary: 'summary: 获取应用级别的配置的命名空间'
      tags:
      - default
  /api/cicds/actions/fetch-pipeline-id:
    get:
      description: 'summary: 根据 branch & appID 获取 pipelineID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 根据 branch & appID 获取 pipelineID'
      tags:
      - default
  /api/cicds/actions/list-workspaces:
    get:
      description: 'summary: 获取应用级别的配置的环境名称'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineConfigNamespacesFetchResponse'
          description: write description here
      summary: 'summary: 获取应用级别的配置的环境名称'
      tags:
      - default
  /api/cicds/actions/pipeline-detail:
    get:
      description: 'summary: pipeline 详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: pipeline 详情'
      tags:
      - default
  /api/cicds/actions/pipelineYmls:
    get:
      description: 'summary: pipeline yml列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CICDPipelineYmlListResponse'
          description: write description here
      summary: 'summary: pipeline yml列表'
      tags:
      - default
  /api/cicds/multinamespace/configs:
    post:
      description: 'summary: 获取Pipeline指定命名空间的所有配置'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 获取Pipeline指定命名空间的所有配置'
      tags:
      - default
  /api/code-coverage/actions/end-callBack:
    post:
      description: 'summary: end callback'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeCoverageUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: end callback'
      tags:
      - default
  /api/code-coverage/actions/ready-callBack:
    post:
      description: 'summary: ready callback'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeCoverageUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: ready callback'
      tags:
      - default
  /api/code-coverage/actions/report-callBack:
    post:
      description: 'summary: end callback'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeCoverageUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: end callback'
      tags:
      - default
  /api/code-coverage/actions/status:
    get:
      description: 'summary: status'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: status'
      tags:
      - default
  /api/comments:
    get:
      description: 'summary: 工单评论列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
          description: write description here
      summary: 'summary: 工单评论列表'
      tags:
      - tickets
    post:
      description: 'summary: 创建工单评论'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCreateResponse'
          description: write description here
      summary: 'summary: 创建工单评论'
      tags:
      - tickets
  /api/comments/{commentID}:
    parameters:
    - in: path
      name: commentID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新工单评论'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentUpdateResponse'
          description: write description here
      summary: 'summary: 更新工单评论'
      tags:
      - tickets
  /api/config/actions/export:
    get:
      description: 导出配置
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 导出配置
      tags:
      - default
  /api/config/actions/import:
    post:
      description: 导入配置
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 导入配置
      tags:
      - default
  /api/config/namespace/fix-namespace-data-err:
    get:
      description: 'summary: 修复namespace数据缺少'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 修复namespace数据缺少'
      tags:
      - default
  /api/configmanage/configs:
    delete:
      description: 'summary: 删除指定命名空间下的某个配置'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除指定命名空间下的某个配置'
      tags:
      - default
    get:
      description: 'summary: 获取指定命名空间的所有配置'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 获取指定命名空间的所有配置'
      tags:
      - default
    post:
      description: 'summary: 新增指定命名空间下的一个或多个配置'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 新增指定命名空间下的一个或多个配置'
      tags:
      - default
    put:
      description: 'summary: 修改指定命名空间下的一个或多个配置'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 修改指定命名空间下的一个或多个配置'
      tags:
      - default
  /api/configmanage/configs/deployment:
    get:
      description: 'summary: 获取指定命名空间的所有部署配置'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 获取指定命名空间的所有部署配置'
      tags:
      - default
  /api/configmanage/multinamespace/configs:
    post:
      description: 'summary: 获取多个命名空间的所有配置'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 获取多个命名空间的所有配置'
      tags:
      - default
  /api/configmanage/namespace:
    delete:
      description: 'summary: 删除一个配置的命名空间'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除一个配置的命名空间'
      tags:
      - default
    post:
      description: 'summary: 新增一个配置的命名空间'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 新增一个配置的命名空间'
      tags:
      - default
  /api/issues:
    get:
      description: 'summary: 分页查询 ISSUE'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePagingRequest'
          description: write description here
      summary: 'summary: 分页查询 ISSUE'
      tags:
      - default
    post:
      description: 'summary: 创建 ISSUE'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCreateResponse'
          description: write description here
      summary: 'summary: 创建 ISSUE'
      tags:
      - default
  /api/issues/{id}:
    delete:
      description: 'summary: 删除 ISSUE'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除 ISSUE'
      tags:
      - default
    get:
      description: 'summary: 查询 ISSUE'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueGetResponse'
          description: write description here
      summary: 'summary: 查询 ISSUE'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新 ISSUE'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueUpdateResponse'
          description: write description here
      summary: 'summary: 更新 ISSUE'
      tags:
      - default
  /api/issues/{id}/actions/batch-update-subscriber:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'summary: batch update issue subscriber'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: batch update issue subscriber'
      tags:
      - default
  /api/issues/{id}/actions/subscribe:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'summary: subscribe issue'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: subscribe issue'
      tags:
      - default
  /api/issues/{id}/actions/unsubscribe:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'summary: unsubscribe issue'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: unsubscribe issue'
      tags:
      - default
  /api/issues/{id}/relations:
    get:
      description: 'summary: 创建 issue 关联关系'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRelationGetResponse'
          description: write description here
      summary: 'summary: 创建 issue 关联关系'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'summary: 创建 issue 关联关系'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueRelationCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建 issue 关联关系'
      tags:
      - default
  /api/issues/{id}/relations/{relatedIssueID}:
    delete:
      description: 'summary: 删除 issue 关联关系'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除 issue 关联关系'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    - in: path
      name: relatedIssueID
      required: true
      schema:
        type: string
  /api/issues/{id}/streams:
    get:
      description: 'summary: 分页查询 ISSUE 流水'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStreamPagingResponse'
          description: write description here
      summary: 'summary: 分页查询 ISSUE 流水'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'summary: 创建 issue 评论'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentIssueStreamCreateRequest'
          description: write description here
      summary: 'summary: 创建 issue 评论'
      tags:
      - default
  /api/issues/action/download/{uuid}:
    get:
      description: 'summary: 文件下载，在 path 中指定具体文件'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 文件下载，在 path 中指定具体文件'
      tags:
      - default
    parameters:
    - in: path
      name: uuid
      required: true
      schema:
        type: string
  /api/issues/action/get-stage:
    get:
      description: 'summary: 查询 STAGE'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStageResponse'
          description: write description here
      summary: 'summary: 查询 STAGE'
      tags:
      - default
  /api/issues/action/update-stage:
    put:
      description: 'summary: 创建 STAGE'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueStageRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建 STAGE'
      tags:
      - default
  /api/issues/actions/batch-update:
    put:
      description: 'summary: 批量更新 ISSUE'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBatchUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 批量更新 ISSUE'
      tags:
      - default
  /api/issues/actions/bug-percentage:
    get:
      description: 'summary: 查询 ISSUE的缺陷率'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueBugPercentageResponse'
          description: write description here
      summary: 'summary: 查询 ISSUE的缺陷率'
      tags:
      - default
  /api/issues/actions/bug-severity-percentage:
    get:
      description: 'summary: 查询 ISSUE的缺陷等级分布'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IssueBugSeverityPercentageResponse'
                type: array
          description: write description here
      summary: 'summary: 查询 ISSUE的缺陷等级分布'
      tags:
      - default
  /api/issues/actions/bug-status-percentage:
    get:
      description: 'summary: 查询 ISSUE的缺陷状态分布'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IssueBugStatusPercentageResponse'
                type: array
          description: write description here
      summary: 'summary: 查询 ISSUE的缺陷状态分布'
      tags:
      - default
  /api/issues/actions/create-panel:
    post:
      description: 'summary: 更新 issue panel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePanelRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新 issue panel'
      tags:
      - default
  /api/issues/actions/create-property:
    post:
      description: 'summary: 创建 自定义字段'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePropertyCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建 自定义字段'
      tags:
      - default
  /api/issues/actions/create-property-instance:
    post:
      description: 'summary: 创建 自定义字段实例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePropertyRelationCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建 自定义字段实例'
      tags:
      - default
  /api/issues/actions/create-state:
    post:
      description: 'summary: 创建 issueState '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueStateCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建 issueState'
      tags:
      - default
  /api/issues/actions/delete-panel:
    delete:
      description: 'summary: 新建 issue panel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePanelDeleteResponse'
          description: write description here
      summary: 'summary: 新建 issue panel'
      tags:
      - default
  /api/issues/actions/delete-property:
    delete:
      description: 'summary: 删除 自定义字段'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePropertyResponse'
          description: write description here
      summary: 'summary: 删除 自定义字段'
      tags:
      - default
  /api/issues/actions/delete-state:
    delete:
      description: 'summary: 删除 issueState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStateDeleteResponse'
          description: write description here
      summary: 'summary: 删除 issueState'
      tags:
      - default
  /api/issues/actions/export-excel:
    get:
      description: 导出事件到 excel
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 导出事件到 excel
      tags:
      - default
  /api/issues/actions/get-panel:
    get:
      description: 'summary: 查询 issue panel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePanelGetResponse'
          description: write description here
      summary: 'summary: 查询 issue panel'
      tags:
      - default
  /api/issues/actions/get-properties:
    get:
      description: 'summary: 获取 自定义字段'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePropertiesResponse'
          description: write description here
      summary: 'summary: 获取 自定义字段'
      tags:
      - default
  /api/issues/actions/get-properties-time:
    get:
      description: 'summary: 获取 自定义字段 更新时间'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePropertyUpdateTimesResponse'
          description: write description here
      summary: 'summary: 获取 自定义字段 更新时间'
      tags:
      - default
  /api/issues/actions/get-property-instance:
    get:
      description: 'summary: 获取 自定义字段实例'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePropertyRelationGetResponse'
          description: write description here
      summary: 'summary: 获取 自定义字段实例'
      tags:
      - default
  /api/issues/actions/get-state-relations:
    get:
      description: 'summary: 查询 工作流'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStateRelationGetResponse'
          description: write description here
      summary: 'summary: 查询 工作流'
      tags:
      - default
  /api/issues/actions/get-states:
    get:
      description: 'summary: 查询 issueState 主状态详情关系'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStateTypeBelongGetResponse'
          description: write description here
      summary: 'summary: 查询 issueState 主状态详情关系'
      tags:
      - default
  /api/issues/actions/import-excel:
    post:
      description: 导入事件到 excel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueImportExcelRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueImportExcelResponse'
          description: write description here
      summary: 导入事件到 excel
      tags:
      - default
  /api/issues/actions/man-hour:
    get:
      description: 'summary: 查询 ISSUE下所有的任务总和'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueManHourSumResponse'
          description: write description here
      summary: 'summary: 查询 ISSUE下所有的任务总和'
      tags:
      - default
  /api/issues/actions/update-issue-type:
    put:
      description: 'summary: 转换issue类型'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 转换issue类型'
      tags:
      - default
  /api/issues/actions/update-panel:
    put:
      description: 'summary: 新建 issue panel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePanelRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 新建 issue panel'
      tags:
      - default
  /api/issues/actions/update-panel-issue:
    put:
      description: 'summary: 更新 panel里的issue关联'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePanelRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新 panel里的issue关联'
      tags:
      - default
  /api/issues/actions/update-properties-index:
    put:
      description: 'summary: 更新 自定义字段 优先级'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePropertyIndexUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePropertiesResponse'
          description: write description here
      summary: 'summary: 更新 自定义字段 优先级'
      tags:
      - default
  /api/issues/actions/update-property:
    put:
      description: 'summary: 更新 自定义字段'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePropertyUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新 自定义字段'
      tags:
      - default
  /api/issues/actions/update-property-instance:
    put:
      description: 'summary: 更新 自定义字段实例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuePropertyRelationUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新 自定义字段实例'
      tags:
      - default
  /api/issues/actions/update-state-relation:
    put:
      description: 'summary: 更新 工作流 '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueStateUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStateRelationGetResponse'
          description: write description here
      summary: 'summary: 更新 工作流'
      tags:
      - default
  /api/iterations:
    get:
      description: 'summary: 分页查询迭代'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IterationPagingResponse'
          description: write description here
      summary: 'summary: 分页查询迭代'
      tags:
      - default
    post:
      description: 'summary: 创建迭代'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IterationCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IterationCreateResponse'
          description: write description here
      summary: 'summary: 创建迭代'
      tags:
      - default
  /api/iterations/{id}:
    delete:
      description: 'summary: 删除迭代'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除迭代'
      tags:
      - default
    get:
      description: 'summary: 迭代详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IterationGetResponse'
          description: write description here
      summary: 'summary: 迭代详情'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新迭代'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IterationUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IterationUpdateResponse'
          description: write description here
      summary: 'summary: 更新迭代'
      tags:
      - default
  /api/lib-references:
    get:
      description: 'summary: 库引用列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibReferenceListResponse'
          description: write description here
      summary: 'summary: 库引用列表'
      tags:
      - default
    post:
      description: 'summary: 创建库引用'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibReferenceCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibReferenceCreateResponse'
          description: write description here
      summary: 'summary: 创建库引用'
      tags:
      - default
  /api/lib-references/{id}:
    delete:
      description: 'summary: 删除库引用'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除库引用'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/lib-references/actions/fetch-versions:
    get:
      description: 'summary: 获取模块订阅版本'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 获取模块订阅版本'
      tags:
      - default
  /api/members/actions/list-roles:
    get:
      description: 'summary: 获取成员角色列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRoleListResponse'
          description: write description here
      summary: 'summary: 获取成员角色列表'
      tags:
      - default
  /api/my-publish-items:
    get:
      description: 'summary: 查询我的发布'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPublishItemResponse'
          description: write description here
      summary: 'summary: 查询我的发布'
      tags:
      - default
  /api/orgs:
    get:
      description: 'summary: 查询组织'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSearchResponse'
          description: write description here
      summary: 'summary: 查询组织'
      tags:
      - default
    post:
      description: 'summary: 创建组织'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCreateResponse'
          description: write description here
      summary: 'summary: 创建组织'
      tags:
      - default
  /api/orgs/{orgID}:
    delete:
      description: 'summary: 删除企业'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除企业'
      tags:
      - default
    get:
      description: 'summary: 获取组织'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSearchResponse'
          description: write description here
      summary: 'summary: 获取组织'
      tags:
      - default
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新组织'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUpdateRequestBody'
          description: write description here
      summary: 'summary: 更新组织'
      tags:
      - default
  /api/orgs/{orgID}/actions/create-publisher:
    get:
      description: 'summary: 创建发布商'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建发布商'
      tags:
      - default
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 创建发布商'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建发布商'
      tags:
      - default
  /api/orgs/{orgID}/nexus:
    get:
      description: 'summary: 获取企业 nexus 信息'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgNexusGetResponse'
          description: write description here
      summary: 'summary: 获取企业 nexus 信息'
      tags:
      - default
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
  /api/orgs/{orgID}/projects/{projectID}/package/actions/export:
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
    - in: path
      name: projectID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 导出项目工程包'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportProjectPackageRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 导出项目工程包'
      tags:
      - default
  /api/orgs/{orgID}/projects/{projectID}/package/actions/import:
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
    - in: path
      name: projectID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 导入项目工程包'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProjectPackageRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 导入项目工程包'
      tags:
      - default
  /api/orgs/{orgID}/projects/{projectID}/template/actions/export:
    get:
      description: 'summary: 导出项目模版'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 导出项目模版'
      tags:
      - default
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
    - in: path
      name: projectID
      required: true
      schema:
        type: string
  /api/orgs/{orgID}/projects/{projectID}/template/actions/import:
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
    - in: path
      name: projectID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 导入项目模版'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProjectTemplateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 导入项目模版'
      tags:
      - default
  /api/orgs/{orgID}/show-nexus-password:
    get:
      description: 'summary: 获取企业 nexus 密码'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgNexusShowPasswordResponse'
          description: write description here
      summary: 'summary: 获取企业 nexus 密码'
      tags:
      - default
    parameters:
    - in: path
      name: orgID
      required: true
      schema:
        type: string
  /api/orgs/actions/fetch-resources:
    get:
      description: 'summary: 获取企业资源使用'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgResourceInfo'
          description: write description here
      summary: 'summary: 获取企业资源使用'
      tags:
      - default
  /api/orgs/actions/get-by-domain:
    get:
      description: 'summary: 通过域名获取组织'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgGetByDomainResponse'
          description: write description here
      summary: 'summary: 通过域名获取组织'
      tags:
      - default
  /api/orgs/actions/list-public:
    get:
      description: 'summary: 查询公开组织'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSearchResponse'
          description: write description here
      summary: 'summary: 查询公开组织'
      tags:
      - default
  /api/project-pipeline/filetree:
    get:
      description: 'summary: 查询节点列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 查询节点列表'
      tags:
      - default
    post:
      description: 'summary: 创建节点'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 创建节点'
      tags:
      - default
  /api/project-pipeline/filetree/{inode}:
    delete:
      description: 'summary: 删除节点'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除节点'
      tags:
      - default
    get:
      description: 'summary: 查询节点详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 查询节点详情'
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
  /api/project-pipeline/filetree/{inode}/actions/find-ancestors:
    get:
      description: 'summary: 寻祖节点'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 寻祖节点'
      tags:
      - default
    parameters:
    - in: path
      name: inode
      required: true
      schema:
        type: string
  /api/project-pipeline/filetree/actions/fuzzy-search:
    get:
      description: 'summary: 模糊搜索节点'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 模糊搜索节点'
      tags:
      - default
  /api/projects:
    get:
      description: 'summary: 查询项目'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
          description: write description here
      summary: 'summary: 查询项目'
      tags:
      - default
    post:
      description: 'summary: 创建项目'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateResponse'
          description: write description here
      summary: 'summary: 创建项目'
      tags:
      - default
  /api/projects/{projectID}/applications-resources:
    get:
      description: the list of applications resources in the project
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: the list of applications resources in the project
      tags:
      - default
    parameters:
    - in: path
      name: projectID
      required: true
      schema:
        type: string
  /api/projects/{projectID}/test-reports:
    parameters:
    - in: path
      name: projectID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 创建测试报告记录'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestReportRecord'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestReportRecordResponse'
          description: write description here
      summary: 'summary: 创建测试报告记录'
      tags:
      - default
  /api/projects/{projectID}/test-reports/{id}:
    get:
      description: 'summary: 获取单个测试报告记录'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestReportRecordResponse'
          description: write description here
      summary: 'summary: 获取单个测试报告记录'
      tags:
      - default
    parameters:
    - in: path
      name: projectID
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/projects/{projectId}:
    delete:
      description: 'summary: 删除项目'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDeleteResponse'
          description: write description here
      summary: 'summary: 删除项目'
      tags:
      - default
    parameters:
    - in: path
      name: projectId
      required: true
      schema:
        type: string
  /api/projects/{projectIdOrName}:
    get:
      description: 'summary: 获取项目详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetailResponse'
          description: write description here
      summary: 'summary: 获取项目详情'
      tags:
      - default
    parameters:
    - in: path
      name: projectIdOrName
      required: true
      schema:
        type: string
  /api/projects/package/actions/parse:
    post:
      description: 'summary: 解析项目工程包'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 解析项目工程包'
      tags:
      - default
  /api/projects/template/actions/parse:
    post:
      description: 'summary: 解析项目模版'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProjectTemplateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 解析项目模版'
      tags:
      - default
  /api/publish-items/{publishItemId}/certification:
    get:
      description: 'summary: 发布内容认证列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 发布内容认证列表'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/err/effacts:
    get:
      description: 'summary: 错误统计，影响用户占比'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 错误统计，影响用户占比'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/err/list:
    get:
      description: 'summary: 错误报告，错误列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishItemStatisticsErrListData'
          description: write description here
      summary: 'summary: 错误报告，错误列表'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/err/rate:
    get:
      description: 'summary: 错误统计，崩溃率'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 错误统计，崩溃率'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/err/trend:
    get:
      description: 'summary: 错误报告，错误趋势'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishItemStatisticsErrTrendData'
          description: write description here
      summary: 'summary: 错误报告，错误趋势'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/metrics/{metricName}:
    get:
      description: 'summary: 通用metrcis接口，转发使用'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 通用metrcis接口，转发使用'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
    - in: path
      name: metricName
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/metrics/{metricName}/histogram:
    get:
      description: 'summary: 通用metrcis histogram接口，转发使用'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 通用metrcis histogram接口，转发使用'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
    - in: path
      name: metricName
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/statistics/channels:
    get:
      description: 'summary: 渠道详情，明细数据'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishItemStatisticsDetailData'
          description: write description here
      summary: 'summary: 渠道详情，明细数据'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/statistics/trend:
    get:
      description: 'summary: 统一大盘，整体趋势接口'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishItemStatisticsTrendData'
          description: write description here
      summary: 'summary: 统一大盘，整体趋势接口'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/statistics/users:
    get:
      description: 'summary: 统计大盘，累计用户'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 统计大盘，累计用户'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publish-items/{publishItemId}/statistics/versions:
    get:
      description: 'summary: 版本详情，明细数据'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishItemStatisticsDetailData'
          description: write description here
      summary: 'summary: 版本详情，明细数据'
      tags:
      - default
    parameters:
    - in: path
      name: publishItemId
      required: true
      schema:
        type: string
  /api/publishers:
    get:
      description: 'summary: 查询所有Publisher列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherListResponse'
          description: write description here
      summary: 'summary: 查询所有Publisher列表'
      tags:
      - default
    post:
      description: 'summary: 创建 Publisher'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherCreateResponse'
          description: write description here
      summary: 'summary: 创建 Publisher'
      tags:
      - default
    put:
      description: 'summary: 更新 Publisher'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherUpdateResponse'
          description: write description here
      summary: 'summary: 更新 Publisher'
      tags:
      - default
  /api/publishers/{publisherID}:
    delete:
      description: 'summary: 删除 Publisher'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherDeleteResponse'
          description: write description here
      summary: 'summary: 删除 Publisher'
      tags:
      - default
    get:
      description: 'summary: 获取Publisher详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherDetailResponse'
          description: write description here
      summary: 'summary: 获取Publisher详情'
      tags:
      - default
    parameters:
    - in: path
      name: publisherID
      required: true
      schema:
        type: string
  /api/publishers/actions/list-my-publishers:
    get:
      description: 'summary: 查询我的Publisher列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherListResponse'
          description: write description here
      summary: 'summary: 查询我的Publisher列表'
      tags:
      - default
  /api/qa:
    get:
      description: 'summary: 获取 sonar issues'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SonarIssueResponse'
          description: write description here
      summary: 'summary: 获取 sonar issues'
      tags:
      - default
  /api/qa/actions/get-sonar-credential:
    get:
      description: 'summary: action 获取 sonar credential'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SonarCredentialGetResponse'
          description: write description here
      summary: 'summary: action 获取 sonar credential'
      tags:
      - default
  /api/qa/actions/sonar-results-store:
    post:
      description: 'summary: 存储 sonar issue'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SonarStoreRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SonarStoreResponse'
          description: write description here
      summary: 'summary: 存储 sonar issue'
      tags:
      - default
  /api/reportsets/{pipelineID}:
    get:
      description: QA的上报数据查询
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: QA的上报数据查询
      tags:
      - default
    parameters:
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
  /api/sonar-metric-rules:
    get:
      description: 'summary: 分页查询 sonar 扫描规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 分页查询 sonar 扫描规则'
      tags:
      - default
  /api/sonar-metric-rules/{id}:
    delete:
      description: 'summary: 删除 sonar 扫描规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除 sonar 扫描规则'
      tags:
      - default
    get:
      description: 'summary: 查询 sonar 扫描规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 查询 sonar 扫描规则'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新 sonar 扫描规则'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SonarMetricRulesUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新 sonar 扫描规则'
      tags:
      - default
  /api/sonar-metric-rules/actions/batch-delete:
    delete:
      description: 'summary: 批量删除 sonar 扫描规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 批量删除 sonar 扫描规则'
      tags:
      - default
  /api/sonar-metric-rules/actions/batch-insert:
    post:
      description: 'summary: 批量插入 sonar 扫描规则'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SonarMetricRulesBatchInsertRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 批量插入 sonar 扫描规则'
      tags:
      - default
  /api/sonar-metric-rules/actions/query-list:
    get:
      description: 'summary: 查询 sonar 的配置列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 查询 sonar 的配置列表'
      tags:
      - default
  /api/sonar-metric-rules/actions/query-metric-definition:
    get:
      description: 'summary: 查询 sonar 还未添加的扫描规则'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 查询 sonar 还未添加的扫描规则'
      tags:
      - default
  /api/test-file-records:
    get:
      description: 'summary: get file records'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestFileRecordsResponse'
          description: write description here
      summary: 'summary: get file records'
      tags:
      - default
  /api/test-file-records/{id}:
    get:
      description: 'summary: get file record'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestFileRecordResponse'
          description: write description here
      summary: 'summary: get file record'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/testcases:
    get:
      description: 'summary: 测试用例分页'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCasePagingResponse'
          description: write description here
      summary: 'summary: 测试用例分页'
      tags:
      - default
    post:
      description: 'summary: 创建测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseCreateResponse'
          description: write description here
      summary: 'summary: 创建测试用例'
      tags:
      - default
  /api/testcases/{testCaseID}:
    get:
      description: 'summary: 获取指定测试用例详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseGetResponse'
          description: write description here
      summary: 'summary: 获取指定测试用例详情'
      tags:
      - default
    parameters:
    - in: path
      name: testCaseID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseUpdateResponse'
          description: write description here
      summary: 'summary: 更新测试用例'
      tags:
      - default
  /api/testcases/actions/batch-clean-from-recycle-bin:
    delete:
      description: 'summary: 从回收站彻底删除测试用例'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseBatchCleanFromRecycleBinResponse'
          description: write description here
      summary: 'summary: 从回收站彻底删除测试用例'
      tags:
      - default
  /api/testcases/actions/batch-copy:
    post:
      description: 'summary: 批量复制测试用例到指定测试集'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseBatchCopyRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseBatchCopyResponse'
          description: write description here
      summary: 'summary: 批量复制测试用例到指定测试集'
      tags:
      - default
  /api/testcases/actions/batch-update:
    post:
      description: 'summary: 批量更新测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseBatchUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseBatchUpdateResponse'
          description: write description here
      summary: 'summary: 批量更新测试用例'
      tags:
      - default
  /api/testcases/actions/export:
    get:
      description: 'summary: 导出测试用例'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseExportResponse'
          description: write description here
      summary: 'summary: 导出测试用例'
      tags:
      - default
  /api/testcases/actions/import:
    post:
      description: 'summary: 导入测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseImportRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseImportResponse'
          description: write description here
      summary: 'summary: 导入测试用例'
      tags:
      - default
  /api/testenv:
    post:
      description: 'summary: 更新项目环境变量信息'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITestEnvCreateRequest'
          description: write description here
      summary: 'summary: 更新项目环境变量信息'
      tags:
      - default
  /api/testenv/{id}:
    delete:
      description: 'summary: 更新项目环境变量信息'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITestEnvDeleteResponse'
          description: write description here
      summary: 'summary: 更新项目环境变量信息'
      tags:
      - default
    get:
      description: 'summary: 获取API项目测试的环境变量信息'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITestEnvGetResponse'
          description: write description here
      summary: 'summary: 获取API项目测试的环境变量信息'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 更新项目环境变量信息
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APITestEnvUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITestEnvUpdateResponse'
          description: write description here
      summary: 更新项目环境变量信息
      tags:
      - default
  /api/testenv/actions/list-envs:
    get:
      description: 'summary: 获取项目API测试环境变量列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITestEnvListResponse'
          description: write description here
      summary: 'summary: 获取项目API测试环境变量列表'
      tags:
      - default
  /api/testplans:
    get:
      description: 'summary: 测试计划列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanPagingResponse'
          description: write description here
      summary: 'summary: 测试计划列表'
      tags:
      - default
    post:
      description: 'summary: 创建测试计划'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCreateResponse'
          description: write description here
      summary: 'summary: 创建测试计划'
      tags:
      - default
  /api/testplans/{id}:
    delete:
      description: 'summary: 删除测试计划'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 删除测试计划'
      tags:
      - default
    get:
      description: 'summary: 测试计划详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanGetResponse'
          description: write description here
      summary: 'summary: 测试计划详情'
      tags:
      - default
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /api/testplans/{testPlanID}:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新测试计划'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新测试计划'
      tags:
      - default
  /api/testplans/{testPlanID}/actions/cancel-apitest/{pipelineID}:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    - in: path
      name: pipelineID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 取消执行接口测试'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 取消执行接口测试'
      tags:
      - default
  /api/testplans/{testPlanID}/actions/execute-apitest:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 执行接口测试'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emptyObject'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 执行接口测试'
      tags:
      - default
  /api/testplans/{testPlanID}/actions/export:
    get:
      description: 'summary: 导出测试计划下的测试用例'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCaseRelExportResponse'
          description: write description here
      summary: 'summary: 导出测试计划下的测试用例'
      tags:
      - default
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
  /api/testplans/{testPlanID}/actions/generate-report:
    get:
      description: 'summary: 生成测试计划测试报告'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanReportGenerateResponse'
          description: write description here
      summary: 'summary: 生成测试计划测试报告'
      tags:
      - default
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
  /api/testplans/{testPlanID}/testcase-relations:
    get:
      description: 'summary: 获取测试计划用例关系列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCaseRelPagingResponse'
          description: write description here
      summary: 'summary: 获取测试计划用例关系列表'
      tags:
      - default
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 测试计划关联测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanCaseRelCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCaseRelCreateResponse'
          description: write description here
      summary: 'summary: 测试计划关联测试用例'
      tags:
      - default
  /api/testplans/{testPlanID}/testcase-relations/{relationID}:
    get:
      description: 'summary: 获取测试计划用例关系详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCaseRelGetResponse'
          description: write description here
      summary: 'summary: 获取测试计划用例关系详情'
      tags:
      - default
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    - in: path
      name: relationID
      required: true
      schema:
        type: string
  /api/testplans/{testPlanID}/testcase-relations/{relationID}/actions/add-issue-relations:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    - in: path
      name: relationID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 新增测试计划用例里的缺陷关联关系'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanCaseRelIssueRelationAddRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCaseRelIssueRelationAddResponse'
          description: write description here
      summary: 'summary: 新增测试计划用例里的缺陷关联关系'
      tags:
      - default
  /api/testplans/{testPlanID}/testcase-relations/{relationID}/actions/remove-issue-relations:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    - in: path
      name: relationID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 解除测试计划用例里的缺陷关联关系'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanCaseRelIssueRelationRemoveRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanCaseRelIssueRelationRemoveResponse'
          description: write description here
      summary: 'summary: 解除测试计划用例里的缺陷关联关系'
      tags:
      - default
  /api/testplans/{testPlanID}/testcase-relations/actions/batch-update:
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 批量更新测试计划用例关系'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPlanCaseRelBatchUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 批量更新测试计划用例关系'
      tags:
      - default
  /api/testplans/{testPlanID}/testsets:
    get:
      description: 'summary: 获取测试计划下的测试集列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlanTestSetListResponse'
          description: write description here
      summary: 'summary: 获取测试计划下的测试集列表'
      tags:
      - default
    parameters:
    - in: path
      name: testPlanID
      required: true
      schema:
        type: string
  /api/testsets:
    get:
      description: 'summary: 测试集列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetListResponse'
          description: write description here
      summary: 'summary: 测试集列表'
      tags:
      - default
    post:
      description: 'summary: 创建测试集'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSetCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetCreateResponse'
          description: write description here
      summary: 'summary: 创建测试集'
      tags:
      - default
  /api/testsets/{testSetID}:
    get:
      description: 'summary: 测试集详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetGetResponse'
          description: write description here
      summary: 'summary: 测试集详情'
      tags:
      - default
    parameters:
    - in: path
      name: testSetID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新测试集'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSetUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyObject'
          description: write description here
      summary: 'summary: 更新测试集'
      tags:
      - default
  /api/testsets/{testSetID}/actions/clean-from-recycle-bin:
    delete:
      description: 'summary: 从回收站彻底删除测试集(递归)'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetCleanFromRecycleBinResponse'
          description: write description here
      summary: 'summary: 从回收站彻底删除测试集(递归)'
      tags:
      - default
    parameters:
    - in: path
      name: testSetID
      required: true
      schema:
        type: string
  /api/testsets/{testSetID}/actions/copy:
    parameters:
    - in: path
      name: testSetID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 测试集复制，递归复制子测试集和测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSetCopyRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetCopyResponse'
          description: write description here
      summary: 'summary: 测试集复制，递归复制子测试集和测试用例'
      tags:
      - default
  /api/testsets/{testSetID}/actions/recover-from-recycle-bin:
    parameters:
    - in: path
      name: testSetID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 从回收站恢复测试集(递归)'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSetRecoverFromRecycleBinRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetRecoverFromRecycleBinResponse'
          description: write description here
      summary: 'summary: 从回收站恢复测试集(递归)'
      tags:
      - default
  /api/testsets/{testSetID}/actions/recycle:
    parameters:
    - in: path
      name: testSetID
      required: true
      schema:
        type: string
    post:
      description: 'summary: 回收测试集至回收站，递归包含子测试集和测试用例'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSetRecycleRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSetRecycleResponse'
          description: write description here
      summary: 'summary: 回收测试集至回收站，递归包含子测试集和测试用例'
      tags:
      - default
  /api/tickets:
    get:
      description: 'summary: 工单列表'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketListResponse'
          description: write description here
      summary: 'summary: 工单列表'
      tags:
      - default
    post:
      description: 'summary: 创建工单'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketCreateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketCreateResponse'
          description: write description here
      summary: 'summary: 创建工单'
      tags:
      - default
  /api/tickets/{ticketID}:
    delete:
      description: 'summary: 删除工单'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketDeleteResponse'
          description: write description here
      summary: 'summary: 删除工单'
      tags:
      - default
    get:
      description: 'summary: 获取工单详情'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketFetchResponse'
          description: write description here
      summary: 'summary: 获取工单详情'
      tags:
      - default
    parameters:
    - in: path
      name: ticketID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 更新工单'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketUpdateRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketUpdateResponse'
          description: write description here
      summary: 'summary: 更新工单'
      tags:
      - default
  /api/tickets/{ticketID}/actions/close:
    parameters:
    - in: path
      name: ticketID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 关闭工单'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketCloseRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketCloseResponse'
          description: write description here
      summary: 'summary: 关闭工单'
      tags:
      - default
  /api/tickets/{ticketID}/actions/reopen:
    parameters:
    - in: path
      name: ticketID
      required: true
      schema:
        type: string
    put:
      description: 'summary: 重新打开已关闭工单'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketReopenRequest'
        description: write description here
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketReopenResponse'
          description: write description here
      summary: 'summary: 重新打开已关闭工单'
      tags:
      - default
  
components:
  schemas:
    APIAssetCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        appID:
          type: integer
        assetID:
          type: string
        assetName:
          type: string
        desc:
          type: string
        logo:
          type: string
        orgID:
          type: integer
        projectID:
          type: integer
        source:
          type: string
        versions:
          items:
            $ref: '#/components/schemas/APIAssetVersionCreateRequest'
          type: array
      type: object
    APIAssetGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    APIAssetPagingResponse:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        total:
          type: integer
        userIDs:
          items:
            type: string
          type: array
      type: object
    APIAssetVersionCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        apiAssetID:
          type: string
        appID:
          type: integer
        branch:
          type: string
        desc:
          type: string
        inode:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/APIAssetVersionInstanceCreateRequest'
          type: array
        major:
          type: integer
        minor:
          type: integer
        orgID:
          type: integer
        patch:
          type: integer
        serviceName:
          type: string
        source:
          type: string
        spec:
          type: string
        specDiceFileUUID:
          type: string
        specProtocol:
          type: string
      type: object
    APIAssetVersionInstanceCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        endpointID:
          type: string
        instanceType:
          type: string
        name:
          type: string
        runtimeID:
          type: integer
        serviceName:
          type: string
        url:
          type: string
      type: object
    APIDocCreateNodeReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    APITestEnvCreateRequest:
      properties:
        APITestEnvData:
          $ref: '#/components/schemas/APITestEnvData'
      type: object
    APITestEnvData:
      properties:
        domain:
          type: string
        envID:
          type: integer
        envType:
          type: string
        global:
          $ref: '#/components/schemas/emptyObject'
        header:
          $ref: '#/components/schemas/emptyObject'
        id:
          type: integer
        name:
          type: string
      type: object
    APITestEnvDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    APITestEnvGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    APITestEnvListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
      type: object
    APITestEnvUpdateRequest:
      properties:
        APITestEnvData:
          $ref: '#/components/schemas/APITestEnvData'
      type: object
    APITestEnvUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    APITestReq:
      properties:
        apis:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        clientID:
          type: string
        clientSecret:
          type: string
      type: object
    APITestsAttemptRequest:
      properties:
        apis:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        projectTestEnvID:
          type: integer
        usecaseTestEnvID:
          type: integer
      type: object
    APITestsAttemptResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
      type: object
    AndroidCertificateAutoDTO:
      properties:
        city:
          type: string
        debugKeyStore:
          $ref: '#/components/schemas/AndroidCertificateKeyStoreDTO'
        name:
          type: string
        org:
          type: string
        ou:
          type: string
        province:
          type: string
        releaseKeyStore:
          $ref: '#/components/schemas/AndroidCertificateKeyStoreDTO'
        state:
          type: string
      type: object
    AndroidCertificateDTO:
      properties:
        autoInfo:
          $ref: '#/components/schemas/AndroidCertificateAutoDTO'
        manualCreate:
          type: boolean
        manualInfo:
          $ref: '#/components/schemas/AndroidCertificateManualDTO'
      type: object
    AndroidCertificateKeyDTO:
      properties:
        debugKeyPassword:
          type: string
        debugKeyStoreAlias:
          type: string
        debugKeyStoreFile:
          type: string
        debugStorePassword:
          type: string
        releaseKeyPassword:
          type: string
        releaseKeyStoreAlias:
          type: string
        releaseKeyStoreFile:
          type: string
        releaseStorePassword:
          type: string
      type: object
    AndroidCertificateKeyStoreDTO:
      properties:
        alias:
          type: string
        keyPassword:
          type: string
        storePassword:
          type: string
      type: object
    AndroidCertificateManualDTO:
      properties:
        debugKeyStore:
          $ref: '#/components/schemas/AndroidCertificateManualKeyStoreDTO'
        releaseKeyStore:
          $ref: '#/components/schemas/AndroidCertificateManualKeyStoreDTO'
      type: object
    AndroidCertificateManualKeyStoreDTO:
      properties:
        AndroidCertificateKeyStoreDTO:
          $ref: '#/components/schemas/AndroidCertificateKeyStoreDTO'
        CertificateFileDTO:
          $ref: '#/components/schemas/CertificateFileDTO'
      type: object
    ApiTestCancelRequest:
      properties:
        pipelineId:
          type: integer
      type: object
    ApiTestCancelResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: string
      type: object
    ApiTestInfo:
      properties:
        apiID:
          type: integer
        apiInfo:
          type: string
        apiRequest:
          type: string
        apiResponse:
          type: string
        assertResult:
          type: string
        projectID:
          type: integer
        status:
          type: string
        usecaseID:
          type: integer
        usecaseOrder:
          type: integer
      type: object
    ApiTestsGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    ApiTestsUpdateRequest:
      properties:
        ApiTestInfo:
          $ref: '#/components/schemas/ApiTestInfo'
        isResult:
          type: boolean
      type: object
    ApiTestsUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AppPublishItemRelation:
      properties:
        ai:
          type: string
        ak:
          type: string
        appId:
          type: integer
        env:
          type: string
        publishItemId:
          type: integer
        publishItemName:
          type: string
        publishItemNs:
          items:
            type: string
          type: array
        publisherId:
          type: integer
        publisherName:
          type: string
      type: object
    ApplicationCertificateDTO:
      properties:
        androidInfo:
          $ref: '#/components/schemas/AndroidCertificateDTO'
        appId:
          type: integer
        approvalId:
          type: integer
        certificateId:
          type: integer
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        desc:
          type: string
        id:
          type: integer
        iosInfo:
          $ref: '#/components/schemas/IOSCertificateDTO'
        messageInfo:
          $ref: '#/components/schemas/CertificateFileDTO'
        name:
          type: string
        operator:
          type: string
        orgId:
          type: integer
        pushConfig:
          $ref: '#/components/schemas/PushCertificateConfigs'
        status:
          type: string
        type:
          type: string
      type: object
    ApplicationCreateRequest:
      properties:
        config:
          $ref: '#/components/schemas/emptyObject'
        desc:
          type: string
        displayName:
          type: string
        isExternalRepo:
          type: boolean
        logo:
          type: string
        mode:
          type: string
        name:
          type: string
        projectId:
          type: integer
        repoConfig:
          $ref: '#/components/schemas/emptyObject'
        sonarConfig:
          $ref: '#/components/schemas/emptyObject'
      type: object
    ApplicationCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/ApplicationDTO'
      type: object
    ApplicationDTO:
      properties:
        blockStatus:
          type: string
        config:
          $ref: '#/components/schemas/emptyObject'
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        desc:
          type: string
        displayName:
          type: string
        gitRepo:
          type: string
        gitRepoAbbrev:
          type: string
        gitRepoNew:
          type: string
        id:
          type: integer
        isExternalRepo:
          type: boolean
        isPublic:
          type: boolean
        logo:
          type: string
        memberRoles:
          items:
            type: string
          type: array
        mode:
          type: string
        name:
          type: string
        orgDisplayName:
          type: string
        orgId:
          type: integer
        orgName:
          type: string
        pined:
          type: boolean
        projectDisplayName:
          type: string
        projectId:
          type: integer
        projectName:
          type: string
        repoConfig:
          $ref: '#/components/schemas/emptyObject'
        sonarConfig:
          $ref: '#/components/schemas/emptyObject'
        stats:
          $ref: '#/components/schemas/ApplicationStats'
        token:
          type: string
        unBlockEnd:
          format: date-time
          type: string
        unBlockStart:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        workspaces:
          items:
            $ref: '#/components/schemas/ApplicationWorkspace'
          type: array
      type: object
    ApplicationDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/ApplicationDTO'
      type: object
    ApplicationInitRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        bundleID:
          type: string
        mobileAppName:
          type: string
        mobileDisplayName:
          type: string
        packageName:
          type: string
      type: object
    ApplicationStats:
      properties:
        countMembers:
          type: integer
        countRuntimes:
          type: integer
        timeLastModified:
          type: string
      type: object
    ApplicationUpdateRequest:
      properties:
        body:
          $ref: '#/components/schemas/ApplicationUpdateRequestBody'
      type: object
    ApplicationUpdateRequestBody:
      properties:
        config:
          $ref: '#/components/schemas/emptyObject'
        desc:
          type: string
        displayName:
          type: string
        isPublic:
          type: boolean
        logo:
          type: string
        repoConfig:
          $ref: '#/components/schemas/emptyObject'
        sonarConfig:
          $ref: '#/components/schemas/emptyObject'
      type: object
    ApplicationUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    ApplicationWorkspace:
      properties:
        clusterName:
          type: string
        configNamespace:
          type: string
        workspace:
          type: string
      type: object
    Artifact:
      properties:
        name:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    AuditMessage:
      properties:
        messageEN:
          type: string
        messageZH:
          type: string
      type: object
    AutoTestCaseSavePipelineRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        inode:
          type: string
        pipelineYml:
          type: string
        runParams:
          items:
            $ref: '#/components/schemas/PipelineRunParam'
          type: array
      type: object
    AutoTestCaseSavePipelineResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AutoTestGlobalConfig:
      properties:
        apiConfig:
          $ref: '#/components/schemas/emptyObject'
        createdAt:
          format: date-time
          type: string
        creatorID:
          type: string
        desc:
          type: string
        displayName:
          type: string
        ns:
          type: string
        scope:
          type: string
        scopeID:
          type: string
        uiConfig:
          $ref: '#/components/schemas/emptyObject'
        updatedAt:
          format: date-time
          type: string
        updaterID:
          type: string
      type: object
    AutoTestGlobalConfigCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        apiConfig:
          $ref: '#/components/schemas/emptyObject'
        desc:
          type: string
        displayName:
          type: string
        scope:
          type: string
        scopeID:
          type: string
        uiConfig:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AutoTestGlobalConfigCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AutoTestGlobalConfigDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AutoTestGlobalConfigListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/AutoTestGlobalConfig'
          type: array
      type: object
    AutoTestGlobalConfigUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        apiConfig:
          $ref: '#/components/schemas/emptyObject'
        desc:
          type: string
        displayName:
          type: string
        ns:
          type: string
        uiConfig:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AutoTestGlobalConfigUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    AutoTestSceneSetImportRequest:
      properties:
        FileType:
          type: string
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        ProjectID:
          type: integer
        SpaceID:
          type: integer
      type: object
    AutoTestSceneSetImportResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    AutoTestSpaceExportResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    AutoTestSpaceImportRequest:
      properties:
        FileType:
          type: string
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        ProjectID:
          type: integer
      type: object
    AutoTestSpaceImportResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    AutoTestSpaceResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    BaseModel:
      properties:
        createdAt:
          format: date-time
          type: string
        creatorID:
          type: string
        id:
          type: integer
        updatedAt:
          format: date-time
          type: string
        updaterID:
          type: string
      type: object
    BaseResponse:
      properties:
        data:
          items:
            type: integer
          type: array
        err:
          $ref: '#/components/schemas/emptyObject'
        success:
          type: boolean
      type: object
    BlockoutConfig:
      properties:
        blockDev:
          type: boolean
        blockProd:
          type: boolean
        blockStage:
          type: boolean
        blockTest:
          type: boolean
      type: object
    CICDPipelineYmlListResponse:
      properties:
        data:
          items:
            type: string
          type: array
      type: object
    CertificateCreateRequest:
      properties:
        androidInfo:
          $ref: '#/components/schemas/AndroidCertificateDTO'
        desc:
          type: string
        iosInfo:
          $ref: '#/components/schemas/IOSCertificateDTO'
        messageInfo:
          $ref: '#/components/schemas/CertificateFileDTO'
        name:
          type: string
        orgId:
          type: integer
        type:
          type: string
      type: object
    CertificateCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/CertificateDTO'
      type: object
    CertificateDTO:
      properties:
        androidInfo:
          $ref: '#/components/schemas/AndroidCertificateDTO'
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        desc:
          type: string
        id:
          type: integer
        iosInfo:
          $ref: '#/components/schemas/IOSCertificateDTO'
        messageInfo:
          $ref: '#/components/schemas/CertificateFileDTO'
        name:
          type: string
        operator:
          type: string
        orgId:
          type: integer
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    CertificateDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/CertificateDTO'
      type: object
    CertificateDetailResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/CertificateDTO'
      type: object
    CertificateFileDTO:
      properties:
        fileName:
          type: string
        uuid:
          type: string
      type: object
    CertificateListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PagingCertificateDTO'
      type: object
    CertificateQuoteRequest:
      properties:
        appId:
          type: integer
        certificateId:
          type: integer
      type: object
    CertificateUpdateRequest:
      properties:
        desc:
          type: string
        filename:
          type: string
        uuid:
          type: string
      type: object
    CertificateUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/CertificateDTO'
      type: object
    CodeCoverageUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        id:
          type: integer
        msg:
          type: string
        reportTarUrl:
          type: string
        reportXmlUUID:
          type: string
        status:
          type: string
      type: object
    Comment:
      properties:
        commentType:
          type: string
        content:
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: integer
        irComment:
          $ref: '#/components/schemas/IRComment'
        ticketID:
          type: integer
        updatedAt:
          format: date-time
          type: string
        userID:
          type: string
      type: object
    CommentCreateRequest:
      properties:
        commentType:
          type: string
        content:
          type: string
        irComment:
          $ref: '#/components/schemas/IRComment'
        ticketID:
          type: integer
        userID:
          type: string
      type: object
    CommentCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    CommentIssueStreamCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        content:
          type: string
        mrInfo:
          $ref: '#/components/schemas/MRCommentInfo'
        type:
          type: string
      type: object
    CommentListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/CommentListResponseData'
      type: object
    CommentListResponseData:
      properties:
        comments:
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        total:
          type: integer
      type: object
    CommentUpdateRequest:
      properties:
        body:
          $ref: '#/components/schemas/CommentUpdateRequestBody'
      type: object
    CommentUpdateRequestBody:
      properties:
        content:
          type: string
      type: object
    CommentUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    CreateAPIAssetVersionBody:
      properties:
        assetID:
          type: string
        major:
          type: integer
        minor:
          type: integer
        patch:
          type: integer
        specDiceFileUUID:
          type: string
        specProtocol:
          type: string
      type: object
    CreateAccessReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
      type: object
    CreateBranchRuleRequest:
      properties:
        artifactWorkspace:
          type: string
        desc:
          type: string
        isProtect:
          type: boolean
        isTriggerPipeline:
          type: boolean
        needApproval:
          type: boolean
        rule:
          type: string
        scopeId:
          type: integer
        scopeType:
          type: string
        workspace:
          type: string
      type: object
    CreateBranchRuleResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    CreateClientReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
      type: object
    CreateContractReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    CreateInstantiationReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    CreateSLAReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    CreateTestReportRecordResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        id:
          type: integer
      type: object
    DashboardSpotLogData:
      properties:
        lines:
          items:
            $ref: '#/components/schemas/DashboardSpotLogLine'
          type: array
      type: object
    DashboardSpotLogLine:
      properties:
        content:
          type: string
        id:
          type: string
        level:
          type: string
        offset:
          type: integer
        requestId:
          type: string
        source:
          type: string
        stream:
          type: string
        timestamp:
          type: string
      type: object
    DashboardSpotLogResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/DashboardSpotLogData'
      type: object
    DeleteBranchRuleResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    Enumerate:
      properties:
        id:
          type: integer
        index:
          type: integer
        name:
          type: string
      type: object
    ErrorResponse:
      properties:
        code:
          type: string
        ctx:
          $ref: '#/components/schemas/emptyObject'
        msg:
          type: string
      type: object
    ExportProjectPackageRequest:
      properties:
        ProjectPackageRequest:
          $ref: '#/components/schemas/ProjectPackageRequest'
        artifacts:
          items:
            $ref: '#/components/schemas/Artifact'
          type: array
      type: object
    GetAccessRspAccess:
      properties:
        addonInstanceID:
          type: string
        assetID:
          type: string
        assetName:
          type: string
        authentication:
          type: string
        authorization:
          type: string
        bindDomain:
          items:
            type: string
          type: array
        createdAt:
          format: date-time
          type: string
        creatorID:
          type: string
        endpointID:
          type: string
        endpointName:
          type: string
        id:
          type: integer
        major:
          type: integer
        minor:
          type: integer
        orgID:
          type: integer
        projectID:
          type: integer
        projectName:
          type: string
        swaggerVersion:
          type: string
        tenantGroupID:
          type: string
        updatedAt:
          format: date-time
          type: string
        updaterID:
          type: string
        workspace:
          type: string
      type: object
    GetAddonInstanceDetailResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/InstanceDetailRes'
      type: object
    GetAssetVersionRsp:
      properties:
        access:
          $ref: '#/components/schemas/emptyObject'
        asset:
          $ref: '#/components/schemas/emptyObject'
        hasAccess:
          type: boolean
        hasInstantiation:
          type: boolean
        spec:
          $ref: '#/components/schemas/emptyObject'
        version:
          $ref: '#/components/schemas/emptyObject'
      type: object
    GetSLARsp:
      properties:
        SLAModel:
          $ref: '#/components/schemas/SLAModel'
        assetID:
          type: string
        assetName:
          type: string
        clientCount:
          type: integer
        default:
          type: boolean
        limits:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        swaggerVersion:
          type: string
        userTo:
          type: string
      type: object
    GetTestFileRecordResponse:
      properties:
        Data:
          $ref: '#/components/schemas/TestFileRecord'
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    GetTestReportRecordResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/TestReportRecord'
      type: object
    Header:
      properties:
        err:
          $ref: '#/components/schemas/ErrorResponse'
        success:
          type: boolean
      type: object
    IOSCertificateDTO:
      properties:
        debugProvision:
          $ref: '#/components/schemas/CertificateFileDTO'
        keyChainP12:
          $ref: '#/components/schemas/IOSCertificateKeyChainP12DTO'
        releaseProvision:
          $ref: '#/components/schemas/CertificateFileDTO'
      type: object
    IOSCertificateKeyChainP12DTO:
      properties:
        CertificateFileDTO:
          $ref: '#/components/schemas/CertificateFileDTO'
        password:
          type: string
      type: object
    IOSCertificateKeyDTO:
      properties:
        debugMobileProvision:
          type: string
        keyChainP12File:
          type: string
        keyChainP12Password:
          type: string
        releaseMobileProvision:
          type: string
      type: object
    IRComment:
      properties:
        issueID:
          type: integer
        issueTitle:
          type: string
        issueType:
          type: string
        iterationID:
          type: integer
        projectID:
          type: integer
      type: object
    ISummary:
      properties:
        bug:
          $ref: '#/components/schemas/ISummaryState'
        requirement:
          $ref: '#/components/schemas/ISummaryState'
        task:
          $ref: '#/components/schemas/ISummaryState'
      type: object
    ISummaryState:
      properties:
        done:
          type: integer
        undone:
          type: integer
      type: object
    IdentityInfo:
      properties:
        userID:
          type: string
      type: object
    ImportProjectPackageRequest:
      properties:
        ProjectPackageRequest:
          $ref: '#/components/schemas/ProjectPackageRequest'
      type: object
    ImportProjectTemplateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        orgID:
          type: integer
        projectDisplayName:
          type: string
        projectID:
          type: integer
        projectName:
          type: string
      type: object
    InstanceDetailRes:
      properties:
        addonName:
          type: string
        attachCount:
          type: integer
        canDel:
          type: boolean
        clusterName:
          type: string
        config:
          $ref: '#/components/schemas/emptyObject'
        createAt:
          type: string
        env:
          type: string
        envCn:
          type: string
        instanceName:
          type: string
        logoUrl:
          type: string
        planCnName:
          type: string
        platform:
          type: boolean
        projectId:
          type: string
        projectName:
          type: string
        referenceInfo:
          items:
            $ref: '#/components/schemas/InstanceReferenceRes'
          type: array
        status:
          type: string
        version:
          type: string
      type: object
    InstanceReferenceRes:
      properties:
        applicationId:
          type: string
        applicationName:
          type: string
        orgId:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        runtimeId:
          type: string
        runtimeName:
          type: string
      type: object
    IssueAndPropertyAndValue:
      properties:
        issueID:
          type: integer
        property:
          items:
            $ref: '#/components/schemas/IssuePropertyExtraProperty'
          type: array
      type: object
    IssueBatchUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        all:
          type: boolean
        assignee:
          type: string
        bugStage:
          type: string
        currentIterationID:
          type: integer
        currentIterationIDs:
          items:
            type: integer
          type: array
        ids:
          items:
            type: integer
          type: array
        mine:
          type: boolean
        newIterationID:
          type: integer
        owner:
          type: string
        projectID:
          type: integer
        state:
          type: integer
        taskType:
          type: string
        type:
          type: string
      type: object
    IssueBugPercentageResponse:
      properties:
        bugPercentage:
          items:
            $ref: '#/components/schemas/Percentage'
          type: array
      type: object
    IssueBugSeverityPercentage:
      properties:
        severity:
          items:
            $ref: '#/components/schemas/Percentage'
          type: array
      type: object
    IssueBugSeverityPercentageResponse:
      properties:
        severity:
          $ref: '#/components/schemas/IssueBugSeverityPercentage'
        stageName:
          type: string
      type: object
    IssueBugStatusPercentage:
      properties:
        status:
          items:
            $ref: '#/components/schemas/Percentage'
          type: array
      type: object
    IssueBugStatusPercentageResponse:
      properties:
        stageName:
          type: string
        status:
          $ref: '#/components/schemas/IssueBugStatusPercentage'
      type: object
    IssueCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        appID:
          $ref: '#/components/schemas/emptyObject'
        assignee:
          type: string
        bugStage:
          type: string
        complexity:
          type: string
        content:
          type: string
        creator:
          type: string
        issueManHour:
          $ref: '#/components/schemas/emptyObject'
        iterationID:
          type: integer
        labels:
          items:
            type: string
          type: array
        owner:
          type: string
        planFinishedAt:
          $ref: '#/components/schemas/IssueTime'
        planStartedAt:
          $ref: '#/components/schemas/IssueTime'
        priority:
          type: string
        projectID:
          type: integer
        severity:
          type: string
        source:
          type: string
        subscribers:
          items:
            type: string
          type: array
        taskType:
          type: string
        testPlanCaseRelIDs:
          items:
            type: integer
          type: array
        title:
          type: string
        type:
          type: string
      type: object
    IssueCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    IssueGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    IssueImportExcelRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        fileID:
          type: string
        orgID:
          type: integer
        projectID:
          type: integer
        type:
          type: string
      type: object
    IssueImportExcelResponse:
      properties:
        falseNumber:
          type: integer
        successNumber:
          type: integer
        uuid:
          type: string
      type: object
    IssueListRequest:
      properties:
        IDs:
          items:
            type: integer
          type: array
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        WithProcessSummary:
          type: boolean
        appID:
          $ref: '#/components/schemas/emptyObject'
        asc:
          type: boolean
        assignee:
          items:
            type: string
          type: array
        bugStage:
          items:
            type: string
          type: array
        complexity:
          items:
            type: string
          type: array
        creator:
          items:
            type: string
          type: array
        customPanelID:
          type: integer
        endClosedAt:
          type: integer
        endCreatedAt:
          type: integer
        endFinishedAt:
          type: integer
        exceptIDs:
          items:
            type: integer
          type: array
        external:
          type: boolean
        isEmptyPlanFinishedAt:
          type: boolean
        iterationID:
          type: integer
        iterationIDs:
          items:
            type: integer
          type: array
        label:
          items:
            type: integer
          type: array
        notIncluded:
          type: boolean
        onlyIdResult:
          type: boolean
        orderBy:
          type: string
        owner:
          items:
            type: string
          type: array
        priority:
          items:
            type: string
          type: array
        projectID:
          type: integer
        relatedIssueId:
          items:
            type: integer
          type: array
        requirementID:
          $ref: '#/components/schemas/emptyObject'
        severity:
          items:
            type: string
          type: array
        source:
          type: string
        startClosedAt:
          type: integer
        startCreatedAt:
          type: integer
        startFinishedAt:
          type: integer
        state:
          items:
            type: integer
          type: array
        stateBelongs:
          items:
            type: string
          type: array
        taskType:
          items:
            type: string
          type: array
        title:
          type: string
        type:
          items:
            type: string
          type: array
      type: object
    IssueManHourSumResponse:
      properties:
        deployManHour:
          type: integer
        designManHour:
          type: integer
        devManHour:
          type: integer
        implementManHour:
          type: integer
        operatorManHour:
          type: integer
        sumManHour:
          type: integer
        testManHour:
          type: integer
      type: object
    IssuePagingRequest:
      properties:
        IssueListRequest:
          $ref: '#/components/schemas/IssueListRequest'
        orgID:
          type: integer
        pageNo:
          type: integer
        pageSize:
          type: integer
        projectIDs:
          items:
            type: integer
          type: array
      type: object
    IssuePanel:
      properties:
        panelID:
          type: integer
        panelName:
          type: string
      type: object
    IssuePanelDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    IssuePanelGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/IssuePanelIssues'
          type: array
      type: object
    IssuePanelIssues:
      properties:
        IssuePanel:
          $ref: '#/components/schemas/IssuePanel'
        total:
          type: integer
      type: object
    IssuePanelRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        IssuePagingRequest:
          $ref: '#/components/schemas/IssuePagingRequest'
        IssuePanel:
          $ref: '#/components/schemas/IssuePanel'
        issueID:
          type: integer
      type: object
    IssuePropertiesResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/IssuePropertyIndex'
          type: array
      type: object
    IssuePropertyCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        displayName:
          type: string
        enumeratedValues:
          items:
            $ref: '#/components/schemas/Enumerate'
          type: array
        orgID:
          type: integer
        propertyIssueType:
          type: string
        propertyName:
          type: string
        propertyType:
          type: string
        relation:
          type: integer
        required:
          type: boolean
        scopeID:
          type: integer
        scopeType:
          type: string
      type: object
    IssuePropertyExtraProperty:
      properties:
        arbitraryValue:
          $ref: '#/components/schemas/emptyObject'
        displayName:
          type: string
        enumeratedValues:
          items:
            $ref: '#/components/schemas/Enumerate'
          type: array
        propertyID:
          type: integer
        propertyName:
          type: string
        propertyType:
          type: string
        required:
          type: boolean
        values:
          items:
            type: integer
          type: array
      type: object
    IssuePropertyIndex:
      properties:
        displayName:
          type: string
        enumeratedValues:
          items:
            $ref: '#/components/schemas/Enumerate'
          type: array
        index:
          type: integer
        orgID:
          type: integer
        propertyID:
          type: integer
        propertyIssueType:
          type: string
        propertyName:
          type: string
        propertyType:
          type: string
        relatedIssue:
          items:
            type: string
          type: array
        relation:
          type: integer
        required:
          type: boolean
        scopeID:
          type: integer
        scopeType:
          type: string
        values:
          items:
            type: integer
          type: array
      type: object
    IssuePropertyIndexUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        data:
          items:
            $ref: '#/components/schemas/IssuePropertyIndex'
          type: array
        orgID:
          type: integer
      type: object
    IssuePropertyInstance:
      properties:
        IssuePropertyIndex:
          $ref: '#/components/schemas/IssuePropertyIndex'
        arbitraryValue:
          $ref: '#/components/schemas/emptyObject'
        enumeratedValues:
          items:
            $ref: '#/components/schemas/PropertyEnumerate'
          type: array
        values:
          items:
            type: integer
          type: array
      type: object
    IssuePropertyRelationCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        issueID:
          type: integer
        orgID:
          type: integer
        projectID:
          type: integer
        property:
          items:
            $ref: '#/components/schemas/IssuePropertyInstance'
          type: array
      type: object
    IssuePropertyRelationGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        IssueAndPropertyAndValue:
          $ref: '#/components/schemas/IssueAndPropertyAndValue'
      type: object
    IssuePropertyRelationUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        IssuePropertyExtraProperty:
          $ref: '#/components/schemas/IssuePropertyExtraProperty'
        issueID:
          type: integer
        orgID:
          type: integer
        projectID:
          type: integer
      type: object
    IssuePropertyResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/IssuePropertyIndex'
      type: object
    IssuePropertyUpdateRequest:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        IssuePropertyIndex:
          $ref: '#/components/schemas/IssuePropertyIndex'
        enumeratedValues:
          items:
            $ref: '#/components/schemas/Enumerate'
          type: array
      type: object
    IssuePropertyUpdateTimes:
      properties:
        bug:
          type: string
        epic:
          type: string
        requirement:
          type: string
        task:
          type: string
      type: object
    IssuePropertyUpdateTimesResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/IssuePropertyUpdateTimes'
      type: object
    IssueRelationCreateRequest:
      properties:
        comment:
          type: string
        projectId:
          type: integer
        relatedIssues:
          items:
            type: integer
          type: array
        type:
          type: string
      type: object
    IssueRelationGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        UserInfoHeader:
          $ref: '#/components/schemas/UserInfoHeader'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    IssueStage:
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: string
      type: object
    IssueStageRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        issueType:
          type: string
        list:
          items:
            $ref: '#/components/schemas/IssueStage'
          type: array
        orgID:
          type: integer
      type: object
    IssueStageResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/IssueStage'
          type: array
      type: object
    IssueStateCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        issueType:
          type: string
        projectID:
          type: integer
        stateBelong:
          type: string
        stateName:
          type: string
      type: object
    IssueStateDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/IssueStatus'
      type: object
    IssueStateName:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    IssueStateRelation:
      properties:
        IssueStatus:
          $ref: '#/components/schemas/IssueStatus'
        stateRelation:
          items:
            type: integer
          type: array
      type: object
    IssueStateRelationGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/IssueStateRelation'
          type: array
      type: object
    IssueStateState:
      properties:
        States:
          items:
            $ref: '#/components/schemas/IssueStateName'
          type: array
        stateBelong:
          type: string
      type: object
    IssueStateTypeBelongGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/IssueStateState'
          type: array
      type: object
    IssueStateUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        data:
          items:
            $ref: '#/components/schemas/IssueStateRelation'
          type: array
        projectID:
          type: integer
      type: object
    IssueStatus:
      properties:
        index:
          type: integer
        issueType:
          type: string
        projectID:
          type: integer
        stateBelong:
          type: string
        stateID:
          type: integer
        stateName:
          type: string
      type: object
    IssueStream:
      properties:
        content:
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: integer
        issueID:
          type: integer
        mrInfo:
          $ref: '#/components/schemas/MRCommentInfo'
        operator:
          type: string
        streamType:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    IssueStreamPagingResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        UserInfoHeader:
          $ref: '#/components/schemas/UserInfoHeader'
        data:
          $ref: '#/components/schemas/IssueStreamPagingResponseData'
      type: object
    IssueStreamPagingResponseData:
      properties:
        list:
          items:
            $ref: '#/components/schemas/IssueStream'
          type: array
        total:
          type: integer
      type: object
    IssueTime:
      type: object
    IssueTypeUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        id:
          type: integer
        projectID:
          type: integer
        type:
          type: string
      type: object
    IssueUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        Lang:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        assignee:
          $ref: '#/components/schemas/emptyObject'
        bugStage:
          $ref: '#/components/schemas/emptyObject'
        complexity:
          $ref: '#/components/schemas/emptyObject'
        content:
          $ref: '#/components/schemas/emptyObject'
        issueManHour:
          $ref: '#/components/schemas/emptyObject'
        iterationID:
          $ref: '#/components/schemas/emptyObject'
        labels:
          items:
            type: string
          type: array
        owner:
          $ref: '#/components/schemas/emptyObject'
        planFinishedAt:
          $ref: '#/components/schemas/IssueTime'
        planStartedAt:
          $ref: '#/components/schemas/IssueTime'
        priority:
          $ref: '#/components/schemas/emptyObject'
        relatedIssues:
          items:
            type: integer
          type: array
        removeTestPlanCaseRelIDs:
          type: boolean
        severity:
          $ref: '#/components/schemas/emptyObject'
        source:
          $ref: '#/components/schemas/emptyObject'
        state:
          $ref: '#/components/schemas/emptyObject'
        taskType:
          $ref: '#/components/schemas/emptyObject'
        testPlanCaseRelIDs:
          items:
            type: integer
          type: array
        title:
          $ref: '#/components/schemas/emptyObject'
        withChildrenIteration:
          type: boolean
      type: object
    IssueUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    Iteration:
      properties:
        content:
          type: string
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        finishedAt:
          format: date-time
          type: string
        id:
          type: integer
        issueSummary:
          $ref: '#/components/schemas/ISummary'
        projectID:
          type: integer
        startedAt:
          format: date-time
          type: string
        state:
          type: string
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    IterationCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        content:
          type: string
        finishedAt:
          format: date-time
          type: string
        projectID:
          type: integer
        startedAt:
          format: date-time
          type: string
        title:
          type: string
      type: object
    IterationCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    IterationGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        UserInfoHeader:
          $ref: '#/components/schemas/UserInfoHeader'
        data:
          $ref: '#/components/schemas/Iteration'
      type: object
    IterationPagingResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        UserInfoHeader:
          $ref: '#/components/schemas/UserInfoHeader'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    IterationUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        content:
          type: string
        finishedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        state:
          type: string
        title:
          type: string
      type: object
    IterationUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    LibReference:
      properties:
        appID:
          type: integer
        approvalID:
          type: integer
        approvalStatus:
          type: string
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        id:
          type: integer
        libDesc:
          type: string
        libID:
          type: integer
        libName:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    LibReferenceCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        OrgID:
          type: integer
        appID:
          type: integer
        appName:
          type: string
        libDesc:
          type: string
        libID:
          type: integer
        libName:
          type: string
      type: object
    LibReferenceCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    LibReferenceListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        UserInfoHeader:
          $ref: '#/components/schemas/UserInfoHeader'
        data:
          $ref: '#/components/schemas/LibReferenceListResponseData'
      type: object
    LibReferenceListResponseData:
      properties:
        list:
          items:
            $ref: '#/components/schemas/LibReference'
          type: array
        total:
          type: integer
      type: object
    ListAccessRsp:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        orgID:
          type: integer
        total:
          type: integer
      type: object
    ListContractRecordsRsp:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        total:
          type: integer
      type: object
    ListContractsRsp:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        total:
          type: integer
      type: object
    ListSLAsRsp:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        total:
          type: integer
      type: object
    ListSwaggerVersionRsp:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        total:
          type: integer
      type: object
    ListTestFileRecordsResponse:
      properties:
        Data:
          $ref: '#/components/schemas/emptyObject'
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    MRCommentInfo:
      properties:
        appID:
          type: integer
        mrID:
          type: integer
        mrTitle:
          type: string
      type: object
    MemberRoleListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/RoleList'
      type: object
    MessageCertificateKeyDTO:
      properties:
        key:
          type: string
      type: object
    OrgCreateRequest:
      properties:
        admins:
          items:
            type: string
          type: array
        desc:
          type: string
        displayName:
          type: string
        isPublic:
          type: boolean
        locale:
          type: string
        logo:
          type: string
        name:
          type: string
        publisherName:
          type: string
        type:
          type: string
      type: object
    OrgCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/OrgDTO'
      type: object
    OrgDTO:
      properties:
        auditMessage:
          $ref: '#/components/schemas/AuditMessage'
        blockoutConfig:
          $ref: '#/components/schemas/BlockoutConfig'
        config:
          $ref: '#/components/schemas/emptyObject'
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        desc:
          type: string
        displayName:
          type: string
        domain:
          type: string
        enableReleaseCrossCluster:
          type: boolean
        id:
          type: integer
        isPublic:
          type: boolean
        locale:
          type: string
        logo:
          type: string
        name:
          type: string
        openFdp:
          type: boolean
        operation:
          type: string
        publisherId:
          type: integer
        selected:
          type: boolean
        status:
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        version:
          type: integer
      type: object
    OrgGetByDomainResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    OrgNexusGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    OrgNexusShowPasswordResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    OrgResourceInfo:
      properties:
        availableCpu:
          type: number
        availableMem:
          type: number
        totalCpu:
          type: number
        totalMem:
          type: number
      type: object
    OrgSearchResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PagingOrgDTO'
      type: object
    OrgUpdateRequest:
      properties:
        body:
          $ref: '#/components/schemas/OrgUpdateRequestBody'
      type: object
    OrgUpdateRequestBody:
      properties:
        blockoutConfig:
          $ref: '#/components/schemas/emptyObject'
        config:
          $ref: '#/components/schemas/emptyObject'
        desc:
          type: string
        displayName:
          type: string
        id:
          type: integer
        isPublic:
          type: boolean
        locale:
          type: string
        logo:
          type: string
        name:
          type: string
        publisherName:
          type: string
      type: object
    PagingAppCertificateDTO:
      properties:
        list:
          items:
            $ref: '#/components/schemas/ApplicationCertificateDTO'
          type: array
        total:
          type: integer
      type: object
    PagingCertificateDTO:
      properties:
        list:
          items:
            $ref: '#/components/schemas/CertificateDTO'
          type: array
        total:
          type: integer
      type: object
    PagingOrgDTO:
      properties:
        list:
          items:
            $ref: '#/components/schemas/OrgDTO'
          type: array
        total:
          type: integer
      type: object
    PagingProjectDTO:
      properties:
        list:
          items:
            $ref: '#/components/schemas/ProjectDTO'
          type: array
        total:
          type: integer
      type: object
    PagingPublisherDTO:
      properties:
        list:
          items:
            $ref: '#/components/schemas/PublisherDTO'
          type: array
        total:
          type: integer
      type: object
    Percentage:
      properties:
        name:
          type: string
        value:
          type: number
      type: object
    PipelineAppAllValidBranchWorkspaceResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/ValidBranch'
          type: array
      type: object
    PipelineCancelResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    PipelineConfigNamespacesFetchResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineCreateRequest:
      properties:
        appID:
          type: integer
        autoRun:
          type: boolean
        branch:
          type: string
        callbackURLs:
          items:
            type: string
          type: array
        isCronTriggered:
          type: boolean
        pipelineYmlContent:
          type: string
        pipelineYmlName:
          type: string
        pipelineYmlSource:
          type: string
        source:
          type: string
        userID:
          type: string
      type: object
    PipelineCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineCronDTO:
      properties:
        applicationID:
          type: integer
        basePipelineID:
          type: integer
        branch:
          type: string
        clusterName:
          type: string
        configManageNamespaces:
          items:
            type: string
          type: array
        cronExpr:
          type: string
        cronStartTime:
          format: date-time
          type: string
        enable:
          $ref: '#/components/schemas/emptyObject'
        id:
          type: integer
        orgID:
          type: integer
        pipelineDefinitionID:
          type: string
        pipelineSource:
          type: string
        pipelineYml:
          type: string
        pipelineYmlName:
          type: string
        secrets:
          $ref: '#/components/schemas/emptyObject'
        timeCreated:
          format: date-time
          type: string
        timeUpdated:
          format: date-time
          type: string
        userID:
          type: string
      type: object
    PipelineCronListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/PipelineCronDTO'
          type: array
      type: object
    PipelineCronStartResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineCronStopResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineDetailResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineGetBranchRuleResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineInvokedCombo:
      properties:
        branch:
          type: string
        cancelUser:
          $ref: '#/components/schemas/emptyObject'
        commit:
          type: string
        pagingYmlNames:
          items:
            type: string
          type: array
        pipelineID:
          type: integer
        source:
          type: string
        status:
          type: string
        timeCreated:
          format: date-time
          type: string
        triggerMode:
          type: string
        workspace:
          type: string
        ymlName:
          type: string
      type: object
    PipelineInvokedComboResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/PipelineInvokedCombo'
          type: array
      type: object
    PipelineOperateRequest:
      properties:
        taskOperates:
          items:
            $ref: '#/components/schemas/PipelineTaskOperateRequest'
          type: array
      type: object
    PipelineOperateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    PipelinePageListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineRerunFailedResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineRerunResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineRunParam:
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PipelineRunResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    PipelineTaskOperateRequest:
      properties:
        disable:
          $ref: '#/components/schemas/emptyObject'
        pause:
          $ref: '#/components/schemas/emptyObject'
        taskAlias:
          type: string
        taskID:
          type: integer
      type: object
    ProjectCreateRequest:
      properties:
        clusterConfig:
          $ref: '#/components/schemas/emptyObject'
        clusterId:
          type: integer
        clusterName:
          type: string
        cpuQuota:
          type: number
        creator:
          type: string
        ddHook:
          type: string
        desc:
          type: string
        displayName:
          type: string
        logo:
          type: string
        memQuota:
          type: number
        name:
          type: string
        orgId:
          type: integer
        resourceConfig:
          $ref: '#/components/schemas/emptyObject'
        rollbackConfig:
          $ref: '#/components/schemas/emptyObject'
        template:
          type: string
      type: object
    ProjectCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    ProjectDTO:
      properties:
        CanManage:
          type: boolean
        ProjectResourceUsage:
          $ref: '#/components/schemas/ProjectResourceUsage'
        activeTime:
          type: string
        blockStatus:
          type: string
        canUnblock:
          $ref: '#/components/schemas/emptyObject'
        clusterConfig:
          $ref: '#/components/schemas/emptyObject'
        cpuQuota:
          type: number
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        ddHook:
          type: string
        desc:
          type: string
        displayName:
          type: string
        id:
          type: integer
        isPublic:
          type: boolean
        joined:
          type: boolean
        logo:
          type: string
        memQuota:
          type: number
        name:
          type: string
        orgId:
          type: integer
        owners:
          items:
            type: string
          type: array
        resourceConfig:
          $ref: '#/components/schemas/emptyObject'
        rollbackConfig:
          $ref: '#/components/schemas/emptyObject'
        stats:
          $ref: '#/components/schemas/ProjectStats'
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    ProjectDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/ProjectDTO'
      type: object
    ProjectDetailResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/ProjectDTO'
      type: object
    ProjectListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PagingProjectDTO'
      type: object
    ProjectPackageRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        orgID:
          type: integer
        orgName:
          type: string
        projectDisplayName:
          type: string
        projectID:
          type: integer
        projectName:
          type: string
      type: object
    ProjectResourceUsage:
      properties:
        cpuAddonUsed:
          type: number
        cpuServiceUsed:
          type: number
        memAddonUsed:
          type: number
        memServiceUsed:
          type: number
      type: object
    ProjectStats:
      properties:
        countApplications:
          type: integer
        countMembers:
          type: integer
        doneBugCount:
          type: integer
        doneBugPercent:
          type: number
        planningIterationsCount:
          type: integer
        planningManHourCount:
          type: number
        runningIterationsCount:
          type: integer
        totalApplicationsCount:
          type: integer
        totalBugCount:
          type: integer
        totalIterationsCount:
          type: integer
        totalManHourCount:
          type: number
        totalMembersCount:
          type: integer
        usedManHourCount:
          type: number
      type: object
    PropertyEnumerate:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    PublishItemStatisticsDetailData:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/PublishItemStatisticsDetailResponse'
          type: array
      type: object
    PublishItemStatisticsDetailResponse:
      properties:
        activeUsers:
          type: integer
        activeUsersGrowth:
          type: string
        launches:
          type: integer
        newUsers:
          type: integer
        totalUsers:
          type: integer
        totalUsersGrowth:
          type: string
        upgradeUser:
          type: integer
        versionOrChannel:
          type: string
      type: object
    PublishItemStatisticsErrListData:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/PublishItemStatisticsErrListResponse'
          type: array
      type: object
    PublishItemStatisticsErrListResponse:
      properties:
        affectUsers:
          type: integer
        appVersion:
          type: string
        errSummary:
          type: string
        timeOfFirst:
          format: date-time
          type: string
        timeOfRecent:
          format: date-time
          type: string
        totalErr:
          type: integer
      type: object
    PublishItemStatisticsErrTrendData:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PublishItemStatisticsErrTrendResponse'
      type: object
    PublishItemStatisticsErrTrendResponse:
      properties:
        affectUsers:
          type: integer
        affectUsersProportion:
          type: string
        affectUsersProportionGrowth:
          type: number
        crashRate:
          type: string
        crashRateGrowth:
          type: number
        crashTimes:
          type: integer
      type: object
    PublishItemStatisticsTrendData:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PublishItemStatisticsTrendResponse'
      type: object
    PublishItemStatisticsTrendResponse:
      properties:
        7dAvgActiveUsers:
          type: integer
        7dAvgActiveUsersGrowth:
          type: number
        7dAvgDuration:
          type: string
        7dAvgDurationGrowth:
          type: number
        7dAvgNewUsers:
          type: integer
        7dAvgNewUsersGrowth:
          type: number
        7dAvgNewUsersRetention:
          type: string
        7dAvgNewUsersRetentionGrowth:
          type: number
        7dTotalActiveUsers:
          type: integer
        7dTotalActiveUsersGrowth:
          type: number
        monthTotalActiveUsers:
          type: integer
        monthTotalActiveUsersGrowth:
          type: number
        totalCrashRate:
          type: string
        totalUsers:
          type: integer
      type: object
    PublisherCreateRequest:
      properties:
        desc:
          type: string
        logo:
          type: string
        name:
          type: string
        orgId:
          type: integer
        publisherType:
          type: string
      type: object
    PublisherCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    PublisherDTO:
      properties:
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        desc:
          type: string
        id:
          type: integer
        joined:
          type: boolean
        logo:
          type: string
        name:
          type: string
        nexusRepositories:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        orgId:
          type: integer
        pipelineCmNamespaces:
          items:
            type: string
          type: array
        publishKey:
          type: string
        publishType:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    PublisherDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    PublisherDetailResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PublisherDTO'
      type: object
    PublisherListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/PagingPublisherDTO'
      type: object
    PublisherUpdateRequest:
      properties:
        desc:
          type: string
        id:
          type: integer
        logo:
          type: string
      type: object
    PublisherUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    PushCertificateConfigs:
      properties:
        androidKey:
          $ref: '#/components/schemas/AndroidCertificateKeyDTO'
        certificateType:
          type: string
        enable:
          type: boolean
        envs:
          items:
            type: string
          type: array
        iosKey:
          $ref: '#/components/schemas/IOSCertificateKeyDTO'
        messageKey:
          $ref: '#/components/schemas/MessageCertificateKeyDTO'
      type: object
    PushCertificateConfigsRequest:
      properties:
        androidKey:
          $ref: '#/components/schemas/AndroidCertificateKeyDTO'
        appId:
          type: integer
        certificateId:
          type: integer
        certificateType:
          type: string
        enable:
          type: boolean
        envs:
          items:
            type: string
          type: array
        iosKey:
          $ref: '#/components/schemas/IOSCertificateKeyDTO'
        messageKey:
          $ref: '#/components/schemas/MessageCertificateKeyDTO'
      type: object
    QueryAppPublishItemRelationResponse:
      properties:
        Data:
          items:
            $ref: '#/components/schemas/AppPublishItemRelation'
          type: array
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    QueryBranchRuleResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
      type: object
    QueryPublishItemData:
      properties:
        list:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        total:
          type: integer
      type: object
    QueryPublishItemResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/QueryPublishItemData'
      type: object
    RoleInfo:
      properties:
        name:
          type: string
        role:
          type: string
      type: object
    RoleList:
      properties:
        list:
          items:
            $ref: '#/components/schemas/RoleInfo'
          type: array
        total:
          type: integer
      type: object
    SLAModel:
      properties:
        BaseModel:
          $ref: '#/components/schemas/BaseModel'
        accessID:
          type: integer
        approval:
          type: string
        desc:
          type: string
        name:
          type: string
        source:
          type: string
      type: object
    SonarCredentialGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    SonarIssueResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    SonarMetricRuleDto:
      properties:
        createdAt:
          format: date-time
          type: string
        decimalScale:
          type: integer
        description:
          type: string
        id:
          type: integer
        metricKey:
          type: string
        metricKeyDesc:
          type: string
        metricKeyId:
          type: integer
        metricValue:
          type: string
        operational:
          type: string
        scopeId:
          type: string
        scopeType:
          type: string
        updatedAt:
          format: date-time
          type: string
        valueType:
          type: string
      type: object
    SonarMetricRulesBatchInsertRequest:
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/SonarMetricRuleDto'
          type: array
        scopeId:
          type: string
        scopeType:
          type: string
      type: object
    SonarMetricRulesUpdateRequest:
      properties:
        description:
          type: string
        id:
          type: integer
        metricValue:
          type: string
        scopeId:
          type: string
        scopeType:
          type: string
      type: object
    SonarStoreRequest:
      properties:
        applicationId:
          type: integer
        applicationName:
          type: string
        branch:
          type: string
        bugs:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        buildId:
          type: integer
        code_smells:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        commitId:
          type: string
        coverage:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        duplications:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        gitRepo:
          type: string
        issues_statistics:
          $ref: '#/components/schemas/TestIssuesStatistics'
        key:
          type: string
        logId:
          type: string
        operatorId:
          type: string
        projectId:
          type: integer
        projectName:
          type: string
        vulnerabilities:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
      type: object
    SonarStoreResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestCaseBatchCleanFromRecycleBinResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestCaseBatchCopyRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        copyToTestSetID:
          type: integer
        projectID:
          type: integer
        testCaseIDs:
          items:
            type: integer
          type: array
      type: object
    TestCaseBatchCopyResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            type: integer
          type: array
      type: object
    TestCaseBatchUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        moveToTestSetID:
          $ref: '#/components/schemas/emptyObject'
        priority:
          type: string
        recycled:
          $ref: '#/components/schemas/emptyObject'
        testCaseIDs:
          items:
            type: integer
          type: array
      type: object
    TestCaseBatchUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: boolean
      type: object
    TestCaseCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        apis:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        desc:
          type: string
        labelIDs:
          items:
            type: integer
          type: array
        name:
          type: string
        preCondition:
          type: string
        priority:
          type: string
        projectID:
          type: integer
        stepAndResults:
          items:
            $ref: '#/components/schemas/TestCaseStepAndResult'
          type: array
        testSetID:
          type: integer
      type: object
    TestCaseCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TestCaseExportResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TestCaseGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestCaseImportRequest:
      properties:
        FileType:
          type: string
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        ProjectID:
          type: integer
        TestSetID:
          type: integer
      type: object
    TestCaseImportResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestCasePagingResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestCaseStepAndResult:
      properties:
        result:
          type: string
        step:
          type: string
      type: object
    TestCaseUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        apis:
          items:
            $ref: '#/components/schemas/emptyObject'
          type: array
        desc:
          type: string
        labelIDs:
          items:
            type: integer
          type: array
        name:
          type: string
        preCondition:
          type: string
        priority:
          type: string
        stepAndResults:
          items:
            $ref: '#/components/schemas/TestCaseStepAndResult'
          type: array
      type: object
    TestCaseUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestFileRecord:
      properties:
        apiFileUUID:
          type: string
        createdAt:
          format: date-time
          type: string
        description:
          type: string
        errorInfo:
          type: string
        id:
          type: integer
        name:
          type: string
        operatorID:
          type: string
        orgID:
          type: integer
        projectDisplayName:
          type: string
        projectID:
          type: integer
        projectName:
          type: string
        spaceID:
          type: integer
        state:
          type: string
        testSetID:
          type: integer
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    TestIssuesStatistics:
      properties:
        branch:
          type: string
        bugs:
          type: string
        codeSmells:
          type: string
        commitId:
          type: string
        coverage:
          type: string
        duplications:
          type: string
        path:
          type: string
        rating:
          $ref: '#/components/schemas/emptyObject'
        sonarKey:
          type: string
        time:
          format: date-time
          type: string
        ut:
          type: string
        vulnerabilities:
          type: string
      type: object
    TestPlan:
      properties:
        createdAt:
          format: date-time
          type: string
        creatorID:
          type: string
        endedAt:
          format: date-time
          type: string
        id:
          type: integer
        inode:
          type: string
        isArchived:
          type: boolean
        iterationID:
          type: integer
        iterationName:
          type: string
        name:
          type: string
        ownerID:
          type: string
        partnerIDs:
          items:
            type: string
          type: array
        projectID:
          type: integer
        relsCount:
          $ref: '#/components/schemas/TestPlanRelsCount'
        startedAt:
          format: date-time
          type: string
        status:
          type: string
        summary:
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        updaterID:
          type: string
      type: object
    TestPlanCaseRelBatchUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        delete:
          type: boolean
        execStatus:
          type: string
        executorID:
          type: string
        relationIDs:
          items:
            type: integer
          type: array
        testSetID:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestPlanCaseRelCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        testCaseIDs:
          items:
            type: integer
          type: array
        testPlanID:
          type: integer
        testSetIDs:
          items:
            type: integer
          type: array
      type: object
    TestPlanCaseRelCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestPlanCaseRelExportResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TestPlanCaseRelGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestPlanCaseRelIssueRelationAddRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        issueIDs:
          items:
            type: integer
          type: array
      type: object
    TestPlanCaseRelIssueRelationAddResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestPlanCaseRelIssueRelationRemoveRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        issueTestCaseRelationIDs:
          items:
            type: integer
          type: array
      type: object
    TestPlanCaseRelIssueRelationRemoveResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestPlanCaseRelPagingResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestPlanCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        isAutoTest:
          type: boolean
        iterationID:
          type: integer
        name:
          type: string
        ownerID:
          type: string
        partnerIDs:
          items:
            type: string
          type: array
        projectID:
          type: integer
      type: object
    TestPlanCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TestPlanGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/TestPlan'
      type: object
    TestPlanPagingResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        UserInfoHeader:
          $ref: '#/components/schemas/UserInfoHeader'
        data:
          $ref: '#/components/schemas/TestPlanPagingResponseData'
      type: object
    TestPlanPagingResponseData:
      properties:
        list:
          items:
            $ref: '#/components/schemas/TestPlan'
          type: array
        total:
          type: integer
        userIDs:
          items:
            type: string
          type: array
      type: object
    TestPlanRelsCount:
      properties:
        block:
          type: integer
        fail:
          type: integer
        init:
          type: integer
        succ:
          type: integer
        total:
          type: integer
      type: object
    TestPlanReportGenerateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestPlanTestSetListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/TestSet'
          type: array
      type: object
    TestPlanUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        isArchived:
          $ref: '#/components/schemas/emptyObject'
        iterationID:
          type: integer
        name:
          type: string
        ownerID:
          type: string
        partnerIDs:
          items:
            type: string
          type: array
        status:
          type: string
        summary:
          type: string
        timestampSecEndedAt:
          $ref: '#/components/schemas/emptyObject'
        timestampSecStartedAt:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestReportData:
      properties:
        issue-dashboard:
          $ref: '#/components/schemas/emptyObject'
        test-dashboard:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestReportRecord:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        createdAt:
          format: date-time
          type: string
        creatorID:
          type: string
        id:
          type: integer
        iterationID:
          type: integer
        name:
          type: string
        projectID:
          type: integer
        qualityScore:
          type: number
        reportData:
          $ref: '#/components/schemas/TestReportData'
        summary:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    TestSet:
      properties:
        creatorID:
          type: string
        directoryName:
          type: string
        id:
          type: integer
        name:
          type: string
        order:
          type: integer
        parentID:
          type: integer
        projectID:
          type: integer
        recycled:
          type: boolean
        updaterID:
          type: string
      type: object
    TestSetCleanFromRecycleBinResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestSetCopyRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        copyToTestSetID:
          type: integer
      type: object
    TestSetCopyResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TestSetCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        name:
          type: string
        parentID:
          $ref: '#/components/schemas/emptyObject'
        projectID:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestSetCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestSetGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestSetListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/TestSet'
          type: array
      type: object
    TestSetRecoverFromRecycleBinRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        recoverToTestSetID:
          $ref: '#/components/schemas/emptyObject'
      type: object
    TestSetRecoverFromRecycleBinResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestSetRecycleRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
      type: object
    TestSetRecycleResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    TestSetUpdateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        moveToParentID:
          $ref: '#/components/schemas/emptyObject'
        name:
          $ref: '#/components/schemas/emptyObject'
        testsetID:
          type: integer
      type: object
    Ticket:
      properties:
        closedAt:
          format: date-time
          type: string
        content:
          type: string
        count:
          type: integer
        createdAt:
          format: date-time
          type: string
        creator:
          type: string
        id:
          type: integer
        key:
          type: string
        label:
          $ref: '#/components/schemas/emptyObject'
        lastComment:
          $ref: '#/components/schemas/emptyObject'
        lastOperator:
          type: string
        metric:
          type: string
        metricID:
          type: string
        orgID:
          type: string
        priority:
          type: string
        status:
          type: string
        targetID:
          type: string
        targetType:
          type: string
        title:
          type: string
        triggeredAt:
          format: date-time
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    TicketCloseRequest:
      properties:
        TicketID:
          type: integer
      type: object
    TicketCloseResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TicketCreateRequest:
      properties:
        closedAt:
          type: integer
        content:
          type: string
        key:
          type: string
        label:
          $ref: '#/components/schemas/emptyObject'
        metric:
          type: string
        metricID:
          type: string
        orgID:
          type: string
        priority:
          type: string
        targetID:
          type: string
        targetType:
          type: string
        title:
          type: string
        triggeredAt:
          type: integer
        type:
          type: string
        userID:
          type: string
      type: object
    TicketCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TicketDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TicketFetchResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/Ticket'
      type: object
    TicketListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/TicketListResponseData'
      type: object
    TicketListResponseData:
      properties:
        tickets:
          items:
            $ref: '#/components/schemas/Ticket'
          type: array
        total:
          type: integer
      type: object
    TicketReopenRequest:
      properties:
        TicketID:
          type: integer
      type: object
    TicketReopenResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    TicketUpdateRequest:
      properties:
        body:
          $ref: '#/components/schemas/TicketUpdateRequestBody'
      type: object
    TicketUpdateRequestBody:
      properties:
        content:
          type: string
        priority:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    TicketUpdateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          type: integer
      type: object
    UnifiedFileTreeNode:
      properties:
        createdAt:
          format: date-time
          type: string
        creatorID:
          type: string
        desc:
          type: string
        inode:
          type: string
        meta:
          $ref: '#/components/schemas/emptyObject'
        name:
          type: string
        pinode:
          type: string
        scope:
          type: string
        scopeID:
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        updaterID:
          type: string
      type: object
    UnifiedFileTreeNodeCopyRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        inode:
          type: string
        pinode:
          type: string
      type: object
    UnifiedFileTreeNodeCopyResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UnifiedFileTreeNodeCreateRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        desc:
          type: string
        name:
          type: string
        pinode:
          type: string
        scope:
          type: string
        scopeID:
          type: string
        type:
          type: string
      type: object
    UnifiedFileTreeNodeCreateResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UnifiedFileTreeNodeDeleteRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        inode:
          type: string
        scope:
          type: string
        scopeID:
          type: string
      type: object
    UnifiedFileTreeNodeDeleteResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UnifiedFileTreeNodeFindAncestorsRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        inode:
          type: string
        scope:
          type: string
        scopeID:
          type: string
      type: object
    UnifiedFileTreeNodeFindAncestorsResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/UnifiedFileTreeNode'
          type: array
      type: object
    UnifiedFileTreeNodeFuzzySearchRequest:
      properties:
        CreatorID:
          type: string
        FromPinode:
          type: string
        Fuzzy:
          type: string
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        PrefixFuzzy:
          type: string
        Recursive:
          type: boolean
        Scope:
          type: string
        ScopeID:
          type: string
        SuffixFuzzy:
          type: string
      type: object
    UnifiedFileTreeNodeFuzzySearchResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/UnifiedFileTreeNode'
          type: array
      type: object
    UnifiedFileTreeNodeGetRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        inode:
          type: string
        scope:
          type: string
        scopeID:
          type: string
      type: object
    UnifiedFileTreeNodeGetResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UnifiedFileTreeNodeListRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        Pinode:
          type: string
        PipelineCategoryKey:
          type: string
        Scope:
          type: string
        ScopeID:
          type: string
      type: object
    UnifiedFileTreeNodeListResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          items:
            $ref: '#/components/schemas/UnifiedFileTreeNode'
          type: array
      type: object
    UnifiedFileTreeNodeMoveRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        inode:
          type: string
        pinode:
          type: string
      type: object
    UnifiedFileTreeNodeMoveResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UnifiedFileTreeNodeUpdateBasicInfoRequest:
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/IdentityInfo'
        desc:
          $ref: '#/components/schemas/emptyObject'
        inode:
          type: string
        name:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UnifiedFileTreeNodeUpdateBasicInfoResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UpdateAPIAssetReq:
      properties:
        Identity:
          $ref: '#/components/schemas/emptyObject'
        Keys:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UpdateAppPublishItemRelationRequest:
      properties:
        DEV:
          type: integer
        PROD:
          type: integer
        STAGING:
          type: integer
        TEST:
          type: integer
      type: object
    UpdateAppPublishItemRelationResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
      type: object
    UpdateAssetVersionReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UpdateBranchRuleRequest:
      properties:
        artifactWorkspace:
          type: string
        desc:
          type: string
        isProtect:
          type: boolean
        isTriggerPipeline:
          type: boolean
        needApproval:
          type: boolean
        rule:
          type: string
        workspace:
          type: string
      type: object
    UpdateBranchRuleResponse:
      properties:
        Header:
          $ref: '#/components/schemas/Header'
        data:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UpdateClientReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        QueryParams:
          $ref: '#/components/schemas/emptyObject'
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UpdateInstantiationReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UpdateSLAReq:
      properties:
        Body:
          $ref: '#/components/schemas/emptyObject'
        Identity:
          $ref: '#/components/schemas/emptyObject'
        OrgID:
          type: integer
        URIParams:
          $ref: '#/components/schemas/emptyObject'
      type: object
    UserInfoHeader:
      properties:
        userIDs:
          items:
            type: string
          type: array
        userInfo:
          $ref: '#/components/schemas/emptyObject'
      type: object
    ValidBranch:
      properties:
        artifactWorkspace:
          type: string
        isProtect:
          type: boolean
        isTriggerPipeline:
          type: boolean
        name:
          type: string
        needApproval:
          type: boolean
        workspace:
          type: string
      type: object
    emptyObject:
      type: object
  
tags:
  - name: default
  - name: tickets
  