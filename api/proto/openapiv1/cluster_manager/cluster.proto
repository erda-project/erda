// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.cluster;

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/cluster/manager/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message CLUSTER_MANAGER_CONNECT_Request {
}
// generate service from openapi spec: cluster_manager
service cluster_manager {
    option (erda.common.openapi_service) = {
        service: "cluster",
    };

    rpc CLUSTER_MANAGER_CONNECT (CLUSTER_MANAGER_CONNECT_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/clusteragent/connect",
        };
        option (erda.common.openapi) = {
            path: "/clusteragent/connect",
            auth: {
                no_check: true,
                check_login: false,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "cluster-agent向cluster-manager注册",
        };
    };
}
