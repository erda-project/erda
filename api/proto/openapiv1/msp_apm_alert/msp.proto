// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.msp;

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/msp/apm/alert/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message APM_ALERT_RECORD_ISSUE_CREATE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string groupId = 2; // generated from path variable: groupId. You should change the proto type if necessary
}
message APM_ALERT_UPDATE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERTS_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_SWITCH_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_UPDATE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_ALERTS_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_SWITCH_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_DELETE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_ALERTS_RULES_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_CREATE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_RECORD_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string groupId = 2; // generated from path variable: groupId. You should change the proto type if necessary
}
message APM_ALERT_RECORD_ATTRS_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_RECORD_ISSUE_UPDATE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string groupId = 2; // generated from path variable: groupId. You should change the proto type if necessary
    string issueId = 3; // generated from path variable: issueId. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_DASH_PREVIEW_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_ALERT_RECORDS_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_RECORD_HISTORIES_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string groupId = 2; // generated from path variable: groupId. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_CREATE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_METRICS_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_CUSTOMIZE_ALERT_NOTIFY_TARGET_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
}
message APM_ALERT_DELETE_Request {
    string tenantGroup = 1; // generated from path variable: tenantGroup. You should change the proto type if necessary
    string id = 2; // generated from path variable: id. You should change the proto type if necessary
}
// generate service from openapi spec: msp_apm_alert
service msp_apm_alert {
    option (erda.common.openapi_service) = {
        service: "msp",
    };

    rpc APM_ALERT (APM_ALERT_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警详情",
        };
    };
    rpc APM_ALERTS (APM_ALERTS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警列表",
        };
    };
    rpc APM_ALERTS_RULES (APM_ALERTS_RULES_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts-rules",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts-rules",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警规则列表",
        };
    };
    rpc APM_ALERT_CREATE (APM_ALERT_CREATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 创建微服务告警",
        };
    };
    rpc APM_ALERT_DELETE (APM_ALERT_DELETE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 删除微服务告警",
        };
    };
    rpc APM_ALERT_RECORD (APM_ALERT_RECORD_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警记录",
        };
    };
    rpc APM_ALERT_RECORDS (APM_ALERT_RECORDS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/tenantGroup/{tenantGroup}/alert-records",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/tenantGroup/{tenantGroup}/alert-records",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警记录列表",
        };
    };
    rpc APM_ALERT_RECORD_ATTRS (APM_ALERT_RECORD_ATTRS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/tenantGroup/{tenantGroup}/alert-record-attrs",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/tenantGroup/{tenantGroup}/alert-record-attrs",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警记录属性",
        };
    };
    rpc APM_ALERT_RECORD_HISTORIES (APM_ALERT_RECORD_HISTORIES_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}/histories",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}/histories",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务告警记录历史",
        };
    };
    rpc APM_ALERT_RECORD_ISSUE_CREATE (APM_ALERT_RECORD_ISSUE_CREATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}/issues",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}/issues",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 创建微服务告警记录工单",
        };
    };
    rpc APM_ALERT_RECORD_ISSUE_UPDATE (APM_ALERT_RECORD_ISSUE_UPDATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}/issues/{issueId}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/tenantGroup/{tenantGroup}/alert-records/{groupId}/issues/{issueId}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 修改微服务告警记录工单",
        };
    };
    rpc APM_ALERT_SWITCH (APM_ALERT_SWITCH_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}/switch",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}/switch",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 切换微服务告警开关",
        };
    };
    rpc APM_ALERT_UPDATE (APM_ALERT_UPDATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/alerts/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 修改微服务告警",
        };
    };
    rpc APM_CUSTOMIZE_ALERT (APM_CUSTOMIZE_ALERT_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务自定义告警详情",
        };
    };
    rpc APM_CUSTOMIZE_ALERTS (APM_CUSTOMIZE_ALERTS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取微服务自定义告警列表",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_CREATE (APM_CUSTOMIZE_ALERT_CREATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 创建微服务自定义告警",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_DASH_PREVIEW (APM_CUSTOMIZE_ALERT_DASH_PREVIEW_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/dash-preview/query",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/dash-preview/query",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 微服务自定义告警预览大盘生成",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_DELETE (APM_CUSTOMIZE_ALERT_DELETE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 删除微服务自定义告警",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_METRICS (APM_CUSTOMIZE_ALERT_METRICS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/metrics",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/metrics",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取企业自定义告警指标",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_NOTIFY_TARGET (APM_CUSTOMIZE_ALERT_NOTIFY_TARGET_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/notifies/targets",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/notifies/targets",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取企业自定义告警通知方式",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_SWITCH (APM_CUSTOMIZE_ALERT_SWITCH_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}/switch",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}/switch",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 切换微服务自定义告警开关",
        };
    };
    rpc APM_CUSTOMIZE_ALERT_UPDATE (APM_CUSTOMIZE_ALERT_UPDATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/micro-service/tenantGroup/{tenantGroup}/customize/alerts/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 修改微服务自定义告警",
        };
    };
}
