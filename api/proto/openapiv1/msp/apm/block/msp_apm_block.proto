// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.openapiv1.msp; // remove 'openapiv1.' when you make this proto file effective

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/msp/apm/block/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message CREATE_BLOCK_Request {
}
message DELETE_BLOCK_Request {
    string id = 1; // generated from path variable: id. You should change the proto type if necessary.
}
message GET_BLOCK_Request {
    string id = 1; // generated from path variable: id. You should change the proto type if necessary.
}
message LIST_BLOCKS_Request {
}
message TMC_METRIC_DASHBOARD_UPDATE_Request {
    string id = 1; // generated from path variable: id. You should change the proto type if necessary.
}
// generate service from openapi spec: msp_apm_block
service msp_apm_block {
    option (erda.common.openapi_service) = {
        service: "msp",
    };

    rpc CREATE_BLOCK (CREATE_BLOCK_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/dashboard/blocks",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/dashboard/blocks",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 创建自定义大盘",
        };
    };
    rpc DELETE_BLOCK (DELETE_BLOCK_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/tmc/dashboard/blocks/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/dashboard/blocks/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 删除自定义大盘",
        };
    };
    rpc GET_BLOCK (GET_BLOCK_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/dashboard/blocks/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/dashboard/blocks/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取自定义大盘详情",
        };
    };
    rpc LIST_BLOCKS (LIST_BLOCKS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/dashboard/blocks",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/dashboard/blocks",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取自定义大盘列表",
        };
    };
    rpc TMC_METRIC_DASHBOARD_UPDATE (TMC_METRIC_DASHBOARD_UPDATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/tmc/dashboard/blocks/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/dashboard/blocks/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 更新自定义大盘",
        };
    };
}
