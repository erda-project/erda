// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.officer;

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/officer/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message OFFICER_GET_PRICE_Request {
}
message ScriptInfo {
    string md5 = 1;
    string name = 2;
    int64 size = 3;
    repeated string scriptBlackList = 4 [json_name = "blackList"];
}
message OFFICER_GET_SCRIPT_INFO_Request {
}
message OFFICER_FETCH_SCRIPT_Request {
    string name = 1; // generated from path variable: name. You should change the proto type if necessary
}
// generate service from openapi spec: officer
service officer {
    option (erda.common.openapi_service) = {
        service: "officer",
    };

    rpc OFFICER_FETCH_SCRIPT (OFFICER_FETCH_SCRIPT_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/script/{name}",
        };
        option (erda.common.openapi) = {
            path: "/api/script/{name}",
            auth: {
                no_check: false,
                check_login: false,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 同步脚本",
        };
    };
    rpc OFFICER_GET_PRICE (OFFICER_GET_PRICE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/resource/aliyun/price",
        };
        option (erda.common.openapi) = {
            path: "/api/resource/aliyun/price",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 获取阿里云指定资源价格",
        };
    };
    rpc OFFICER_GET_SCRIPT_INFO (OFFICER_GET_SCRIPT_INFO_Request) returns (ScriptInfo) {
        option (google.api.http) = {
            get: "/api/script/info",
        };
        option (erda.common.openapi) = {
            path: "/api/script/info",
            auth: {
                no_check: false,
                check_login: false,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取最新的脚本信息",
        };
    };
}
