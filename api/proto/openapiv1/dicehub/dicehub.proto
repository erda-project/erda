// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.openapiv1.dicehub; // remove 'openapiv1.' when you make this proto file effective

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/dicehub/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message CreateBranchRuleResponse {
    optional google.protobuf.Value data = 1;
}
message CreateUpdateDeleteReleaseRuleRequest {
    uint64 orgID = 1;
    uint64 projectID = 2;
    uint64 userID = 3;
    string ruleID = 4;
    optional google.protobuf.Value body = 5;
}
message DICEHUB_RELEASES_DOWNLOAD_Request {
    string releaseId = 1; // generated from path variable: releaseId. You should change the proto type if necessary.
}
message H5VersionInfo {
    google.protobuf.Value versionInfo = 1;
    map<string, google.protobuf.Value> targetMobiles = 2;
}
message RELEASE_RULE_LIST_Request {
}
message RELEASE_RULE_UPDATE_Request {
    string id = 1; // generated from path variable: id. You should change the proto type if necessary.
}
message RELEASE_RULE_delete_Request {
    string id = 1; // generated from path variable: id. You should change the proto type if necessary.
}
message ReleaseData {
    string releaseID = 1 [json_name = "releaseId"];
    string releaseName = 2;
    string diceyml = 3;
    string desc = 4;
    string addon = 5;
    string changelog = 6;
    bool isStable = 7;
    bool isFormal = 8;
    bool isProjectRelease = 9;
    string applicationReleaseList = 10;
    repeated google.protobuf.Value resources = 11;
    repeated string images = 12;
    repeated google.protobuf.Value serviceImages = 13;
    map<string, string> labels = 14;
    repeated google.protobuf.Value tags = 15;
    string version = 16;
    bool crossCluster = 17;
    int64 reference = 18;
    int64 orgID = 19 [json_name = "orgId"];
    int64 projectID = 20 [json_name = "projectId"];
    int64 applicationID = 21 [json_name = "applicationId"];
    string projectName = 22;
    string applicationName = 23;
    string userID = 24 [json_name = "userId"];
    string clusterName = 25;
    google.protobuf.Timestamp createdAt = 26;
    google.protobuf.Timestamp updatedAt = 27;
    bool isLatest = 28;
}
message ReleaseGetDiceYmlRequest {
    string releaseID = 1 [json_name = "-"];
}
message ReleaseListRequest {
    string query = 1 [json_name = "-"];
    string releaseID = 2 [json_name = "-"];
    string releaseName = 3 [json_name = "-"];
    string cluster = 4 [json_name = "-"];
    string branch = 5 [json_name = "-"];
    bool latest = 6 [json_name = "-"];
    optional bool isStable = 7 [json_name = "-"];
    optional bool isFormal = 8 [json_name = "-"];
    optional bool isProjectRelease = 9 [json_name = "-"];
    repeated string userID = 10 [json_name = "-"];
    string version = 11;
    string commitID = 12 [json_name = "-"];
    string tags = 13 [json_name = "-"];
    bool isVersion = 14 [json_name = "-"];
    optional bool crossCluster = 15 [json_name = "-"];
    optional string crossClusterOrSpecifyCluster = 16 [json_name = "-"];
    repeated string applicationID = 17 [json_name = "-"];
    int64 projectID = 18 [json_name = "-"];
    int64 startTime = 19 [json_name = "-"];
    int64 endTime = 20 [json_name = "-"];
    int64 pageSize = 21 [json_name = "-"];
    int64 pageNum = 22 [json_name = "-"];
    string orderBy = 23;
    string order = 24 [json_name = "descOrder"];
}
message ReleaseListResponse {
    google.protobuf.Value data = 1;
}
message ReleaseListResponseData {
    int64 total = 1;
    repeated google.protobuf.Value releases = 2 [json_name = "list"];
}
message ReleaseResource {
    string type = 1;
    string name = 2;
    string uRL = 3 [json_name = "url"];
    map<string, google.protobuf.Value> meta = 4;
}
message ReleaseTag {
    google.protobuf.Timestamp createdAt = 1;
    google.protobuf.Timestamp updatedAt = 2;
    string creator = 3;
    int64 id = 4;
    string color = 5;
    string name = 6;
    string type = 7;
    int64 projectID = 8;
}
message VersionInfo {
    string packageName = 1;
    string version = 2;
    string buildID = 3 [json_name = "buildId"];
}
// generate service from openapi spec: dicehub
service dicehub {
    option (erda.common.openapi_service) = {
        service: "dicehub",
    };

    rpc DICEHUB_RELEASES_DOWNLOAD (DICEHUB_RELEASES_DOWNLOAD_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/releases/{releaseId}/actions/download",
        };
        option (erda.common.openapi) = {
            path: "/api/releases/{releaseId}/actions/download",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "下载Release Yaml文件",
        };
    };
    rpc DICEHUB_RELEASES_YAML_GET (ReleaseGetDiceYmlRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/releases/{releaseID}/actions/get-dice",
        };
        option (erda.common.openapi) = {
            path: "/api/releases/{releaseID}/actions/get-dice",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取指定版本dice.yml内容parameters:  - in: path    name: releaseId    type: string    required: trueproduces:  - application/x-yamlresponses:  '200':    description: Dice.yaml content",
        };
    };
    rpc IMAGEHUB_IMAGE_LIST (ReleaseListRequest) returns (ReleaseListResponse) {
        option (google.api.http) = {
            get: "/api/images",
        };
        option (erda.common.openapi) = {
            path: "/api/images",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 版本镜像列表",
        };
    };
    rpc RELEASE_RULE_CREATE (CreateUpdateDeleteReleaseRuleRequest) returns (CreateBranchRuleResponse) {
        option (google.api.http) = {
            post: "/api/release-rules",
        };
        option (erda.common.openapi) = {
            path: "/api/release-rules",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "创建制品规则",
        };
    };
    rpc RELEASE_RULE_LIST (RELEASE_RULE_LIST_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/release-rules",
        };
        option (erda.common.openapi) = {
            path: "/api/release-rules",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "列举制品规则",
        };
    };
    rpc RELEASE_RULE_UPDATE (RELEASE_RULE_UPDATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/release-rules/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/release-rules/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "修改制品规则",
        };
    };
    rpc RELEASE_RULE_delete (RELEASE_RULE_delete_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/release-rules/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/release-rules/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "删除制品规则",
        };
    };
}
