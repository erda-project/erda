// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.testplatform;

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/testplatform/testplan/rel/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message TestPlanCaseRelPagingRequest {
    int64 pageNo = 1;
    int64 pageSize = 2;
    repeated uint64 relIDs = 3;
    uint64 testPlanID = 4;
    uint64 testSetID = 5;
    string query = 6;
    repeated string priorities = 7;
    repeated string updaterIDs = 8;
    repeated string executorIDs = 9;
    repeated string execStatuses = 10;
    optional google.protobuf.Duration timestampSecUpdatedAtBegin = 11;
    optional google.protobuf.Duration timestampSecUpdatedAtEnd = 12;
    optional google.protobuf.Timestamp updatedAtBeginInclude = 13;
    optional google.protobuf.Timestamp updatedAtEndInclude = 14;
    repeated string orderFields = 15;
    optional bool orderByPriorityAsc = 16;
    optional bool orderByPriorityDesc = 17;
    optional bool orderByUpdaterIDAsc = 18;
    optional bool orderByUpdaterIDDesc = 19;
    optional bool orderByUpdatedAtAsc = 20;
    optional bool orderByUpdatedAtDesc = 21;
    optional bool orderByIDAsc = 22;
    optional bool orderByIDDesc = 23;
    optional bool orderByTestSetIDAsc = 24;
    optional bool orderByTestSetIDDesc = 25;
    optional bool orderByTestSetNameAsc = 26;
    optional bool orderByTestSetNameDesc = 27;
    optional google.protobuf.Value testPlan = 28;
}
message TestPlanCaseRelExportRequest {
    google.protobuf.Value testPlanCaseRelPagingRequest = 1;
    string locale = 2;
    string fileType = 3;
    string testPlanID = 4; // generated from path variable: testPlanID. You should change the proto type if necessary
}
message TestPlanCaseRelExportResponse {
    int64 data = 1;
}
message TestPlanCaseRelGetResponse {
    optional google.protobuf.Value data = 1;
}
message TestPlanCaseRelPagingResponse {
    optional google.protobuf.Value data = 1;
}
message TestPlanCaseRelIssueRelationRemoveResponse {
}
message TestPlanCaseRelIssueRelationAddRequest {
    repeated uint64 issueIDs = 1;
    uint64 testPlanID = 2 [json_name = "-"];
    uint64 testPlanCaseRelID = 3 [json_name = "-"];
    string relationID = 4; // generated from path variable: relationID. You should change the proto type if necessary
}
message TestPlanCaseRelCreateRequest {
    uint64 testPlanID = 1;
    repeated uint64 testCaseIDs = 2;
    repeated uint64 testSetIDs = 3;
}
message TestPlanCaseRelCreateResponse {
    optional google.protobuf.Value data = 1;
}
message TestPlanCaseRelGetRequest {
    uint64 relationID = 1;
    string testPlanID = 2; // generated from path variable: testPlanID. You should change the proto type if necessary
}
message TestPlanCaseRelIssueRelationRemoveRequest {
    repeated uint64 issueTestCaseRelationIDs = 1;
    uint64 testPlanID = 2 [json_name = "-"];
    uint64 testPlanCaseRelID = 3 [json_name = "-"];
    string relationID = 4; // generated from path variable: relationID. You should change the proto type if necessary
}
message TestPlanCaseRelIssueRelationAddResponse {
}
message TestPlanCaseRelBatchUpdateRequest {
    bool delete = 1;
    string executorID = 2;
    string execStatus = 3;
    uint64 testPlanID = 4 [json_name = "-"];
    optional uint64 testSetID = 5;
    repeated uint64 relationIDs = 6;
    uint64 projectID = 7 [json_name = "-"];
}
// generate service from openapi spec: testplatform_testplan_rel
service testplatform_testplan_rel {
    option (erda.common.openapi_service) = {
        service: "testplatform",
    };

    rpc ADD_ISSUE_RELATION (TestPlanCaseRelIssueRelationAddRequest) returns (TestPlanCaseRelIssueRelationAddResponse) {
        option (google.api.http) = {
            post: "/api/testplans/{testPlanID}/testcase-relations/{relationID}/actions/add-issue-relations",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/testcase-relations/{relationID}/actions/add-issue-relations",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 新增测试计划用例里的缺陷关联关系",
        };
    };
    rpc BATCH_UPDATE (TestPlanCaseRelBatchUpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/testplans/{testPlanID}/testcase-relations/actions/batch-update",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/testcase-relations/actions/batch-update",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 批量更新测试计划用例关系",
        };
    };
    rpc CREATE (TestPlanCaseRelCreateRequest) returns (TestPlanCaseRelCreateResponse) {
        option (google.api.http) = {
            post: "/api/testplans/{testPlanID}/testcase-relations",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/testcase-relations",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 测试计划关联测试用例",
        };
    };
    rpc EXPORT (TestPlanCaseRelExportRequest) returns (TestPlanCaseRelExportResponse) {
        option (google.api.http) = {
            get: "/api/testplans/{testPlanID}/actions/export",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/actions/export",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 导出测试计划下的测试用例",
        };
    };
    rpc GET (TestPlanCaseRelGetRequest) returns (TestPlanCaseRelGetResponse) {
        option (google.api.http) = {
            get: "/api/testplans/{testPlanID}/testcase-relations/{relationID}",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/testcase-relations/{relationID}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 获取测试计划用例关系详情",
        };
    };
    rpc PAGING (TestPlanCaseRelPagingRequest) returns (TestPlanCaseRelPagingResponse) {
        option (google.api.http) = {
            get: "/api/testplans/{testPlanID}/testcase-relations",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/testcase-relations",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 获取测试计划用例关系列表",
        };
    };
    rpc REMOVE_ISSUE_RELATION (TestPlanCaseRelIssueRelationRemoveRequest) returns (TestPlanCaseRelIssueRelationRemoveResponse) {
        option (google.api.http) = {
            post: "/api/testplans/{testPlanID}/testcase-relations/{relationID}/actions/remove-issue-relations",
        };
        option (erda.common.openapi) = {
            path: "/api/testplans/{testPlanID}/testcase-relations/{relationID}/actions/remove-issue-relations",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "summary: 解除测试计划用例里的缺陷关联关系",
        };
    };
}
