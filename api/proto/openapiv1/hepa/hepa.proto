// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.hepa;

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/hepa/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message HEPA_DOMAINS_GET_Request {
}
message DomainListRequest {
    uint64 runtimeID = 1 [json_name = "runtimeId"];
}
message DomainListResponse {
    map<string, google.protobuf.Value> data = 1;
}
message HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request {
    string runtimeId = 1; // generated from path variable: runtimeId. You should change the proto type if necessary
    string serviceName = 2; // generated from path variable: serviceName. You should change the proto type if necessary
}
// generate service from openapi spec: hepa
service hepa {
    option (erda.common.openapi_service) = {
        service: "hepa",
    };

    rpc HEPA_DOMAINS_GET (HEPA_DOMAINS_GET_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/domains",
        };
        option (erda.common.openapi) = {
            path: "/api/domains",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "获取域名列表",
        };
    };
    rpc HEPA_RUNTIME_DOMAIN_GET (DomainListRequest) returns (DomainListResponse) {
        option (google.api.http) = {
            get: "/api/runtimes/{runtimeID}/k8s-domains",
        };
        option (erda.common.openapi) = {
            path: "/api/runtimes/{runtimeID}/k8s-domains",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "获取 Runtime 域名",
        };
    };
    rpc HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE (HEPA_RUNTIME_SERVICE_DOMAIN_UPDATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/runtimes/{runtimeId}/services/{serviceName}/domains",
        };
        option (erda.common.openapi) = {
            path: "/api/runtimes/{runtimeId}/services/{serviceName}/domains",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: false,
                check_basic_auth: false,
            },
            doc: "更新 Runtime 内指定service的域名",
        };
    };
}
