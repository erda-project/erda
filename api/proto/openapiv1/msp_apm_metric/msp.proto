// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.openapiv1.msp; // remove 'openapiv1.' when you make this proto file effective

option go_package = "github.com/erda-project/erda-proto-go/openapiv1/msp/apm/metric/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";

message GET_METRIC_GROUP_Request {
    string id = 1; // generated from path variable: id. You should change the proto type if necessary.
}
message LIST_METRIC_GROUPS_Request {
}
message POST_QUERY_METRIC_AGGREGATE_Request {
    string scope = 1; // generated from path variable: scope. You should change the proto type if necessary.
    string aggregate = 2; // generated from path variable: aggregate. You should change the proto type if necessary.
}
message POST_QUERY_METRIC_Request {
    string scope = 1; // generated from path variable: scope. You should change the proto type if necessary.
}
message POST_TSQL_QUERY_METRIC_Request {
}
message QUERY_METRIC_AGGREGATE_Request {
    string scope = 1; // generated from path variable: scope. You should change the proto type if necessary.
    string aggregate = 2; // generated from path variable: aggregate. You should change the proto type if necessary.
}
message QUERY_METRIC_Request {
    string scope = 1; // generated from path variable: scope. You should change the proto type if necessary.
}
message TSQL_QUERY_METRIC_Request {
}
// generate service from openapi spec: msp_apm_metric
service msp_apm_metric {
    option (erda.common.openapi_service) = {
        service: "msp",
    };

    rpc GET_METRIC_GROUP (GET_METRIC_GROUP_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/metric/groups/{id}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metric/groups/{id}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取指标分组详情",
        };
    };
    rpc LIST_METRIC_GROUPS (LIST_METRIC_GROUPS_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/metric/groups",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metric/groups",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 获取指标分组列表",
        };
    };
    rpc POST_QUERY_METRIC (POST_QUERY_METRIC_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/metrics/{scope}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metrics/{scope}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 查询指标数据",
        };
    };
    rpc POST_QUERY_METRIC_AGGREGATE (POST_QUERY_METRIC_AGGREGATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/metrics/{scope}/{aggregate}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metrics/{scope}/{aggregate}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 查询指标数据",
        };
    };
    rpc POST_TSQL_QUERY_METRIC (POST_TSQL_QUERY_METRIC_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/tmc/metrics-query",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metrics-query",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 查询指标数据",
        };
    };
    rpc QUERY_METRIC (QUERY_METRIC_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/metrics/{scope}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metrics/{scope}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 查询指标数据",
        };
    };
    rpc QUERY_METRIC_AGGREGATE (QUERY_METRIC_AGGREGATE_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/metrics/{scope}/{aggregate}",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metrics/{scope}/{aggregate}",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 查询指标数据",
        };
    };
    rpc TSQL_QUERY_METRIC (TSQL_QUERY_METRIC_Request) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/api/tmc/metrics-query",
        };
        option (erda.common.openapi) = {
            path: "/api/tmc/metrics-query",
            auth: {
                no_check: false,
                check_login: true,
                try_check_login: false,
                check_token: true,
                check_basic_auth: false,
            },
            doc: "summary: 查询指标数据",
        };
    };
}
