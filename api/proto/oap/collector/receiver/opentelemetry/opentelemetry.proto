syntax = "proto3";

package erda.oap.collector.receiver.opentelemetry;
option go_package = "github.com/erda-project/erda-proto-go/oap/collector/receiver/opentelemetry/pb";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

import "common/http.proto";
import "oap/trace/tracing.proto";
import "oap/opentelemetry/metrics.proto";
import "oap/common/common.proto";


message PostSpansRequest {
  repeated erda.oap.trace.Span spans = 1;
}

message PostMetricsServiceRequest {
  // An array of ResourceMetrics.
  // For data coming from a single resource this array will typically contain one
  // element. Intermediary nodes (such as OpenTelemetry Collector) that receive
  // data from multiple origins typically batch the data before forwarding further and
  // in that case this array will contain multiple elements.
  repeated erda.oap.opentelemetry.ResourceMetrics resource_metrics = 1;
}

service OpenTelemetryService {
  rpc ReceiveTrace (PostSpansRequest) returns (erda.common.VoidResponse) {
    option (google.api.http) = {
      post: "/api/otlp/v1/traces",
    };
  }
}

service OpenTelemetryMetricService {
    rpc ReceiveMetric (PostMetricsServiceRequest) returns (erda.common.VoidResponse) {
    option (google.api.http) = {
      post: "/api/otlp/v1/metrics",
    };
  }
}