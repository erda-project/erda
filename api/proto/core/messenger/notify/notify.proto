syntax = "proto3";

package erda.core.messenger.notify;

option go_package = "github.com/erda-project/erda-proto-go/core/messenger/notify/pb";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

service NotifyService {
  rpc CreateNotifyHistory (CreateNotifyHistoryRequest) returns (CreateNotifyHistoryResponse) {
    option(google.api.http) = {
      post: "/api/messenger/notify-histories"
    };
  }
  rpc QueryNotifyHistories(QueryNotifyHistoriesRequest) returns (QueryNotifyHistoriesResponse) {
    option(google.api.http) = {
      get: "/api/messenger/notify-histories"
    };
  }
  rpc GetNotifyStatus(GetNotifyStatusRequest) returns (GetNotifyStatusResponse) {
    option(google.api.http) = {
      get: "/api/messenger/notify-histories/status"
    };
  }
  rpc GetNotifyHistogram(GetNotifyHistogramRequest) returns (GetNotifyHistogramResponse) {
    option(google.api.http) = {
      get: "/api/messenger/notify-histories/{statistic}/histogram"
    };
  }
  rpc QueryAlertNotifyHistories(QueryAlertNotifyHistoriesRequest) returns (QueryAlertNotifyHistoriesResponse) {
    option(google.api.http) = {
      get: "/api/messenger/alert-notify-histories"
    };
  }
  rpc GetAlertNotifyDetail(GetAlertNotifyDetailRequest) returns (GetAlertNotifyDetailResponse) {
    option(google.api.http) = {
      get: "/api/messenger/alert-notify-histories/{id}"
    };
  }
  rpc GetTypeNotifyHistogram(GetTypeNotifyHistogramRequest) returns (GetTypeNotifyHistogramResponse) {

  }
}

message CreateNotifyHistoryRequest {
  string                             notifyName            = 1 [json_name = "notifyName"];
  string                             notifyItemDisplayName = 2 [json_name = "notifyItemDisplayName"];
  string                             channel               = 3 [json_name = "channel"];
  repeated NotifyTarget              notifyTargets         = 4 [json_name = "notifyTargets"];
  NotifySource                       notifySource          = 5 [json_name = "notifySource"];
  string                             status                = 6;
  string                             errorMsg              = 7 [json_name = "errorMsg"];
  int64                              orgID                 = 8 [json_name = "orgId"];
  map<string, google.protobuf.Value> notifyTags            = 9 [json_name = "notifyTags"];
  string                             label                 = 10;
  string                             clusterName           = 11 [json_name = "clusterName"];
}

message NotifyTarget {
  string          type   = 1;
  repeated Target values = 2;
}

message Target {
  string receiver = 1;
  string secret   = 2;
}

message NotifySource {
  int64                 id         = 1;
  string                name       = 2;
  string                sourceType = 3 [json_name = "sourceType"];
  string                sourceID   = 4 [json_name = "sourceId"];
  google.protobuf.Value params     = 5;
}

message CreateNotifyHistoryResponse {
  int64 data = 1;
}

message QueryNotifyHistoriesRequest {
  int64  pageNo      = 1;
  int64  pageSize    = 2;
  string channel     = 3;
  string notifyName  = 4;
  string startTime   = 5;
  string endTime     = 6;
  string label       = 7;
  string clusterName = 8;
  int64  orgID       = 9;
}

message QueryNotifyHistoriesResponse {
  QueryNotifyHistoryData data = 1;
}

message QueryNotifyHistoryData {
  repeated NotifyHistory list  = 1;
  int64                  total = 2;
}

message NotifyHistory {
  int64                     id                    = 1;
  string                    notifyName            = 2;
  string                    notifyItemDisplayName = 3 [json_name = "notifyItemName"];
  string                    channel               = 4;
  repeated NotifyTarget     notifyTargets         = 5;
  NotifySource              notifySource          = 6;
  string                    status                = 7;
  string                    errorMsg              = 8;
  string                    label                 = 9;
  google.protobuf.Timestamp createdAt             = 10;
}

message GetNotifyStatusRequest {
  string startTime = 1;
  string endTime   = 2;
  string scopeType = 3;
  string scopeId   = 4;
}

message GetNotifyStatusResponse {
  map<string, int64> data = 1;
}

message GetNotifyHistogramRequest {
  string startTime = 1;
  string endTime   = 2;
  string scopeId   = 3;
  int64  points    = 4;
  string statistic = 5;
  string scopeType = 6;
}

message GetNotifyHistogramResponse {
  NotifyHistogramData data = 1;
}

message NotifyHistogramData {
  repeated int64              timestamp = 1;
  map<string, StatisticValue> value     = 2;
}

message StatisticValue {
  repeated int64 value = 1;
}

message QueryAlertNotifyHistoriesRequest {
  string          scopeType  = 1;
  string          scopeID    = 2;
  string          notifyName = 3;
  string          status     = 4;
  string          channel    = 5;
  int64           alertID    = 6;
  repeated string sendTime   = 7;
  int64           pageNo     = 8;
  int64           pageSize   = 9;
  bool            timeOrder  = 10;
}

message QueryAlertNotifyHistoriesResponse {
  AlertNotifyHistories data = 1;
}

message AlertNotifyHistories {
  repeated AlertNotifyIndex list  = 1;
  int64                     total = 2;
}

message AlertNotifyIndex {
  int64                     id         = 1;
  int64                     notifyID   = 2;
  string                    notifyName = 3;
  string                    status     = 4;
  string                    channel    = 5;
  string                    attributes = 6;
  google.protobuf.Timestamp sendTime   = 7;
}

message GetAlertNotifyDetailRequest {
  int64 id = 1;
}

message GetAlertNotifyDetailResponse {
  AlertNotifyDetail data = 1;
}

message AlertNotifyDetail {
  string                    channel       = 1;
  string                    status        = 2;
  string                    notifyGroup   = 3;
  string                    notifyRule    = 4;
  string                    notifyContent = 5;
  google.protobuf.Timestamp sendTime      = 6;
  string                    alertName     = 7;
}

message GetTypeNotifyHistogramRequest {
  string startTime = 1;
  string endTime   = 2;
  string scopeId   = 3;
  string statistic = 4;
  string scopeType = 5;
}

message GetTypeNotifyHistogramResponse {
  TypeNotifyHistogram data = 1;
}

message TypeNotifyHistogram {
  map<string, StatisticValue> value = 1;
}
