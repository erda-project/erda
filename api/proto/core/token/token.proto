syntax = "proto3";

package erda.core.token;
option go_package = "github.com/erda-project/erda-proto-go/core/token/pb";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "common/openapi.proto";

service TokenService {
  option (erda.common.openapi_service) = {
    service: "core-services",
  };

  rpc GetToken(GetTokenRequest) returns (GetTokenResponse) {
    option (google.api.http) = {
      get: "/api/tokens/{id}",
    };
    option (erda.common.openapi) = {
      path: "/api/tokens/{id}",
      auth: {
        check_login: true,
        check_token: true,
      }
    };
  }

  rpc QueryTokens(QueryTokensRequest) returns (QueryTokensResponse) {
    option (google.api.http) = {
      get: "/api/tokens",
    };
    option (erda.common.openapi) = {
      path: "/api/tokens",
      auth: {
        check_login: true,
        check_token: true,
      }
    };
  }

  rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {
    option (google.api.http) = {
      post: "/api/tokens",
    };
    option (erda.common.openapi) = {
      path: "/api/tokens",
      auth: {
        check_login: true,
        check_token: true,
      }
    };
  }

  rpc UpdateToken(UpdateTokenRequest) returns (UpdateTokenResponse) {
    option (google.api.http) = {
      put: "/api/tokens/{id}",
    };
    option (erda.common.openapi) = {
      path: "/api/tokens/{id}",
      auth: {
        check_login: true,
        check_token: true,
      }
    };
  }

  rpc DeleteToken(DeleteTokenRequest) returns (DeleteTokenResponse) {
    option (google.api.http) = {
      delete: "/api/tokens/{id}",
    };
    option (erda.common.openapi) = {
      path: "/api/tokens/{id}",
      auth: {
        check_login: true,
        check_token: true,
      }
    };
  }
}

message GetTokenRequest {
  string id = 1;
}

message GetTokenResponse {
  Token data = 1;
}

message Token {
  string id = 1;
  string secretKey = 2;
  string accessKey = 3;
  google.protobuf.Value data = 4;
  string status = 5;
  string description = 6;
  string scope = 7;
  string scopeId = 8;
  google.protobuf.Timestamp createdAt = 9;
  string creatorId = 10;
  string type = 11;
  int64 expiresIn = 12;
}

message QueryTokensRequest {
  string scope = 1;
  string scopeId = 2;
  string type = 3;
  string access = 4;
  string status = 5;
  int64 pageNo = 6;
  int64 pageSize = 7;
  string creatorId = 8;
}

message QueryTokensResponse {
  repeated Token data = 1;
  int64 total = 2;
}

message CreateTokenRequest {
  string type = 1;
  string description = 2;
  string scope = 3;
  string scopeId = 4;
  string creatorId = 5;
}

message CreateTokenResponse {
  Token data = 1;
}

message UpdateTokenRequest {
  string id = 1;
  string status = 2;
  string description = 3;
}

message UpdateTokenResponse {}

message DeleteTokenRequest {
  string id = 1;
}

message DeleteTokenResponse {}

message ScopeEnum {
  enum Scope {
    MSP_ENV       = 0;
    CMP_CLUSTER   = 1;
  }
}
