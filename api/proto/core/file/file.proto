// generated by openapi-gen-protobuf

syntax = "proto3";

package erda.core.file;

option go_package = "github.com/erda-project/erda-proto-go/core/file/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "common/openapi.proto";
import "common/identity.proto";
import "common/http.proto";
import "custom/extension/extension.proto";

enum FileType {
    unknown = 0;
    picture = 1;
    other = 2;
}

message File {
    uint64 ID = 1 [json_name = "id"];
    string UUID = 2 [json_name = "uuid"];
    string DisplayName = 3 [json_name = "name"];
    int64 byteSize = 4 [json_name = "size"];
    string downloadURL = 5 [json_name = "url"];
    FileType fileType = 6 [json_name = "type"];
    string from = 7;
    string creator = 8;
    google.protobuf.Timestamp createdAt = 9;
    google.protobuf.Timestamp updatedAt = 10;
    google.protobuf.Timestamp expiredAt = 11;
}

message FilePart {
    bytes part = 1;
}

service FileService {
    option (erda.common.openapi_service) = {
        service: "erda-server",
    };

    rpc Download (FileDownloadRequest) returns (stream FilePart) {
        option (google.api.http) = {
            get: "/api/files/{uuid}",
        };
        option (erda.common.openapi) = {
            path: "/api/files/{uuid}",
            auth: {
                check_login: false,
                try_check_login: true,
                check_token: true,
            },
        };
        option (custom.extension.http) = {
            pure: true,
        };
    }

    rpc LegacyDownload (FileDownloadRequest) returns (stream FilePart) {
        option (google.api.http) = {
            get: "/api/files?file={uuid}",
        };
        option (erda.common.openapi) = {
            path: "/api/files",
            auth: {
                check_login: false,
                try_check_login: true,
                check_token: true,
            },
        };
        option (custom.extension.http) = {
            pure: true,
        };
    }

    rpc Upload (stream FileUploadRequest) returns (FileUploadResponse) {
        option (google.api.http) = {
            post: "/api/files",
        };
        option (erda.common.openapi) = {
            path: "/api/files",
            auth: {
                no_check: false,
                check_login: true,
                check_token: true,
            },
        };
        option (custom.extension.http) = {
            pure: true,
        };
    }

    rpc Head (FileHeadRequest) returns (File) {
        option (google.api.http) = {
            custom: {
                kind: "HEAD",
                path: "/api/files/{uuid}",
            },
        };
        option (erda.common.openapi) = {
            path: "/api/files/{uuid}",
            auth: {
                check_login: false,
                try_check_login: true,
                check_token: true,
            },
        };
        option (custom.extension.http) = {
            pure: true,
        };
    }
}

message FileDownloadRequest {
    string uuid = 1;
}

message FileUploadRequest {
    FilePart part = 1;
}

message FileUploadResponse {
    bool success = 1;
    common.ResponseError error = 2;
    File data = 3;
}

message FileDownloadFailResponse {
    bool success = 1;
    common.ResponseError error = 2;
}

message FileHeadRequest {
    string uuid = 1;
}
