syntax = "proto3";

package erda.core.pipeline.cron;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/identity.proto";
import "core/pipeline/cron_pub.proto";
import "core/pipeline/base/base.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/erda-project/erda-proto-go/core/pipeline/cron/pb";

service CronService {
  rpc CronCreate (CronCreateRequest) returns (CronCreateResponse) {
    option (google.api.http) = {
      post: "/api/pipeline-crons",
    };
  }
  rpc CronPaging (CronPagingRequest) returns (CronPagingResponse) {
    option (google.api.http) = {
      get: "/api/pipeline-crons?source={sources}&ymlName={ymlNames}",
    };
  }
  rpc CronStart (CronStartRequest) returns (CronStartResponse) {
    option (google.api.http) = {
      put: "/api/pipeline-crons/{cronID}/actions/start",
    };
  }
  rpc CronStop (CronStopRequest) returns (CronStopResponse) {
    option (google.api.http) = {
      put: "/api/pipeline-crons/{cronID}/actions/stop",
    };
  }
  rpc CronDelete (CronDeleteRequest) returns (CronDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/pipeline-crons/{cronID}",
    };
  }
  rpc CronGet (CronGetRequest) returns (CronGetResponse) {
    option (google.api.http) = {
      get: "/api/pipeline-crons/{cronID}",
    };
  }
  rpc CronUpdate (CronUpdateRequest) returns (CronUpdateResponse) {
    option (google.api.http) = {
      put: "/api/pipeline-crons/{cronID}",
    };
  }

  rpc CronSave (CronSaveRequest) returns (CronSaveResponse) {
    option (google.api.http) = {
      post: "/api/pipeline-crons/action/save",
    };
  }

  rpc CronDisable (CronDisableRequest) returns (CronDisableResponse) {
    option (google.api.http) = {
      post: "/api/pipeline-crons/action/disable",
    };
  }

  // edge
  rpc EdgeCronCreate (EdgeCronCreateRequest) returns (CronCreateResponse) {
    option (google.api.http) = {
      post: "/api/pipeline-crons/actions/edge-create",
    };
  }
  rpc EdgeCronUpdate (EdgeCronUpdateRequest) returns (CronUpdateResponse) {
    option (google.api.http) = {
      put: "/api/pipeline-crons/actions/edge-update",
    };
  }
}

// disable
message CronDisableRequest {
  core.pipeline.Cron cron = 1;
}

message CronDisableResponse {
  core.pipeline.Cron data = 1;
}

// save
message CronSaveRequest {
  core.pipeline.Cron cron = 1;
}

message CronSaveResponse {
  core.pipeline.Cron data = 1;
}

// paging
message CronPagingRequest {
  bool allSources = 1;
  repeated string sources = 2; // ?source=cdp-dev&source=cdp-test
  repeated string ymlNames = 3; // ?ymlName=11&ymlName=22
  int64 pageSize = 4;
  int64 pageNo = 5;
  google.protobuf.BoolValue enable = 6;
  repeated string pipelineDefinitionID = 7;
}

message CronPagingResponse {
  int64 total = 1;
  repeated core.pipeline.Cron data = 2;
}

// start cron
message CronStartRequest {
  uint64 cronID = 1;
}
message CronStartResponse {
  core.pipeline.Cron data = 1;
}

// stop cron
message CronStopRequest {
  uint64 cronID = 1;
}
message CronStopResponse {
  core.pipeline.Cron data = 1;
}

// cron create
message CronCreateRequest {
  core.pipeline.base.PipelineCreateRequest pipelineCreateRequest = 1;
}

message EdgeCronCreateRequest {
  core.pipeline.Cron cron = 1;
}

message CronCreateResponse {
  uint64 data = 1;
}

// cron delete
message CronDeleteRequest {
  uint64 cronID = 1;
}
message CronDeleteResponse {
}

// cron get
message CronGetRequest {
  uint64 cronID = 1;
}
message CronGetResponse {
  core.pipeline.Cron data = 1;
}

// cron update
message CronUpdateRequest {
  uint64 cronID = 1;
  string pipelineYml = 2;
  string cronExpr = 3;
  repeated string configManageNamespaces = 4;
  string pipelineDefinitionID = 5;
  map<string, string> secrets = 6;
}

message EdgeCronUpdateRequest {
  core.pipeline.Cron cron = 1;
}

message CronUpdateResponse {
}
