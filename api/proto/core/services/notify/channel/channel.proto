syntax = "proto3";
package erda.core.services.notify.channel;
option go_package = "github.com/erda-project/erda-proto-go/core/services/notify/channel/pb";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "common/openapi.proto";

service NotifyChannelService {
  option (erda.common.openapi_service) = {
    service: "core-services",
    auth: {
      check_login: true,
      check_token: true,
    }
  };

  rpc CreateNotifyChannel (CreateNotifyChannelRequest) returns (CreateNotifyChannelResponse)  {
    option (google.api.http)     = {
      post: "/api/notify-channel",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel"
    };
  }

  rpc GetNotifyChannels (GetNotifyChannelsRequest) returns (GetNotifyChannelsResponse)  {
    option (google.api.http)     = {
      get: "/api/notify-channels",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channels"
    };
  }

  rpc UpdateNotifyChannel (UpdateNotifyChannelRequest) returns (UpdateNotifyChannelResponse)  {
    option (google.api.http)     = {
      put: "/api/notify-channel",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel"
    };
  }

  rpc GetNotifyChannel (GetNotifyChannelRequest) returns (GetNotifyChannelResponse)  {
    option (google.api.http)     = {
      get: "/api/notify-channel",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel"
    };
  }

  rpc DeleteNotifyChannel (DeleteNotifyChannelRequest) returns (DeleteNotifyChannelResponse)  {
    option (google.api.http)     = {
      delete: "/api/notify-channel",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel"
    };
  }

  rpc GetNotifyChannelTypes (GetNotifyChannelTypesRequest) returns (GetNotifyChannelTypesResponse)  {
    option (google.api.http)     = {
      get: "/api/notify-channel/types",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel/types"
    };
  }

  rpc GetNotifyChannelEnabled (GetNotifyChannelEnabledRequest) returns (GetNotifyChannelEnabledResponse)  {
    option (google.api.http)     = {
      get: "/api/notify-channel/enabled",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel/enabled"
    };
  }

  rpc UpdateNotifyChannelEnabled (UpdateNotifyChannelEnabledRequest) returns (UpdateNotifyChannelEnabledResponse)  {
    option (google.api.http)     = {
      put: "/api/notify-channel/enabled",
    };
    option (erda.common.openapi) = {
      path: "/api/notify-channel/enabled"
    };
  }
}

message UpdateNotifyChannelEnabledRequest {
  string id     = 1;
  bool   enable = 2;
}

message UpdateNotifyChannelEnabledResponse {
  string id     = 1;
  bool   enable = 2;
}

message GetNotifyChannelEnabledRequest {
  string scopeId   = 1;
  string scopeType = 2;
  string type      = 3;
}

message GetNotifyChannelEnabledResponse {
  NotifyChannel data = 1;
}

message DeleteNotifyChannelRequest {
  string id = 1;
}

message DeleteNotifyChannelResponse {
  string id = 1;
}

message GetNotifyChannelRequest {
  string id = 1;
}

message GetNotifyChannelResponse {
  NotifyChannel data = 1;
}

message UpdateNotifyChannelRequest {
  string                             id                  = 1;
  string                             name                = 2;
  string                             type                = 3;
  string                             channelProviderType = 4;
  string                             enable              = 5;
  map<string, google.protobuf.Value> config              = 6;
  string                             scopeId             = 7;
  string                             scopeType           = 8;
}

message UpdateNotifyChannelResponse {
  NotifyChannel data = 1;
}

message GetNotifyChannelsRequest {
  int64 pageNo   = 1;
  int64 pageSize = 2;
}

message GetNotifyChannelsResponse {
  int64                  pageNo   = 1;
  int64                  pageSize = 2;
  int64                  total    = 3;
  repeated NotifyChannel data     = 4;
}

message CreateNotifyChannelRequest {
  string                             name                = 1;
  string                             type                = 2;
  string                             channelProviderType = 3;
  map<string, google.protobuf.Value> config              = 4;
}

message CreateNotifyChannelResponse {
  NotifyChannel data = 1;
}

message GetNotifyChannelTypesRequest {}

message GetNotifyChannelTypesResponse {
  repeated NotifyChannelTypeResponse data = 1;
}

message NotifyChannelTypeResponse {
  string                             name        = 1;
  string                             displayName = 2;
  repeated NotifyChannelProviderType providers   = 3;
}

message NotifyChannelType {
  string name        = 1;
  string displayName = 2;
}

message NotifyChannelProviderType {
  string name        = 1;
  string displayName = 2;
}

message NotifyChannel {
  string                             id                  = 1;
  string                             name                = 2;
  NotifyChannelType                  type                = 3;
  map<string, google.protobuf.Value> config              = 4;
  string                             scopeId             = 5;
  string                             scopeType           = 6;
  string                             creatorName         = 7;
  string                             createAt            = 8;
  string                             updateAt            = 9;
  NotifyChannelProviderType          channelProviderType = 10;
  bool                               enable              = 11;
}

// channel type
enum Type {
  SHORT_MESSAGE = 0;
}

// channel service provider type
enum ProviderType {
  ALIYUN_SMS = 0;
}