syntax = "proto3";

package erda.msp.apm.adapter;
option go_package = "github.com/erda-project/erda-proto-go/msp/apm/adapter/pb";
import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/descriptor.proto";
import "common/openapi.proto";

service InstrumentationLibraryService {
  option (erda.common.openapi_service) = {
    service: "msp",
    auth: {
      check_login: true,
      check_token: true,
    }
  };
  rpc GetInstrumentationLibrary (GetInstrumentationLibraryRequest) returns (GetInstrumentationLibraryResponse)  {
    option (google.api.http)     = {
      get: "/api/msp/apm/instrumentation-library",
    };
    option (erda.common.openapi) = {
      path: "/api/msp/apm/instrumentation-library"
    };
  }

  rpc GetInstrumentationLibraryDocs (GetInstrumentationLibraryDocsRequest) returns (GetInstrumentationLibraryDocsResponse)  {
    option (google.api.http)     = {
      get: "/api/msp/apm/instrumentation-library/config-docs",
    };
    option (erda.common.openapi) = {
      path: "/api/msp/apm/instrumentation-library/config-docs"
    };
  }
}

message GetInstrumentationLibraryRequest {
}

message GetInstrumentationLibraryResponse{
  repeated InstrumentationLibrary data = 1;
}


message GetInstrumentationLibraryDocsRequest {
  string language = 1;
  string strategy = 2;
  string scopeId  = 3;
}

message GetInstrumentationLibraryDocsResponse{
  string data = 1;
}

message Language {
  string language = 1;
}

message InstrumentationLibrary {
  string            strategy  = 2;
  repeated Language languages = 4;
}
