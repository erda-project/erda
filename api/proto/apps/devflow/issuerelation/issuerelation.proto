syntax = "proto3";

package erda.apps.devflow.issuerelation;

option go_package = "github.com/erda-project/erda-proto-go/apps/devflow/issuerelation/pb";
import "google/api/annotations.proto";
import "common/openapi.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service IssueRelationService {
    rpc Create(CreateIssueRelationRequest) returns(CreateIssueRelationResponse) {
        option(google.api.http) = {
            post : "/api/issue-relations",
        };
    }
    rpc Delete(DeleteIssueRelationRequest) returns(DeleteIssueRelationResponse) {
        option(google.api.http) = {
            delete : "/api/issue-relations/{relationID}",
        };
    }
    rpc List(ListIssueRelationRequest) returns(ListIssueRelationResponse) {
        option(google.api.http) = {
            get : "/api/issue-relations",
        };
    }
}

message IssueRelation {
    string ID = 1 [json_name = "id"];
    google.protobuf.Timestamp timeCreated = 2;
    google.protobuf.Timestamp timeUpdated = 3;
    google.protobuf.Timestamp softDeletedAt = 4;
    string relation = 5;
    uint64 issueID = 6;
    string type = 7;
    string extra = 8;
}

// create
message CreateIssueRelationRequest {
    string relation = 1;
    uint64 issueID = 2;
    string type = 3;
    string extra = 4;
}

message CreateIssueRelationResponse {
    IssueRelation issueRelation = 1;
}

// delete
message DeleteIssueRelationRequest {
    string relationID = 1;
}

message DeleteIssueRelationResponse {}

// list
message ListIssueRelationRequest {
    repeated string relations = 1;
    repeated uint64 issueIDs = 2;
    string type = 3;
}

message ListIssueRelationResponse {
  repeated  IssueRelation data = 1;
}
