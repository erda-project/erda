syntax = "proto3";

package erda.apps.aiproxy;
option go_package = "github.com/erda-project/erda-proto-go/apps/aiproxy/pb";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/http.proto";

service Credentials {
  rpc CreateCredential(Credential) returns (Credential) {
    option(google.api.http) = {
      post: "/api/ai-proxy/credentials"
    };
  }

  rpc DeleteCredential(DeleteCredentialReq) returns (common.VoidResponse) {
    option(google.api.http) = {
      delete: "/api/ai-proxy/credentials/{accessKeyId}"
    };
  }

  rpc UpdateCredential(Credential) returns (Credential) {
    option(google.api.http) = {
      put: "/api/ai-proxy/credentials/{accessKeyId}"
    };
  }

  rpc ListCredentials(Credential) returns (ListCredentialsRespData) {
    option(google.api.http) = {
      get: "/api/ai-proxy/credentials"
    };
  }

  rpc GetCredential(GetCredentialReq) returns (Credential) {
    option(google.api.http) = {
      get: "/api/ai-proxy/credentials/{accessKeyId}"
    };
  }
}

message Credential {
  string accessKeyId = 1;
  string secretKeyId = 2;
  string name = 3;
  string platform = 4;
  string description = 5;
  bool enabled = 6;
  string providerName = 7;
  string providerInstanceId = 8;
}

message DeleteCredentialReq {
  string accessKeyId = 1;
}

message UpdateCredentialReq {
  string accessKeyId = 1;
  string name = 2;
  string description = 5;
}

message ListCredentialsRespData {
  uint32 total = 1;
  repeated Credential list = 2;
}

message GetCredentialReq {
  string accessKeyId = 1;
}