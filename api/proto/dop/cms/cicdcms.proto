syntax = "proto3";

package erda.dop.cms;

import "google/api/annotations.proto";
import "common/openapi.proto";

option go_package = "github.com/erda-project/erda-proto-go/dop/cms/pb";

service CICDCmsService {
  option(erda.common.openapi_service) = {
    service : "dop",
    auth : {
      check_login : true,
      check_token : true,
    }
  };

  rpc CICDCmsUpdate (CICDCmsUpdateRequest) returns (CICDCmsUpdateResponse) {
    option (google.api.http) = {
      put: "/api/cicds/configs",
    };
    option(erda.common.openapi) = {
      path : "/api/cicds/configs",
    };
  }
  rpc CICDCmsCreate (CICDCmsCreateRequest) returns (CICDCmsCreateResponse) {
    option (google.api.http) = {
      post: "/api/cicds/configs",
    };
    option(erda.common.openapi) = {
      path : "/api/cicds/configs",
    };
  }
  rpc CICDCmsDelete (CICDCmsDeleteRequest) returns (CICDCmsDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/cicds/configs",
    };
    option(erda.common.openapi) = {
      path : "/api/cicds/configs",
    };
  }
}

// update
message CICDCmsUpdateRequest {
  bool batch = 1;
  string namespace_name = 2;
  string appID = 3;
  bool encrypt = 4;
  repeated Config configs = 5;
}

message CICDCmsUpdateResponse {
  string data = 1;
}

// create
message CICDCmsCreateRequest {
  bool batch = 1;
  string namespace_name = 2;
  string appID = 3;
  bool encrypt = 4;
  repeated Config configs = 5;
}

message CICDCmsCreateResponse {
  string data = 1;
}

// delete
message CICDCmsDeleteRequest {
  string appID = 1;
  string namespace_name = 2;
  string key = 3;
}

message CICDCmsDeleteResponse {
  string data = 1;
}

message Config {
  string comment = 1;
  bool encrypt = 2;
  string key = 3;
  string type = 4;
  string value = 5;
}
