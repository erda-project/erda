// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: notify.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNotifyHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotifyName            string                     `protobuf:"bytes,1,opt,name=notifyName,proto3" json:"notifyName,omitempty"`
	NotifyItemDisplayName string                     `protobuf:"bytes,2,opt,name=notifyItemDisplayName,proto3" json:"notifyItemDisplayName,omitempty"`
	Channel               string                     `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	NotifyTargets         []*NotifyTarget            `protobuf:"bytes,4,rep,name=notifyTargets,proto3" json:"notifyTargets,omitempty"`
	NotifySource          *NotifySource              `protobuf:"bytes,5,opt,name=notifySource,proto3" json:"notifySource,omitempty"`
	Status                string                     `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMsg              string                     `protobuf:"bytes,7,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	OrgID                 int64                      `protobuf:"varint,8,opt,name=orgID,json=orgId,proto3" json:"orgID,omitempty"`
	NotifyTags            map[string]*structpb.Value `protobuf:"bytes,9,rep,name=notifyTags,proto3" json:"notifyTags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Label                 string                     `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	ClusterName           string                     `protobuf:"bytes,11,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *CreateNotifyHistoryRequest) Reset() {
	*x = CreateNotifyHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifyHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyHistoryRequest) ProtoMessage() {}

func (x *CreateNotifyHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyHistoryRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifyHistoryRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotifyHistoryRequest) GetNotifyName() string {
	if x != nil {
		return x.NotifyName
	}
	return ""
}

func (x *CreateNotifyHistoryRequest) GetNotifyItemDisplayName() string {
	if x != nil {
		return x.NotifyItemDisplayName
	}
	return ""
}

func (x *CreateNotifyHistoryRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CreateNotifyHistoryRequest) GetNotifyTargets() []*NotifyTarget {
	if x != nil {
		return x.NotifyTargets
	}
	return nil
}

func (x *CreateNotifyHistoryRequest) GetNotifySource() *NotifySource {
	if x != nil {
		return x.NotifySource
	}
	return nil
}

func (x *CreateNotifyHistoryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateNotifyHistoryRequest) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *CreateNotifyHistoryRequest) GetOrgID() int64 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *CreateNotifyHistoryRequest) GetNotifyTags() map[string]*structpb.Value {
	if x != nil {
		return x.NotifyTags
	}
	return nil
}

func (x *CreateNotifyHistoryRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateNotifyHistoryRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type NotifyTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Values []*Target `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *NotifyTarget) Reset() {
	*x = NotifyTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTarget) ProtoMessage() {}

func (x *NotifyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTarget.ProtoReflect.Descriptor instead.
func (*NotifyTarget) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{1}
}

func (x *NotifyTarget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyTarget) GetValues() []*Target {
	if x != nil {
		return x.Values
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{2}
}

func (x *Target) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Target) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type NotifySource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SourceType string          `protobuf:"bytes,3,opt,name=sourceType,proto3" json:"sourceType,omitempty"`
	SourceID   string          `protobuf:"bytes,4,opt,name=sourceID,json=sourceId,proto3" json:"sourceID,omitempty"`
	Params     *structpb.Value `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *NotifySource) Reset() {
	*x = NotifySource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifySource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifySource) ProtoMessage() {}

func (x *NotifySource) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifySource.ProtoReflect.Descriptor instead.
func (*NotifySource) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{3}
}

func (x *NotifySource) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifySource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifySource) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *NotifySource) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

func (x *NotifySource) GetParams() *structpb.Value {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateNotifyHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data int64 `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateNotifyHistoryResponse) Reset() {
	*x = CreateNotifyHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifyHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyHistoryResponse) ProtoMessage() {}

func (x *CreateNotifyHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyHistoryResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifyHistoryResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNotifyHistoryResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type QueryNotifyHistoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo      int64  `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Channel     string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	NotifyName  string `protobuf:"bytes,4,opt,name=notifyName,proto3" json:"notifyName,omitempty"`
	StartTime   string `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     string `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Label       string `protobuf:"bytes,7,opt,name=label,proto3" json:"label,omitempty"`
	ClusterName string `protobuf:"bytes,8,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	OrgID       int64  `protobuf:"varint,9,opt,name=orgID,proto3" json:"orgID,omitempty"`
}

func (x *QueryNotifyHistoriesRequest) Reset() {
	*x = QueryNotifyHistoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNotifyHistoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotifyHistoriesRequest) ProtoMessage() {}

func (x *QueryNotifyHistoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotifyHistoriesRequest.ProtoReflect.Descriptor instead.
func (*QueryNotifyHistoriesRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{5}
}

func (x *QueryNotifyHistoriesRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *QueryNotifyHistoriesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryNotifyHistoriesRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *QueryNotifyHistoriesRequest) GetNotifyName() string {
	if x != nil {
		return x.NotifyName
	}
	return ""
}

func (x *QueryNotifyHistoriesRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryNotifyHistoriesRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryNotifyHistoriesRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *QueryNotifyHistoriesRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *QueryNotifyHistoriesRequest) GetOrgID() int64 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

type QueryNotifyHistoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *QueryNotifyHistoryData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryNotifyHistoriesResponse) Reset() {
	*x = QueryNotifyHistoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNotifyHistoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotifyHistoriesResponse) ProtoMessage() {}

func (x *QueryNotifyHistoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotifyHistoriesResponse.ProtoReflect.Descriptor instead.
func (*QueryNotifyHistoriesResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{6}
}

func (x *QueryNotifyHistoriesResponse) GetData() *QueryNotifyHistoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryNotifyHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NotifyHistory `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryNotifyHistoryData) Reset() {
	*x = QueryNotifyHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNotifyHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotifyHistoryData) ProtoMessage() {}

func (x *QueryNotifyHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotifyHistoryData.ProtoReflect.Descriptor instead.
func (*QueryNotifyHistoryData) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{7}
}

func (x *QueryNotifyHistoryData) GetList() []*NotifyHistory {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryNotifyHistoryData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type NotifyHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NotifyName            string                 `protobuf:"bytes,2,opt,name=notifyName,proto3" json:"notifyName,omitempty"`
	NotifyItemDisplayName string                 `protobuf:"bytes,3,opt,name=notifyItemDisplayName,json=notifyItemName,proto3" json:"notifyItemDisplayName,omitempty"`
	Channel               string                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	NotifyTargets         []*NotifyTarget        `protobuf:"bytes,5,rep,name=notifyTargets,proto3" json:"notifyTargets,omitempty"`
	NotifySource          *NotifySource          `protobuf:"bytes,6,opt,name=notifySource,proto3" json:"notifySource,omitempty"`
	Status                string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMsg              string                 `protobuf:"bytes,8,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Label                 string                 `protobuf:"bytes,9,opt,name=label,proto3" json:"label,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *NotifyHistory) Reset() {
	*x = NotifyHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyHistory) ProtoMessage() {}

func (x *NotifyHistory) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyHistory.ProtoReflect.Descriptor instead.
func (*NotifyHistory) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyHistory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyHistory) GetNotifyName() string {
	if x != nil {
		return x.NotifyName
	}
	return ""
}

func (x *NotifyHistory) GetNotifyItemDisplayName() string {
	if x != nil {
		return x.NotifyItemDisplayName
	}
	return ""
}

func (x *NotifyHistory) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *NotifyHistory) GetNotifyTargets() []*NotifyTarget {
	if x != nil {
		return x.NotifyTargets
	}
	return nil
}

func (x *NotifyHistory) GetNotifySource() *NotifySource {
	if x != nil {
		return x.NotifySource
	}
	return nil
}

func (x *NotifyHistory) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NotifyHistory) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *NotifyHistory) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *NotifyHistory) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetNotifyStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ScopeType string `protobuf:"bytes,3,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeId   string `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
}

func (x *GetNotifyStatusRequest) Reset() {
	*x = GetNotifyStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyStatusRequest) ProtoMessage() {}

func (x *GetNotifyStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyStatusRequest.ProtoReflect.Descriptor instead.
func (*GetNotifyStatusRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{9}
}

func (x *GetNotifyStatusRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetNotifyStatusRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetNotifyStatusRequest) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *GetNotifyStatusRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

type GetNotifyStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]int64 `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetNotifyStatusResponse) Reset() {
	*x = GetNotifyStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyStatusResponse) ProtoMessage() {}

func (x *GetNotifyStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyStatusResponse.ProtoReflect.Descriptor instead.
func (*GetNotifyStatusResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{10}
}

func (x *GetNotifyStatusResponse) GetData() map[string]int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNotifyHistogramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ScopeId   string `protobuf:"bytes,3,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Points    int64  `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	Statistic string `protobuf:"bytes,5,opt,name=statistic,proto3" json:"statistic,omitempty"`
	ScopeType string `protobuf:"bytes,6,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
}

func (x *GetNotifyHistogramRequest) Reset() {
	*x = GetNotifyHistogramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyHistogramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyHistogramRequest) ProtoMessage() {}

func (x *GetNotifyHistogramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyHistogramRequest.ProtoReflect.Descriptor instead.
func (*GetNotifyHistogramRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{11}
}

func (x *GetNotifyHistogramRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetNotifyHistogramRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetNotifyHistogramRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *GetNotifyHistogramRequest) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *GetNotifyHistogramRequest) GetStatistic() string {
	if x != nil {
		return x.Statistic
	}
	return ""
}

func (x *GetNotifyHistogramRequest) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

type GetNotifyHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *NotifyHistogramData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetNotifyHistogramResponse) Reset() {
	*x = GetNotifyHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyHistogramResponse) ProtoMessage() {}

func (x *GetNotifyHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyHistogramResponse.ProtoReflect.Descriptor instead.
func (*GetNotifyHistogramResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{12}
}

func (x *GetNotifyHistogramResponse) GetData() *NotifyHistogramData {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotifyHistogramData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp []int64                    `protobuf:"varint,1,rep,packed,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     map[string]*StatisticValue `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NotifyHistogramData) Reset() {
	*x = NotifyHistogramData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyHistogramData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyHistogramData) ProtoMessage() {}

func (x *NotifyHistogramData) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyHistogramData.ProtoReflect.Descriptor instead.
func (*NotifyHistogramData) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyHistogramData) GetTimestamp() []int64 {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NotifyHistogramData) GetValue() map[string]*StatisticValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type StatisticValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []int64 `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *StatisticValue) Reset() {
	*x = StatisticValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticValue) ProtoMessage() {}

func (x *StatisticValue) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticValue.ProtoReflect.Descriptor instead.
func (*StatisticValue) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{14}
}

func (x *StatisticValue) GetValue() []int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueryAlertNotifyHistoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScopeType  string   `protobuf:"bytes,1,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeID    string   `protobuf:"bytes,2,opt,name=scopeID,proto3" json:"scopeID,omitempty"`
	NotifyName string   `protobuf:"bytes,3,opt,name=notifyName,proto3" json:"notifyName,omitempty"`
	Status     string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Channel    string   `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	AlertID    int64    `protobuf:"varint,6,opt,name=alertID,proto3" json:"alertID,omitempty"`
	SendTime   []string `protobuf:"bytes,7,rep,name=sendTime,proto3" json:"sendTime,omitempty"`
	PageNo     int64    `protobuf:"varint,8,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize   int64    `protobuf:"varint,9,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TimeOrder  bool     `protobuf:"varint,10,opt,name=timeOrder,proto3" json:"timeOrder,omitempty"`
}

func (x *QueryAlertNotifyHistoriesRequest) Reset() {
	*x = QueryAlertNotifyHistoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertNotifyHistoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertNotifyHistoriesRequest) ProtoMessage() {}

func (x *QueryAlertNotifyHistoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertNotifyHistoriesRequest.ProtoReflect.Descriptor instead.
func (*QueryAlertNotifyHistoriesRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{15}
}

func (x *QueryAlertNotifyHistoriesRequest) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *QueryAlertNotifyHistoriesRequest) GetScopeID() string {
	if x != nil {
		return x.ScopeID
	}
	return ""
}

func (x *QueryAlertNotifyHistoriesRequest) GetNotifyName() string {
	if x != nil {
		return x.NotifyName
	}
	return ""
}

func (x *QueryAlertNotifyHistoriesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QueryAlertNotifyHistoriesRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *QueryAlertNotifyHistoriesRequest) GetAlertID() int64 {
	if x != nil {
		return x.AlertID
	}
	return 0
}

func (x *QueryAlertNotifyHistoriesRequest) GetSendTime() []string {
	if x != nil {
		return x.SendTime
	}
	return nil
}

func (x *QueryAlertNotifyHistoriesRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *QueryAlertNotifyHistoriesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAlertNotifyHistoriesRequest) GetTimeOrder() bool {
	if x != nil {
		return x.TimeOrder
	}
	return false
}

type QueryAlertNotifyHistoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AlertNotifyHistories `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAlertNotifyHistoriesResponse) Reset() {
	*x = QueryAlertNotifyHistoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlertNotifyHistoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlertNotifyHistoriesResponse) ProtoMessage() {}

func (x *QueryAlertNotifyHistoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlertNotifyHistoriesResponse.ProtoReflect.Descriptor instead.
func (*QueryAlertNotifyHistoriesResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{16}
}

func (x *QueryAlertNotifyHistoriesResponse) GetData() *AlertNotifyHistories {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlertNotifyHistories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AlertNotifyIndex `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *AlertNotifyHistories) Reset() {
	*x = AlertNotifyHistories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertNotifyHistories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertNotifyHistories) ProtoMessage() {}

func (x *AlertNotifyHistories) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertNotifyHistories.ProtoReflect.Descriptor instead.
func (*AlertNotifyHistories) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{17}
}

func (x *AlertNotifyHistories) GetList() []*AlertNotifyIndex {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlertNotifyHistories) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AlertNotifyIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NotifyID   int64                  `protobuf:"varint,2,opt,name=notifyID,proto3" json:"notifyID,omitempty"`
	NotifyName string                 `protobuf:"bytes,3,opt,name=notifyName,proto3" json:"notifyName,omitempty"`
	Status     string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Channel    string                 `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Attributes string                 `protobuf:"bytes,6,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SendTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
}

func (x *AlertNotifyIndex) Reset() {
	*x = AlertNotifyIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertNotifyIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertNotifyIndex) ProtoMessage() {}

func (x *AlertNotifyIndex) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertNotifyIndex.ProtoReflect.Descriptor instead.
func (*AlertNotifyIndex) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{18}
}

func (x *AlertNotifyIndex) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlertNotifyIndex) GetNotifyID() int64 {
	if x != nil {
		return x.NotifyID
	}
	return 0
}

func (x *AlertNotifyIndex) GetNotifyName() string {
	if x != nil {
		return x.NotifyName
	}
	return ""
}

func (x *AlertNotifyIndex) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AlertNotifyIndex) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *AlertNotifyIndex) GetAttributes() string {
	if x != nil {
		return x.Attributes
	}
	return ""
}

func (x *AlertNotifyIndex) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

type GetAlertNotifyDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlertNotifyDetailRequest) Reset() {
	*x = GetAlertNotifyDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertNotifyDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertNotifyDetailRequest) ProtoMessage() {}

func (x *GetAlertNotifyDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertNotifyDetailRequest.ProtoReflect.Descriptor instead.
func (*GetAlertNotifyDetailRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{19}
}

func (x *GetAlertNotifyDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAlertNotifyDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AlertNotifyDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlertNotifyDetailResponse) Reset() {
	*x = GetAlertNotifyDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertNotifyDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertNotifyDetailResponse) ProtoMessage() {}

func (x *GetAlertNotifyDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertNotifyDetailResponse.ProtoReflect.Descriptor instead.
func (*GetAlertNotifyDetailResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{20}
}

func (x *GetAlertNotifyDetailResponse) GetData() *AlertNotifyDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type AlertNotifyDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel       string                 `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	NotifyGroup   string                 `protobuf:"bytes,3,opt,name=notifyGroup,proto3" json:"notifyGroup,omitempty"`
	NotifyRule    string                 `protobuf:"bytes,4,opt,name=notifyRule,proto3" json:"notifyRule,omitempty"`
	NotifyContent string                 `protobuf:"bytes,5,opt,name=notifyContent,proto3" json:"notifyContent,omitempty"`
	SendTime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	AlertName     string                 `protobuf:"bytes,7,opt,name=alertName,proto3" json:"alertName,omitempty"`
}

func (x *AlertNotifyDetail) Reset() {
	*x = AlertNotifyDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertNotifyDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertNotifyDetail) ProtoMessage() {}

func (x *AlertNotifyDetail) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertNotifyDetail.ProtoReflect.Descriptor instead.
func (*AlertNotifyDetail) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{21}
}

func (x *AlertNotifyDetail) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *AlertNotifyDetail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AlertNotifyDetail) GetNotifyGroup() string {
	if x != nil {
		return x.NotifyGroup
	}
	return ""
}

func (x *AlertNotifyDetail) GetNotifyRule() string {
	if x != nil {
		return x.NotifyRule
	}
	return ""
}

func (x *AlertNotifyDetail) GetNotifyContent() string {
	if x != nil {
		return x.NotifyContent
	}
	return ""
}

func (x *AlertNotifyDetail) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

func (x *AlertNotifyDetail) GetAlertName() string {
	if x != nil {
		return x.AlertName
	}
	return ""
}

type GetTypeNotifyHistogramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ScopeId   string `protobuf:"bytes,3,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Statistic string `protobuf:"bytes,4,opt,name=statistic,proto3" json:"statistic,omitempty"`
	ScopeType string `protobuf:"bytes,5,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
}

func (x *GetTypeNotifyHistogramRequest) Reset() {
	*x = GetTypeNotifyHistogramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTypeNotifyHistogramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTypeNotifyHistogramRequest) ProtoMessage() {}

func (x *GetTypeNotifyHistogramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTypeNotifyHistogramRequest.ProtoReflect.Descriptor instead.
func (*GetTypeNotifyHistogramRequest) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{22}
}

func (x *GetTypeNotifyHistogramRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetTypeNotifyHistogramRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetTypeNotifyHistogramRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *GetTypeNotifyHistogramRequest) GetStatistic() string {
	if x != nil {
		return x.Statistic
	}
	return ""
}

func (x *GetTypeNotifyHistogramRequest) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

type GetTypeNotifyHistogramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TypeNotifyHistogram `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTypeNotifyHistogramResponse) Reset() {
	*x = GetTypeNotifyHistogramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTypeNotifyHistogramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTypeNotifyHistogramResponse) ProtoMessage() {}

func (x *GetTypeNotifyHistogramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTypeNotifyHistogramResponse.ProtoReflect.Descriptor instead.
func (*GetTypeNotifyHistogramResponse) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{23}
}

func (x *GetTypeNotifyHistogramResponse) GetData() *TypeNotifyHistogram {
	if x != nil {
		return x.Data
	}
	return nil
}

type TypeNotifyHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]*StatisticValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TypeNotifyHistogram) Reset() {
	*x = TypeNotifyHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notify_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeNotifyHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeNotifyHistogram) ProtoMessage() {}

func (x *TypeNotifyHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_notify_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeNotifyHistogram.ProtoReflect.Descriptor instead.
func (*TypeNotifyHistogram) Descriptor() ([]byte, []int) {
	return file_notify_proto_rawDescGZIP(), []int{24}
}

func (x *TypeNotifyHistogram) GetValue() map[string]*StatisticValue {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_notify_proto protoreflect.FileDescriptor

var file_notify_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xeb, 0x04, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x4e,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x4c,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x55, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a,
	0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3c, 0x0a,
	0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x91, 0x02, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xaa, 0x03, 0x0a, 0x0d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x15,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x4e, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x61,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xeb, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x50, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x64, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb4, 0x02, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x69,
	0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x14, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x10, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x83, 0x02, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xad, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x65, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x13, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x50, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x64, 0x0a,
	0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x32, 0x86, 0x0a, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0xb2, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x37, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0xaa, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xc2, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x7d, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0xc7,
	0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3c, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0xbd, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x37, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x91, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x12, 0x39, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notify_proto_rawDescOnce sync.Once
	file_notify_proto_rawDescData = file_notify_proto_rawDesc
)

func file_notify_proto_rawDescGZIP() []byte {
	file_notify_proto_rawDescOnce.Do(func() {
		file_notify_proto_rawDescData = protoimpl.X.CompressGZIP(file_notify_proto_rawDescData)
	})
	return file_notify_proto_rawDescData
}

var file_notify_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_notify_proto_goTypes = []interface{}{
	(*CreateNotifyHistoryRequest)(nil),        // 0: erda.core.messenger.notify.CreateNotifyHistoryRequest
	(*NotifyTarget)(nil),                      // 1: erda.core.messenger.notify.NotifyTarget
	(*Target)(nil),                            // 2: erda.core.messenger.notify.Target
	(*NotifySource)(nil),                      // 3: erda.core.messenger.notify.NotifySource
	(*CreateNotifyHistoryResponse)(nil),       // 4: erda.core.messenger.notify.CreateNotifyHistoryResponse
	(*QueryNotifyHistoriesRequest)(nil),       // 5: erda.core.messenger.notify.QueryNotifyHistoriesRequest
	(*QueryNotifyHistoriesResponse)(nil),      // 6: erda.core.messenger.notify.QueryNotifyHistoriesResponse
	(*QueryNotifyHistoryData)(nil),            // 7: erda.core.messenger.notify.QueryNotifyHistoryData
	(*NotifyHistory)(nil),                     // 8: erda.core.messenger.notify.NotifyHistory
	(*GetNotifyStatusRequest)(nil),            // 9: erda.core.messenger.notify.GetNotifyStatusRequest
	(*GetNotifyStatusResponse)(nil),           // 10: erda.core.messenger.notify.GetNotifyStatusResponse
	(*GetNotifyHistogramRequest)(nil),         // 11: erda.core.messenger.notify.GetNotifyHistogramRequest
	(*GetNotifyHistogramResponse)(nil),        // 12: erda.core.messenger.notify.GetNotifyHistogramResponse
	(*NotifyHistogramData)(nil),               // 13: erda.core.messenger.notify.NotifyHistogramData
	(*StatisticValue)(nil),                    // 14: erda.core.messenger.notify.StatisticValue
	(*QueryAlertNotifyHistoriesRequest)(nil),  // 15: erda.core.messenger.notify.QueryAlertNotifyHistoriesRequest
	(*QueryAlertNotifyHistoriesResponse)(nil), // 16: erda.core.messenger.notify.QueryAlertNotifyHistoriesResponse
	(*AlertNotifyHistories)(nil),              // 17: erda.core.messenger.notify.AlertNotifyHistories
	(*AlertNotifyIndex)(nil),                  // 18: erda.core.messenger.notify.AlertNotifyIndex
	(*GetAlertNotifyDetailRequest)(nil),       // 19: erda.core.messenger.notify.GetAlertNotifyDetailRequest
	(*GetAlertNotifyDetailResponse)(nil),      // 20: erda.core.messenger.notify.GetAlertNotifyDetailResponse
	(*AlertNotifyDetail)(nil),                 // 21: erda.core.messenger.notify.AlertNotifyDetail
	(*GetTypeNotifyHistogramRequest)(nil),     // 22: erda.core.messenger.notify.GetTypeNotifyHistogramRequest
	(*GetTypeNotifyHistogramResponse)(nil),    // 23: erda.core.messenger.notify.GetTypeNotifyHistogramResponse
	(*TypeNotifyHistogram)(nil),               // 24: erda.core.messenger.notify.TypeNotifyHistogram
	nil,                                       // 25: erda.core.messenger.notify.CreateNotifyHistoryRequest.NotifyTagsEntry
	nil,                                       // 26: erda.core.messenger.notify.GetNotifyStatusResponse.DataEntry
	nil,                                       // 27: erda.core.messenger.notify.NotifyHistogramData.ValueEntry
	nil,                                       // 28: erda.core.messenger.notify.TypeNotifyHistogram.ValueEntry
	(*structpb.Value)(nil),                    // 29: google.protobuf.Value
	(*timestamppb.Timestamp)(nil),             // 30: google.protobuf.Timestamp
}
var file_notify_proto_depIdxs = []int32{
	1,  // 0: erda.core.messenger.notify.CreateNotifyHistoryRequest.notifyTargets:type_name -> erda.core.messenger.notify.NotifyTarget
	3,  // 1: erda.core.messenger.notify.CreateNotifyHistoryRequest.notifySource:type_name -> erda.core.messenger.notify.NotifySource
	25, // 2: erda.core.messenger.notify.CreateNotifyHistoryRequest.notifyTags:type_name -> erda.core.messenger.notify.CreateNotifyHistoryRequest.NotifyTagsEntry
	2,  // 3: erda.core.messenger.notify.NotifyTarget.values:type_name -> erda.core.messenger.notify.Target
	29, // 4: erda.core.messenger.notify.NotifySource.params:type_name -> google.protobuf.Value
	7,  // 5: erda.core.messenger.notify.QueryNotifyHistoriesResponse.data:type_name -> erda.core.messenger.notify.QueryNotifyHistoryData
	8,  // 6: erda.core.messenger.notify.QueryNotifyHistoryData.list:type_name -> erda.core.messenger.notify.NotifyHistory
	1,  // 7: erda.core.messenger.notify.NotifyHistory.notifyTargets:type_name -> erda.core.messenger.notify.NotifyTarget
	3,  // 8: erda.core.messenger.notify.NotifyHistory.notifySource:type_name -> erda.core.messenger.notify.NotifySource
	30, // 9: erda.core.messenger.notify.NotifyHistory.createdAt:type_name -> google.protobuf.Timestamp
	26, // 10: erda.core.messenger.notify.GetNotifyStatusResponse.data:type_name -> erda.core.messenger.notify.GetNotifyStatusResponse.DataEntry
	13, // 11: erda.core.messenger.notify.GetNotifyHistogramResponse.data:type_name -> erda.core.messenger.notify.NotifyHistogramData
	27, // 12: erda.core.messenger.notify.NotifyHistogramData.value:type_name -> erda.core.messenger.notify.NotifyHistogramData.ValueEntry
	17, // 13: erda.core.messenger.notify.QueryAlertNotifyHistoriesResponse.data:type_name -> erda.core.messenger.notify.AlertNotifyHistories
	18, // 14: erda.core.messenger.notify.AlertNotifyHistories.list:type_name -> erda.core.messenger.notify.AlertNotifyIndex
	30, // 15: erda.core.messenger.notify.AlertNotifyIndex.sendTime:type_name -> google.protobuf.Timestamp
	21, // 16: erda.core.messenger.notify.GetAlertNotifyDetailResponse.data:type_name -> erda.core.messenger.notify.AlertNotifyDetail
	30, // 17: erda.core.messenger.notify.AlertNotifyDetail.sendTime:type_name -> google.protobuf.Timestamp
	24, // 18: erda.core.messenger.notify.GetTypeNotifyHistogramResponse.data:type_name -> erda.core.messenger.notify.TypeNotifyHistogram
	28, // 19: erda.core.messenger.notify.TypeNotifyHistogram.value:type_name -> erda.core.messenger.notify.TypeNotifyHistogram.ValueEntry
	29, // 20: erda.core.messenger.notify.CreateNotifyHistoryRequest.NotifyTagsEntry.value:type_name -> google.protobuf.Value
	14, // 21: erda.core.messenger.notify.NotifyHistogramData.ValueEntry.value:type_name -> erda.core.messenger.notify.StatisticValue
	14, // 22: erda.core.messenger.notify.TypeNotifyHistogram.ValueEntry.value:type_name -> erda.core.messenger.notify.StatisticValue
	0,  // 23: erda.core.messenger.notify.NotifyService.CreateNotifyHistory:input_type -> erda.core.messenger.notify.CreateNotifyHistoryRequest
	5,  // 24: erda.core.messenger.notify.NotifyService.QueryNotifyHistories:input_type -> erda.core.messenger.notify.QueryNotifyHistoriesRequest
	9,  // 25: erda.core.messenger.notify.NotifyService.GetNotifyStatus:input_type -> erda.core.messenger.notify.GetNotifyStatusRequest
	11, // 26: erda.core.messenger.notify.NotifyService.GetNotifyHistogram:input_type -> erda.core.messenger.notify.GetNotifyHistogramRequest
	15, // 27: erda.core.messenger.notify.NotifyService.QueryAlertNotifyHistories:input_type -> erda.core.messenger.notify.QueryAlertNotifyHistoriesRequest
	19, // 28: erda.core.messenger.notify.NotifyService.GetAlertNotifyDetail:input_type -> erda.core.messenger.notify.GetAlertNotifyDetailRequest
	22, // 29: erda.core.messenger.notify.NotifyService.GetTypeNotifyHistogram:input_type -> erda.core.messenger.notify.GetTypeNotifyHistogramRequest
	4,  // 30: erda.core.messenger.notify.NotifyService.CreateNotifyHistory:output_type -> erda.core.messenger.notify.CreateNotifyHistoryResponse
	6,  // 31: erda.core.messenger.notify.NotifyService.QueryNotifyHistories:output_type -> erda.core.messenger.notify.QueryNotifyHistoriesResponse
	10, // 32: erda.core.messenger.notify.NotifyService.GetNotifyStatus:output_type -> erda.core.messenger.notify.GetNotifyStatusResponse
	12, // 33: erda.core.messenger.notify.NotifyService.GetNotifyHistogram:output_type -> erda.core.messenger.notify.GetNotifyHistogramResponse
	16, // 34: erda.core.messenger.notify.NotifyService.QueryAlertNotifyHistories:output_type -> erda.core.messenger.notify.QueryAlertNotifyHistoriesResponse
	20, // 35: erda.core.messenger.notify.NotifyService.GetAlertNotifyDetail:output_type -> erda.core.messenger.notify.GetAlertNotifyDetailResponse
	23, // 36: erda.core.messenger.notify.NotifyService.GetTypeNotifyHistogram:output_type -> erda.core.messenger.notify.GetTypeNotifyHistogramResponse
	30, // [30:37] is the sub-list for method output_type
	23, // [23:30] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_notify_proto_init() }
func file_notify_proto_init() {
	if File_notify_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifyHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifySource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifyHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNotifyHistoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNotifyHistoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNotifyHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyHistogramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyHistogramData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertNotifyHistoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlertNotifyHistoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertNotifyHistories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertNotifyIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertNotifyDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertNotifyDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertNotifyDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTypeNotifyHistogramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTypeNotifyHistogramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notify_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeNotifyHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notify_proto_goTypes,
		DependencyIndexes: file_notify_proto_depIdxs,
		MessageInfos:      file_notify_proto_msgTypes,
	}.Build()
	File_notify_proto = out.File
	file_notify_proto_rawDesc = nil
	file_notify_proto_goTypes = nil
	file_notify_proto_depIdxs = nil
}
