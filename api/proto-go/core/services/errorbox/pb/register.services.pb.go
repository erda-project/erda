// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: errorbox.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterErrorBoxServiceImp errorbox.proto
func RegisterErrorBoxServiceImp(regester transport.Register, srv ErrorBoxServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterErrorBoxServiceHandler(regester, ErrorBoxServiceHandler(srv), _ops.HTTP...)
	RegisterErrorBoxServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.services.errorbox.ErrorBoxService",
	)
}

var (
	errorBoxServiceClientType  = reflect.TypeOf((*ErrorBoxServiceClient)(nil)).Elem()
	errorBoxServiceServerType  = reflect.TypeOf((*ErrorBoxServiceServer)(nil)).Elem()
	errorBoxServiceHandlerType = reflect.TypeOf((*ErrorBoxServiceHandler)(nil)).Elem()
)

// ErrorBoxServiceClientType .
func ErrorBoxServiceClientType() reflect.Type { return errorBoxServiceClientType }

// ErrorBoxServiceServerType .
func ErrorBoxServiceServerType() reflect.Type { return errorBoxServiceServerType }

// ErrorBoxServiceHandlerType .
func ErrorBoxServiceHandlerType() reflect.Type { return errorBoxServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		errorBoxServiceClientType,
		// server types
		errorBoxServiceServerType,
		// handler types
		errorBoxServiceHandlerType,
	}
}
