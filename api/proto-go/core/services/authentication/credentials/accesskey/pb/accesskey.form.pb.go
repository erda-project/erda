// Code generated by protoc-gen-go-form. DO NOT EDIT.
// Source: accesskey.proto

package pb

import (
	url "net/url"
	strconv "strconv"

	urlenc "github.com/erda-project/erda-infra/pkg/urlenc"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "github.com/erda-project/erda-infra/pkg/urlenc" package it is being compiled against.
var _ urlenc.URLValuesUnmarshaler = (*AccessKeysItem)(nil)
var _ urlenc.URLValuesUnmarshaler = (*SubjectTypeEnum)(nil)
var _ urlenc.URLValuesUnmarshaler = (*StatusEnum)(nil)

// AccessKeysItem implement urlenc.URLValuesUnmarshaler.
func (m *AccessKeysItem) UnmarshalURLValues(prefix string, values url.Values) error {
	for key, vals := range values {
		if len(vals) > 0 {
			switch prefix + key {
			case "id":
				m.Id = vals[0]
			case "accessKey":
				m.AccessKey = vals[0]
			case "secretKey":
				m.SecretKey = vals[0]
			case "status":
			case "subjectType":
			case "subject":
				m.Subject = vals[0]
			case "description":
				m.Description = vals[0]
			case "createdAt":
				if m.CreatedAt == nil {
					m.CreatedAt = &timestamppb.Timestamp{}
				}
			case "createdAt.seconds":
				if m.CreatedAt == nil {
					m.CreatedAt = &timestamppb.Timestamp{}
				}
				val, err := strconv.ParseInt(vals[0], 10, 64)
				if err != nil {
					return err
				}
				m.CreatedAt.Seconds = val
			case "createdAt.nanos":
				if m.CreatedAt == nil {
					m.CreatedAt = &timestamppb.Timestamp{}
				}
				val, err := strconv.ParseInt(vals[0], 10, 32)
				if err != nil {
					return err
				}
				m.CreatedAt.Nanos = int32(val)
			case "scope":
				m.Scope = vals[0]
			case "scopeId":
				m.ScopeId = vals[0]
			case "token":
				m.Token = vals[0]
			case "creatorId":
				m.CreatorId = vals[0]
			}
		}
	}
	return nil
}

// SubjectTypeEnum implement urlenc.URLValuesUnmarshaler.
func (m *SubjectTypeEnum) UnmarshalURLValues(prefix string, values url.Values) error {
	return nil
}

// StatusEnum implement urlenc.URLValuesUnmarshaler.
func (m *StatusEnum) UnmarshalURLValues(prefix string, values url.Values) error {
	return nil
}
