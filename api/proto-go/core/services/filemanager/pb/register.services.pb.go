// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: filemanager.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterFileManagerServiceImp filemanager.proto
func RegisterFileManagerServiceImp(regester transport.Register, srv FileManagerServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterFileManagerServiceHandler(regester, FileManagerServiceHandler(srv), _ops.HTTP...)
	RegisterFileManagerServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.services.filemanager.FileManagerService",
	)
}

var (
	fileManagerServiceClientType  = reflect.TypeOf((*FileManagerServiceClient)(nil)).Elem()
	fileManagerServiceServerType  = reflect.TypeOf((*FileManagerServiceServer)(nil)).Elem()
	fileManagerServiceHandlerType = reflect.TypeOf((*FileManagerServiceHandler)(nil)).Elem()
)

// FileManagerServiceClientType .
func FileManagerServiceClientType() reflect.Type { return fileManagerServiceClientType }

// FileManagerServiceServerType .
func FileManagerServiceServerType() reflect.Type { return fileManagerServiceServerType }

// FileManagerServiceHandlerType .
func FileManagerServiceHandlerType() reflect.Type { return fileManagerServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		fileManagerServiceClientType,
		// server types
		fileManagerServiceServerType,
		// handler types
		fileManagerServiceHandlerType,
	}
}
