// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: details.proto

package pb

import (
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuerySystemPodMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Timestamp   int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *QuerySystemPodMetricsRequest) Reset() {
	*x = QuerySystemPodMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_details_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySystemPodMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySystemPodMetricsRequest) ProtoMessage() {}

func (x *QuerySystemPodMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_details_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySystemPodMetricsRequest.ProtoReflect.Descriptor instead.
func (*QuerySystemPodMetricsRequest) Descriptor() ([]byte, []int) {
	return file_details_proto_rawDescGZIP(), []int{0}
}

func (x *QuerySystemPodMetricsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuerySystemPodMetricsRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *QuerySystemPodMetricsRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type QuerySystemPodMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PodInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QuerySystemPodMetricsResponse) Reset() {
	*x = QuerySystemPodMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_details_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySystemPodMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySystemPodMetricsResponse) ProtoMessage() {}

func (x *QuerySystemPodMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_details_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySystemPodMetricsResponse.ProtoReflect.Descriptor instead.
func (*QuerySystemPodMetricsResponse) Descriptor() ([]byte, []int) {
	return file_details_proto_rawDescGZIP(), []int{1}
}

func (x *QuerySystemPodMetricsResponse) GetData() *PodInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type PodInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary   *PodInfoSummary    `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Instances []*PodInfoInstanse `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *PodInfo) Reset() {
	*x = PodInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_details_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodInfo) ProtoMessage() {}

func (x *PodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_details_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodInfo.ProtoReflect.Descriptor instead.
func (*PodInfo) Descriptor() ([]byte, []int) {
	return file_details_proto_rawDescGZIP(), []int{2}
}

func (x *PodInfo) GetSummary() *PodInfoSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *PodInfo) GetInstances() []*PodInfoInstanse {
	if x != nil {
		return x.Instances
	}
	return nil
}

type PodInfoSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName      string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	NodeName         string `protobuf:"bytes,2,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	HostIP           string `protobuf:"bytes,3,opt,name=hostIP,proto3" json:"hostIP,omitempty"`
	Namespace        string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName          string `protobuf:"bytes,5,opt,name=podName,proto3" json:"podName,omitempty"`
	RestartTotal     int64  `protobuf:"varint,6,opt,name=restartTotal,proto3" json:"restartTotal,omitempty"`
	StateCode        int64  `protobuf:"varint,7,opt,name=stateCode,proto3" json:"stateCode,omitempty"`
	TerminatedReason string `protobuf:"bytes,8,opt,name=terminatedReason,proto3" json:"terminatedReason,omitempty"`
}

func (x *PodInfoSummary) Reset() {
	*x = PodInfoSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_details_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodInfoSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodInfoSummary) ProtoMessage() {}

func (x *PodInfoSummary) ProtoReflect() protoreflect.Message {
	mi := &file_details_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodInfoSummary.ProtoReflect.Descriptor instead.
func (*PodInfoSummary) Descriptor() ([]byte, []int) {
	return file_details_proto_rawDescGZIP(), []int{3}
}

func (x *PodInfoSummary) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *PodInfoSummary) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *PodInfoSummary) GetHostIP() string {
	if x != nil {
		return x.HostIP
	}
	return ""
}

func (x *PodInfoSummary) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PodInfoSummary) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PodInfoSummary) GetRestartTotal() int64 {
	if x != nil {
		return x.RestartTotal
	}
	return 0
}

func (x *PodInfoSummary) GetStateCode() int64 {
	if x != nil {
		return x.StateCode
	}
	return 0
}

func (x *PodInfoSummary) GetTerminatedReason() string {
	if x != nil {
		return x.TerminatedReason
	}
	return ""
}

type PodInfoInstanse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=containerId,proto3" json:"containerId,omitempty"`
	HostIP      string `protobuf:"bytes,2,opt,name=hostIP,proto3" json:"hostIP,omitempty"`
	StartedAt   string `protobuf:"bytes,3,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	FinishedAt  string `protobuf:"bytes,4,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	ExitCode    int64  `protobuf:"varint,5,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	OomKilled   bool   `protobuf:"varint,6,opt,name=oomKilled,proto3" json:"oomKilled,omitempty"`
}

func (x *PodInfoInstanse) Reset() {
	*x = PodInfoInstanse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_details_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodInfoInstanse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodInfoInstanse) ProtoMessage() {}

func (x *PodInfoInstanse) ProtoReflect() protoreflect.Message {
	mi := &file_details_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodInfoInstanse.ProtoReflect.Descriptor instead.
func (*PodInfoInstanse) Descriptor() ([]byte, []int) {
	return file_details_proto_rawDescGZIP(), []int{4}
}

func (x *PodInfoInstanse) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *PodInfoInstanse) GetHostIP() string {
	if x != nil {
		return x.HostIP
	}
	return ""
}

func (x *PodInfoInstanse) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *PodInfoInstanse) GetFinishedAt() string {
	if x != nil {
		return x.FinishedAt
	}
	return ""
}

func (x *PodInfoInstanse) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *PodInfoInstanse) GetOomKilled() bool {
	if x != nil {
		return x.OomKilled
	}
	return false
}

var File_details_proto protoreflect.FileDescriptor

var file_details_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1d, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b,
	0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xe2, 0xdf,
	0x1f, 0x04, 0x10, 0xc0, 0xee, 0x6d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x5b, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0,
	0x01, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x6f, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x22, 0x8c, 0x02, 0x0a, 0x0e, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6f, 0x6d, 0x4b,
	0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x6f, 0x6d,
	0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x32, 0xc9, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb2, 0x01,
	0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x64,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x70, 0x6f, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72,
	0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_details_proto_rawDescOnce sync.Once
	file_details_proto_rawDescData = file_details_proto_rawDesc
)

func file_details_proto_rawDescGZIP() []byte {
	file_details_proto_rawDescOnce.Do(func() {
		file_details_proto_rawDescData = protoimpl.X.CompressGZIP(file_details_proto_rawDescData)
	})
	return file_details_proto_rawDescData
}

var file_details_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_details_proto_goTypes = []interface{}{
	(*QuerySystemPodMetricsRequest)(nil),  // 0: erda.core.monitor.alertdetail.QuerySystemPodMetricsRequest
	(*QuerySystemPodMetricsResponse)(nil), // 1: erda.core.monitor.alertdetail.QuerySystemPodMetricsResponse
	(*PodInfo)(nil),                       // 2: erda.core.monitor.alertdetail.PodInfo
	(*PodInfoSummary)(nil),                // 3: erda.core.monitor.alertdetail.PodInfoSummary
	(*PodInfoInstanse)(nil),               // 4: erda.core.monitor.alertdetail.PodInfoInstanse
}
var file_details_proto_depIdxs = []int32{
	2, // 0: erda.core.monitor.alertdetail.QuerySystemPodMetricsResponse.data:type_name -> erda.core.monitor.alertdetail.PodInfo
	3, // 1: erda.core.monitor.alertdetail.PodInfo.summary:type_name -> erda.core.monitor.alertdetail.PodInfoSummary
	4, // 2: erda.core.monitor.alertdetail.PodInfo.instances:type_name -> erda.core.monitor.alertdetail.PodInfoInstanse
	0, // 3: erda.core.monitor.alertdetail.AlertDetailService.QuerySystemPodMetrics:input_type -> erda.core.monitor.alertdetail.QuerySystemPodMetricsRequest
	1, // 4: erda.core.monitor.alertdetail.AlertDetailService.QuerySystemPodMetrics:output_type -> erda.core.monitor.alertdetail.QuerySystemPodMetricsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_details_proto_init() }
func file_details_proto_init() {
	if File_details_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_details_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySystemPodMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_details_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySystemPodMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_details_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_details_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodInfoSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_details_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodInfoInstanse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_details_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_details_proto_goTypes,
		DependencyIndexes: file_details_proto_depIdxs,
		MessageInfos:      file_details_proto_msgTypes,
	}.Build()
	File_details_proto = out.File
	file_details_proto_rawDesc = nil
	file_details_proto_goTypes = nil
	file_details_proto_depIdxs = nil
}
