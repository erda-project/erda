// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: settings.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterSettingsServiceImp settings.proto
func RegisterSettingsServiceImp(regester transport.Register, srv SettingsServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterSettingsServiceHandler(regester, SettingsServiceHandler(srv), _ops.HTTP...)
	RegisterSettingsServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.monitor.settings.SettingsService",
	)
}

var (
	settingsServiceClientType  = reflect.TypeOf((*SettingsServiceClient)(nil)).Elem()
	settingsServiceServerType  = reflect.TypeOf((*SettingsServiceServer)(nil)).Elem()
	settingsServiceHandlerType = reflect.TypeOf((*SettingsServiceHandler)(nil)).Elem()
)

// SettingsServiceClientType .
func SettingsServiceClientType() reflect.Type { return settingsServiceClientType }

// SettingsServiceServerType .
func SettingsServiceServerType() reflect.Type { return settingsServiceServerType }

// SettingsServiceHandlerType .
func SettingsServiceHandlerType() reflect.Type { return settingsServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		settingsServiceClientType,
		// server types
		settingsServiceServerType,
		// handler types
		settingsServiceHandlerType,
	}
}
