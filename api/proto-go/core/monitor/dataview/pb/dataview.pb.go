// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: dataview.proto

package pb

import (
	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListSystemViews
type ListSystemViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeID string `protobuf:"bytes,2,opt,name=scopeID,proto3" json:"scopeID,omitempty"`
}

func (x *ListSystemViewsRequest) Reset() {
	*x = ListSystemViewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemViewsRequest) ProtoMessage() {}

func (x *ListSystemViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemViewsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemViewsRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{0}
}

func (x *ListSystemViewsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ListSystemViewsRequest) GetScopeID() string {
	if x != nil {
		return x.ScopeID
	}
	return ""
}

type ListSystemViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ViewList `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListSystemViewsResponse) Reset() {
	*x = ListSystemViewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemViewsResponse) ProtoMessage() {}

func (x *ListSystemViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemViewsResponse.ProtoReflect.Descriptor instead.
func (*ListSystemViewsResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{1}
}

func (x *ListSystemViewsResponse) GetData() *ViewList {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetSystemView
type GetSystemViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSystemViewRequest) Reset() {
	*x = GetSystemViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemViewRequest) ProtoMessage() {}

func (x *GetSystemViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemViewRequest.ProtoReflect.Descriptor instead.
func (*GetSystemViewRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{2}
}

func (x *GetSystemViewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSystemViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *View `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSystemViewResponse) Reset() {
	*x = GetSystemViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemViewResponse) ProtoMessage() {}

func (x *GetSystemViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemViewResponse.ProtoReflect.Descriptor instead.
func (*GetSystemViewResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{3}
}

func (x *GetSystemViewResponse) GetData() *View {
	if x != nil {
		return x.Data
	}
	return nil
}

// ListCustomViews
type ListCustomViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope   string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeID string `protobuf:"bytes,2,opt,name=scopeID,proto3" json:"scopeID,omitempty"`
}

func (x *ListCustomViewsRequest) Reset() {
	*x = ListCustomViewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomViewsRequest) ProtoMessage() {}

func (x *ListCustomViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomViewsRequest.ProtoReflect.Descriptor instead.
func (*ListCustomViewsRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{4}
}

func (x *ListCustomViewsRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ListCustomViewsRequest) GetScopeID() string {
	if x != nil {
		return x.ScopeID
	}
	return ""
}

type ListCustomViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ViewList `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListCustomViewsResponse) Reset() {
	*x = ListCustomViewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCustomViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomViewsResponse) ProtoMessage() {}

func (x *ListCustomViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomViewsResponse.ProtoReflect.Descriptor instead.
func (*ListCustomViewsResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{5}
}

func (x *ListCustomViewsResponse) GetData() *ViewList {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetCustomView
type GetCustomViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCustomViewRequest) Reset() {
	*x = GetCustomViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomViewRequest) ProtoMessage() {}

func (x *GetCustomViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomViewRequest.ProtoReflect.Descriptor instead.
func (*GetCustomViewRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{6}
}

func (x *GetCustomViewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCustomViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *View `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomViewResponse) Reset() {
	*x = GetCustomViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomViewResponse) ProtoMessage() {}

func (x *GetCustomViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomViewResponse.ProtoReflect.Descriptor instead.
func (*GetCustomViewResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{7}
}

func (x *GetCustomViewResponse) GetData() *View {
	if x != nil {
		return x.Data
	}
	return nil
}

// CreateCustomView
type CreateCustomViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Scope   string      `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeID string      `protobuf:"bytes,3,opt,name=scopeID,json=scopeId,proto3" json:"scopeID,omitempty"`
	Version string      `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Name    string      `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Desc    string      `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Blocks  []*Block    `protobuf:"bytes,7,rep,name=blocks,json=viewConfig,proto3" json:"blocks,omitempty"`
	Data    []*DataItem `protobuf:"bytes,8,rep,name=data,json=dataConfig,proto3" json:"data,omitempty"`
}

func (x *CreateCustomViewRequest) Reset() {
	*x = CreateCustomViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomViewRequest) ProtoMessage() {}

func (x *CreateCustomViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomViewRequest.ProtoReflect.Descriptor instead.
func (*CreateCustomViewRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCustomViewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCustomViewRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CreateCustomViewRequest) GetScopeID() string {
	if x != nil {
		return x.ScopeID
	}
	return ""
}

func (x *CreateCustomViewRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateCustomViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCustomViewRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateCustomViewRequest) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *CreateCustomViewRequest) GetData() []*DataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCustomViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *View `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCustomViewResponse) Reset() {
	*x = CreateCustomViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomViewResponse) ProtoMessage() {}

func (x *CreateCustomViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomViewResponse.ProtoReflect.Descriptor instead.
func (*CreateCustomViewResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCustomViewResponse) GetData() *View {
	if x != nil {
		return x.Data
	}
	return nil
}

// UpdateCustomView
type UpdateCustomViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string      `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Blocks []*Block    `protobuf:"bytes,4,rep,name=blocks,json=viewConfig,proto3" json:"blocks,omitempty"`
	Data   []*DataItem `protobuf:"bytes,5,rep,name=data,json=dataConfig,proto3" json:"data,omitempty"`
}

func (x *UpdateCustomViewRequest) Reset() {
	*x = UpdateCustomViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomViewRequest) ProtoMessage() {}

func (x *UpdateCustomViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomViewRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomViewRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCustomViewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCustomViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCustomViewRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateCustomViewRequest) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *UpdateCustomViewRequest) GetData() []*DataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCustomViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCustomViewResponse) Reset() {
	*x = UpdateCustomViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomViewResponse) ProtoMessage() {}

func (x *UpdateCustomViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomViewResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomViewResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCustomViewResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

// DeleteCustomView
type DeleteCustomViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCustomViewRequest) Reset() {
	*x = DeleteCustomViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomViewRequest) ProtoMessage() {}

func (x *DeleteCustomViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomViewRequest.ProtoReflect.Descriptor instead.
func (*DeleteCustomViewRequest) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteCustomViewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCustomViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCustomViewResponse) Reset() {
	*x = DeleteCustomViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCustomViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomViewResponse) ProtoMessage() {}

func (x *DeleteCustomViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomViewResponse.ProtoReflect.Descriptor instead.
func (*DeleteCustomViewResponse) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteCustomViewResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

// common
type ViewList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*View `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ViewList) Reset() {
	*x = ViewList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewList) ProtoMessage() {}

func (x *ViewList) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewList.ProtoReflect.Descriptor instead.
func (*ViewList) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{14}
}

func (x *ViewList) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ViewList) GetList() []*View {
	if x != nil {
		return x.List
	}
	return nil
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Scope     string   `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeID   string   `protobuf:"bytes,3,opt,name=scopeID,json=scopeId,proto3" json:"scopeID,omitempty"`
	Version   string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Name      string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string   `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Blocks    []*Block `protobuf:"bytes,7,rep,name=blocks,json=viewConfig,proto3" json:"blocks,omitempty"`
	CreatedAt int64    `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64    `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{15}
}

func (x *View) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *View) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *View) GetScopeID() string {
	if x != nil {
		return x.ScopeID
	}
	return ""
}

func (x *View) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *View) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *View) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *View) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *View) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *View) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	W     int64  `protobuf:"varint,1,opt,name=w,proto3" json:"w,omitempty"`
	H     int64  `protobuf:"varint,2,opt,name=h,proto3" json:"h,omitempty"`
	X     int64  `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y     int64  `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	I     string `protobuf:"bytes,5,opt,name=i,proto3" json:"i,omitempty"`
	Chart *Chart `protobuf:"bytes,6,opt,name=chart,json=view,proto3" json:"chart,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{16}
}

func (x *Block) GetW() int64 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *Block) GetH() int64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *Block) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Block) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Block) GetI() string {
	if x != nil {
		return x.I
	}
	return ""
}

func (x *Block) GetChart() *Chart {
	if x != nil {
		return x.Chart
	}
	return nil
}

type Chart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ChartType      string          `protobuf:"bytes,3,opt,name=chartType,proto3" json:"chartType,omitempty"`
	DataSourceType string          `protobuf:"bytes,4,opt,name=dataSourceType,proto3" json:"dataSourceType,omitempty"`
	StaticData     *structpb.Value `protobuf:"bytes,5,opt,name=staticData,proto3" json:"staticData,omitempty"`
	Config         *structpb.Value `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	Api            *structpb.Value `protobuf:"bytes,7,opt,name=api,proto3" json:"api,omitempty"`
	Controls       *structpb.Value `protobuf:"bytes,8,opt,name=controls,proto3" json:"controls,omitempty"`
	I18N           *structpb.Value `protobuf:"bytes,9,opt,name=i18n,proto3" json:"i18n,omitempty"`
}

func (x *Chart) Reset() {
	*x = Chart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart) ProtoMessage() {}

func (x *Chart) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chart.ProtoReflect.Descriptor instead.
func (*Chart) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{17}
}

func (x *Chart) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chart) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Chart) GetChartType() string {
	if x != nil {
		return x.ChartType
	}
	return ""
}

func (x *Chart) GetDataSourceType() string {
	if x != nil {
		return x.DataSourceType
	}
	return ""
}

func (x *Chart) GetStaticData() *structpb.Value {
	if x != nil {
		return x.StaticData
	}
	return nil
}

func (x *Chart) GetConfig() *structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Chart) GetApi() *structpb.Value {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *Chart) GetControls() *structpb.Value {
	if x != nil {
		return x.Controls
	}
	return nil
}

func (x *Chart) GetI18N() *structpb.Value {
	if x != nil {
		return x.I18N
	}
	return nil
}

type DataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I          string          `protobuf:"bytes,1,opt,name=i,proto3" json:"i,omitempty"`
	StaticData *structpb.Value `protobuf:"bytes,2,opt,name=staticData,proto3" json:"staticData,omitempty"`
}

func (x *DataItem) Reset() {
	*x = DataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataview_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataItem) ProtoMessage() {}

func (x *DataItem) ProtoReflect() protoreflect.Message {
	mi := &file_dataview_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataItem.ProtoReflect.Descriptor instead.
func (*DataItem) Descriptor() ([]byte, []int) {
	return file_dataview_proto_rawDescGZIP(), []int{18}
}

func (x *DataItem) GetI() string {
	if x != nil {
		return x.I
	}
	return ""
}

func (x *DataItem) GetStaticData() *structpb.Value {
	if x != nil {
		return x.StaticData
	}
	return nil
}

var File_dataview_proto protoreflect.FileDescriptor

var file_dataview_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1a, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77,
	0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x44, 0x22, 0x53, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44,
	0x22, 0x53, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3d, 0x0a, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x76,
	0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x50, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd8, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3d, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x2e, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x08, 0x56, 0x69, 0x65,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x83, 0x02, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3d, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x0a, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x77, 0x12,
	0x0c, 0x0a, 0x01, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x68, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x69, 0x12, 0x36, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22,
	0xf7, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x28, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x12, 0x2a, 0x0a,
	0x04, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x69, 0x31, 0x38, 0x6e, 0x22, 0x50, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x69, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x32, 0x94, 0x0b, 0x0a, 0x0f,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xd5, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x3f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x3d, 0x7b, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x44, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x1e, 0x0a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x12, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x23, 0x0a, 0x21,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xc7, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x3f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x49, 0x64, 0x3d, 0x7b, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x44, 0x7d, 0xfa,
	0x81, 0xf9, 0x1b, 0x17, 0x0a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0xb9, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x12, 0x30, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x1c, 0x0a, 0x1a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb8, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x12, 0x33, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x17, 0x0a, 0x15, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0xc2, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x12, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x1a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x1c, 0x0a, 0x1a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xc2, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x12, 0x33, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a,
	0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x1c,
	0x0a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x1a, 0x14, 0xc2, 0xc4,
	0xcb, 0x1c, 0x0f, 0x22, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x32, 0x04, 0x10, 0x01,
	0x20, 0x01, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72,
	0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65,
	0x77, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataview_proto_rawDescOnce sync.Once
	file_dataview_proto_rawDescData = file_dataview_proto_rawDesc
)

func file_dataview_proto_rawDescGZIP() []byte {
	file_dataview_proto_rawDescOnce.Do(func() {
		file_dataview_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataview_proto_rawDescData)
	})
	return file_dataview_proto_rawDescData
}

var file_dataview_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_dataview_proto_goTypes = []interface{}{
	(*ListSystemViewsRequest)(nil),   // 0: erda.core.monitor.dataview.ListSystemViewsRequest
	(*ListSystemViewsResponse)(nil),  // 1: erda.core.monitor.dataview.ListSystemViewsResponse
	(*GetSystemViewRequest)(nil),     // 2: erda.core.monitor.dataview.GetSystemViewRequest
	(*GetSystemViewResponse)(nil),    // 3: erda.core.monitor.dataview.GetSystemViewResponse
	(*ListCustomViewsRequest)(nil),   // 4: erda.core.monitor.dataview.ListCustomViewsRequest
	(*ListCustomViewsResponse)(nil),  // 5: erda.core.monitor.dataview.ListCustomViewsResponse
	(*GetCustomViewRequest)(nil),     // 6: erda.core.monitor.dataview.GetCustomViewRequest
	(*GetCustomViewResponse)(nil),    // 7: erda.core.monitor.dataview.GetCustomViewResponse
	(*CreateCustomViewRequest)(nil),  // 8: erda.core.monitor.dataview.CreateCustomViewRequest
	(*CreateCustomViewResponse)(nil), // 9: erda.core.monitor.dataview.CreateCustomViewResponse
	(*UpdateCustomViewRequest)(nil),  // 10: erda.core.monitor.dataview.UpdateCustomViewRequest
	(*UpdateCustomViewResponse)(nil), // 11: erda.core.monitor.dataview.UpdateCustomViewResponse
	(*DeleteCustomViewRequest)(nil),  // 12: erda.core.monitor.dataview.DeleteCustomViewRequest
	(*DeleteCustomViewResponse)(nil), // 13: erda.core.monitor.dataview.DeleteCustomViewResponse
	(*ViewList)(nil),                 // 14: erda.core.monitor.dataview.ViewList
	(*View)(nil),                     // 15: erda.core.monitor.dataview.View
	(*Block)(nil),                    // 16: erda.core.monitor.dataview.Block
	(*Chart)(nil),                    // 17: erda.core.monitor.dataview.Chart
	(*DataItem)(nil),                 // 18: erda.core.monitor.dataview.DataItem
	(*structpb.Value)(nil),           // 19: google.protobuf.Value
}
var file_dataview_proto_depIdxs = []int32{
	14, // 0: erda.core.monitor.dataview.ListSystemViewsResponse.data:type_name -> erda.core.monitor.dataview.ViewList
	15, // 1: erda.core.monitor.dataview.GetSystemViewResponse.data:type_name -> erda.core.monitor.dataview.View
	14, // 2: erda.core.monitor.dataview.ListCustomViewsResponse.data:type_name -> erda.core.monitor.dataview.ViewList
	15, // 3: erda.core.monitor.dataview.GetCustomViewResponse.data:type_name -> erda.core.monitor.dataview.View
	16, // 4: erda.core.monitor.dataview.CreateCustomViewRequest.blocks:type_name -> erda.core.monitor.dataview.Block
	18, // 5: erda.core.monitor.dataview.CreateCustomViewRequest.data:type_name -> erda.core.monitor.dataview.DataItem
	15, // 6: erda.core.monitor.dataview.CreateCustomViewResponse.data:type_name -> erda.core.monitor.dataview.View
	16, // 7: erda.core.monitor.dataview.UpdateCustomViewRequest.blocks:type_name -> erda.core.monitor.dataview.Block
	18, // 8: erda.core.monitor.dataview.UpdateCustomViewRequest.data:type_name -> erda.core.monitor.dataview.DataItem
	15, // 9: erda.core.monitor.dataview.ViewList.list:type_name -> erda.core.monitor.dataview.View
	16, // 10: erda.core.monitor.dataview.View.blocks:type_name -> erda.core.monitor.dataview.Block
	17, // 11: erda.core.monitor.dataview.Block.chart:type_name -> erda.core.monitor.dataview.Chart
	19, // 12: erda.core.monitor.dataview.Chart.staticData:type_name -> google.protobuf.Value
	19, // 13: erda.core.monitor.dataview.Chart.config:type_name -> google.protobuf.Value
	19, // 14: erda.core.monitor.dataview.Chart.api:type_name -> google.protobuf.Value
	19, // 15: erda.core.monitor.dataview.Chart.controls:type_name -> google.protobuf.Value
	19, // 16: erda.core.monitor.dataview.Chart.i18n:type_name -> google.protobuf.Value
	19, // 17: erda.core.monitor.dataview.DataItem.staticData:type_name -> google.protobuf.Value
	0,  // 18: erda.core.monitor.dataview.DataViewService.ListSystemViews:input_type -> erda.core.monitor.dataview.ListSystemViewsRequest
	2,  // 19: erda.core.monitor.dataview.DataViewService.GetSystemView:input_type -> erda.core.monitor.dataview.GetSystemViewRequest
	4,  // 20: erda.core.monitor.dataview.DataViewService.ListCustomViews:input_type -> erda.core.monitor.dataview.ListCustomViewsRequest
	6,  // 21: erda.core.monitor.dataview.DataViewService.GetCustomView:input_type -> erda.core.monitor.dataview.GetCustomViewRequest
	8,  // 22: erda.core.monitor.dataview.DataViewService.CreateCustomView:input_type -> erda.core.monitor.dataview.CreateCustomViewRequest
	10, // 23: erda.core.monitor.dataview.DataViewService.UpdateCustomView:input_type -> erda.core.monitor.dataview.UpdateCustomViewRequest
	12, // 24: erda.core.monitor.dataview.DataViewService.DeleteCustomView:input_type -> erda.core.monitor.dataview.DeleteCustomViewRequest
	1,  // 25: erda.core.monitor.dataview.DataViewService.ListSystemViews:output_type -> erda.core.monitor.dataview.ListSystemViewsResponse
	3,  // 26: erda.core.monitor.dataview.DataViewService.GetSystemView:output_type -> erda.core.monitor.dataview.GetSystemViewResponse
	5,  // 27: erda.core.monitor.dataview.DataViewService.ListCustomViews:output_type -> erda.core.monitor.dataview.ListCustomViewsResponse
	7,  // 28: erda.core.monitor.dataview.DataViewService.GetCustomView:output_type -> erda.core.monitor.dataview.GetCustomViewResponse
	9,  // 29: erda.core.monitor.dataview.DataViewService.CreateCustomView:output_type -> erda.core.monitor.dataview.CreateCustomViewResponse
	11, // 30: erda.core.monitor.dataview.DataViewService.UpdateCustomView:output_type -> erda.core.monitor.dataview.UpdateCustomViewResponse
	13, // 31: erda.core.monitor.dataview.DataViewService.DeleteCustomView:output_type -> erda.core.monitor.dataview.DeleteCustomViewResponse
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_dataview_proto_init() }
func file_dataview_proto_init() {
	if File_dataview_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dataview_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemViewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemViewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomViewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCustomViewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCustomViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataview_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataview_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataview_proto_goTypes,
		DependencyIndexes: file_dataview_proto_depIdxs,
		MessageInfos:      file_dataview_proto_msgTypes,
	}.Build()
	File_dataview_proto = out.File
	file_dataview_proto_rawDesc = nil
	file_dataview_proto_goTypes = nil
	file_dataview_proto_depIdxs = nil
}
