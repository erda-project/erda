// Code generated by protoc-gen-go-form. DO NOT EDIT.
// Source: legacy_consumer.proto

package pb

import (
	url "net/url"

	urlenc "github.com/erda-project/erda-infra/pkg/urlenc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "github.com/erda-project/erda-infra/pkg/urlenc" package it is being compiled against.
var _ urlenc.URLValuesUnmarshaler = (*GetConsumerRequest)(nil)
var _ urlenc.URLValuesUnmarshaler = (*Endpoint)(nil)
var _ urlenc.URLValuesUnmarshaler = (*GetConsumerResponse)(nil)

// GetConsumerRequest implement urlenc.URLValuesUnmarshaler.
func (m *GetConsumerRequest) UnmarshalURLValues(prefix string, values url.Values) error {
	for key, vals := range values {
		if len(vals) > 0 {
			switch prefix + key {
			case "orgId":
				m.OrgId = vals[0]
			case "projectId":
				m.ProjectId = vals[0]
			case "env":
				m.Env = vals[0]
			}
		}
	}
	return nil
}

// Endpoint implement urlenc.URLValuesUnmarshaler.
func (m *Endpoint) UnmarshalURLValues(prefix string, values url.Values) error {
	for key, vals := range values {
		if len(vals) > 0 {
			switch prefix + key {
			case "outerAddr":
				m.OuterAddr = vals[0]
			case "innerAddr":
				m.InnerAddr = vals[0]
			case "innerTips":
				m.InnerTips = vals[0]
			}
		}
	}
	return nil
}

// GetConsumerResponse implement urlenc.URLValuesUnmarshaler.
func (m *GetConsumerResponse) UnmarshalURLValues(prefix string, values url.Values) error {
	for key, vals := range values {
		if len(vals) > 0 {
			switch prefix + key {
			case "consumerName":
				m.ConsumerName = vals[0]
			case "consumerId":
				m.ConsumerId = vals[0]
			case "endpoint":
				if m.Endpoint == nil {
					m.Endpoint = &Endpoint{}
				}
			case "endpoint.outerAddr":
				if m.Endpoint == nil {
					m.Endpoint = &Endpoint{}
				}
				m.Endpoint.OuterAddr = vals[0]
			case "endpoint.innerAddr":
				if m.Endpoint == nil {
					m.Endpoint = &Endpoint{}
				}
				m.Endpoint.InnerAddr = vals[0]
			case "endpoint.innerTips":
				if m.Endpoint == nil {
					m.Endpoint = &Endpoint{}
				}
				m.Endpoint.InnerTips = vals[0]
			case "gatewayInstance":
				m.GatewayInstance = vals[0]
			case "clusterName":
				m.ClusterName = vals[0]
			}
		}
	}
	return nil
}
