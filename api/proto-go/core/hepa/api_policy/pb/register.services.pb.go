// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: api_policy.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterApiPolicyServiceImp api_policy.proto
func RegisterApiPolicyServiceImp(regester transport.Register, srv ApiPolicyServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterApiPolicyServiceHandler(regester, ApiPolicyServiceHandler(srv), _ops.HTTP...)
	RegisterApiPolicyServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.hepa.api_policy.ApiPolicyService",
	)
}

var (
	apiPolicyServiceClientType  = reflect.TypeOf((*ApiPolicyServiceClient)(nil)).Elem()
	apiPolicyServiceServerType  = reflect.TypeOf((*ApiPolicyServiceServer)(nil)).Elem()
	apiPolicyServiceHandlerType = reflect.TypeOf((*ApiPolicyServiceHandler)(nil)).Elem()
)

// ApiPolicyServiceClientType .
func ApiPolicyServiceClientType() reflect.Type { return apiPolicyServiceClientType }

// ApiPolicyServiceServerType .
func ApiPolicyServiceServerType() reflect.Type { return apiPolicyServiceServerType }

// ApiPolicyServiceHandlerType .
func ApiPolicyServiceHandlerType() reflect.Type { return apiPolicyServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		apiPolicyServiceClientType,
		// server types
		apiPolicyServiceServerType,
		// handler types
		apiPolicyServiceHandlerType,
	}
}
