// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: legacy_upstream.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterUpstreamServiceImp legacy_upstream.proto
func RegisterUpstreamServiceImp(regester transport.Register, srv UpstreamServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterUpstreamServiceHandler(regester, UpstreamServiceHandler(srv), _ops.HTTP...)
	RegisterUpstreamServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.hepa.legacy_upstream.UpstreamService",
	)
}

var (
	upstreamServiceClientType  = reflect.TypeOf((*UpstreamServiceClient)(nil)).Elem()
	upstreamServiceServerType  = reflect.TypeOf((*UpstreamServiceServer)(nil)).Elem()
	upstreamServiceHandlerType = reflect.TypeOf((*UpstreamServiceHandler)(nil)).Elem()
)

// UpstreamServiceClientType .
func UpstreamServiceClientType() reflect.Type { return upstreamServiceClientType }

// UpstreamServiceServerType .
func UpstreamServiceServerType() reflect.Type { return upstreamServiceServerType }

// UpstreamServiceHandlerType .
func UpstreamServiceHandlerType() reflect.Type { return upstreamServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		upstreamServiceClientType,
		// server types
		upstreamServiceServerType,
		// handler types
		upstreamServiceHandlerType,
	}
}
