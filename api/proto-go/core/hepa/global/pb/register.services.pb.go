// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: global.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterGlobalServiceImp global.proto
func RegisterGlobalServiceImp(regester transport.Register, srv GlobalServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterGlobalServiceHandler(regester, GlobalServiceHandler(srv), _ops.HTTP...)
	RegisterGlobalServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.hepa.global.GlobalService",
	)
}

var (
	globalServiceClientType  = reflect.TypeOf((*GlobalServiceClient)(nil)).Elem()
	globalServiceServerType  = reflect.TypeOf((*GlobalServiceServer)(nil)).Elem()
	globalServiceHandlerType = reflect.TypeOf((*GlobalServiceHandler)(nil)).Elem()
)

// GlobalServiceClientType .
func GlobalServiceClientType() reflect.Type { return globalServiceClientType }

// GlobalServiceServerType .
func GlobalServiceServerType() reflect.Type { return globalServiceServerType }

// GlobalServiceHandlerType .
func GlobalServiceHandlerType() reflect.Type { return globalServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		globalServiceClientType,
		// server types
		globalServiceServerType,
		// handler types
		globalServiceHandlerType,
	}
}
