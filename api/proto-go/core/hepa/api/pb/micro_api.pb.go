// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: micro_api.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	pb "github.com/erda-project/erda-proto-go/core/hepa/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeleteApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId string `protobuf:"bytes,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
}

func (x *DeleteApiRequest) Reset() {
	*x = DeleteApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiRequest) ProtoMessage() {}

func (x *DeleteApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiRequest) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteApiRequest) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

type DeleteApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data bool `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteApiResponse) Reset() {
	*x = DeleteApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiResponse) ProtoMessage() {}

func (x *DeleteApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiResponse.ProtoReflect.Descriptor instead.
func (*DeleteApiResponse) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteApiResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type ApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path           string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Method         string   `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	RedirectType   string   `protobuf:"bytes,3,opt,name=redirectType,proto3" json:"redirectType,omitempty"`
	RedirectAddr   string   `protobuf:"bytes,4,opt,name=redirectAddr,proto3" json:"redirectAddr,omitempty"`
	RedirectPath   string   `protobuf:"bytes,5,opt,name=redirectPath,proto3" json:"redirectPath,omitempty"`
	Hosts          []string `protobuf:"bytes,6,rep,name=hosts,proto3" json:"hosts,omitempty"`
	ProjectId      string   `protobuf:"bytes,7,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Description    string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	DiceApp        string   `protobuf:"bytes,9,opt,name=diceApp,proto3" json:"diceApp,omitempty"`
	DiceService    string   `protobuf:"bytes,10,opt,name=diceService,proto3" json:"diceService,omitempty"`
	OuterNetEnable bool     `protobuf:"varint,11,opt,name=outerNetEnable,proto3" json:"outerNetEnable,omitempty"`
	RuntimeId      string   `protobuf:"bytes,12,opt,name=runtimeId,proto3" json:"runtimeId,omitempty"`
	Env            string   `protobuf:"bytes,13,opt,name=env,proto3" json:"env,omitempty"`
	Policies       []string `protobuf:"bytes,14,rep,name=policies,proto3" json:"policies,omitempty"`
	ConsumerId     string   `protobuf:"bytes,15,opt,name=consumerId,proto3" json:"consumerId,omitempty"`
}

func (x *ApiRequest) Reset() {
	*x = ApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiRequest) ProtoMessage() {}

func (x *ApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiRequest.ProtoReflect.Descriptor instead.
func (*ApiRequest) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{2}
}

func (x *ApiRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiRequest) GetRedirectType() string {
	if x != nil {
		return x.RedirectType
	}
	return ""
}

func (x *ApiRequest) GetRedirectAddr() string {
	if x != nil {
		return x.RedirectAddr
	}
	return ""
}

func (x *ApiRequest) GetRedirectPath() string {
	if x != nil {
		return x.RedirectPath
	}
	return ""
}

func (x *ApiRequest) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ApiRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ApiRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApiRequest) GetDiceApp() string {
	if x != nil {
		return x.DiceApp
	}
	return ""
}

func (x *ApiRequest) GetDiceService() string {
	if x != nil {
		return x.DiceService
	}
	return ""
}

func (x *ApiRequest) GetOuterNetEnable() bool {
	if x != nil {
		return x.OuterNetEnable
	}
	return false
}

func (x *ApiRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ApiRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ApiRequest) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *ApiRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type UpdateApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiRequest *ApiRequest `protobuf:"bytes,1,opt,name=apiRequest,proto3" json:"apiRequest,omitempty"`
	ApiId      string      `protobuf:"bytes,2,opt,name=apiId,proto3" json:"apiId,omitempty"`
}

func (x *UpdateApiRequest) Reset() {
	*x = UpdateApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiRequest) ProtoMessage() {}

func (x *UpdateApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiRequest) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateApiRequest) GetApiRequest() *ApiRequest {
	if x != nil {
		return x.ApiRequest
	}
	return nil
}

func (x *UpdateApiRequest) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    string                     `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	PolicyId    string                     `protobuf:"bytes,2,opt,name=policyId,proto3" json:"policyId,omitempty"`
	PolicyName  string                     `protobuf:"bytes,3,opt,name=policyName,proto3" json:"policyName,omitempty"`
	DisplayName string                     `protobuf:"bytes,4,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Config      map[string]*structpb.Value `protobuf:"bytes,5,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateAt    string                     `protobuf:"bytes,6,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{4}
}

func (x *Policy) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Policy) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *Policy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Policy) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Policy) GetConfig() map[string]*structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Policy) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type UpdateApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId             string          `protobuf:"bytes,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
	Path              string          `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	DisplayPath       string          `protobuf:"bytes,3,opt,name=displayPath,proto3" json:"displayPath,omitempty"`
	DisplayPathPrefix *structpb.Value `protobuf:"bytes,4,opt,name=displayPathPrefix,proto3" json:"displayPathPrefix,omitempty"`
	OuterNetEnable    bool            `protobuf:"varint,5,opt,name=outerNetEnable,proto3" json:"outerNetEnable,omitempty"`
	RegisterType      string          `protobuf:"bytes,6,opt,name=registerType,proto3" json:"registerType,omitempty"`
	NeedAuth          bool            `protobuf:"varint,7,opt,name=needAuth,proto3" json:"needAuth,omitempty"`
	Method            *structpb.Value `protobuf:"bytes,8,opt,name=method,proto3" json:"method,omitempty"`
	Description       string          `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	RedirectAddr      string          `protobuf:"bytes,10,opt,name=redirectAddr,proto3" json:"redirectAddr,omitempty"`
	RedirectPath      string          `protobuf:"bytes,11,opt,name=redirectPath,proto3" json:"redirectPath,omitempty"`
	RedirectType      string          `protobuf:"bytes,12,opt,name=redirectType,proto3" json:"redirectType,omitempty"`
	MonitorPath       string          `protobuf:"bytes,13,opt,name=monitorPath,proto3" json:"monitorPath,omitempty"`
	CreateAt          string          `protobuf:"bytes,14,opt,name=createAt,proto3" json:"createAt,omitempty"`
	Policies          []*Policy       `protobuf:"bytes,15,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *UpdateApiResponse) Reset() {
	*x = UpdateApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiResponse) ProtoMessage() {}

func (x *UpdateApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiResponse.ProtoReflect.Descriptor instead.
func (*UpdateApiResponse) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateApiResponse) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *UpdateApiResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateApiResponse) GetDisplayPath() string {
	if x != nil {
		return x.DisplayPath
	}
	return ""
}

func (x *UpdateApiResponse) GetDisplayPathPrefix() *structpb.Value {
	if x != nil {
		return x.DisplayPathPrefix
	}
	return nil
}

func (x *UpdateApiResponse) GetOuterNetEnable() bool {
	if x != nil {
		return x.OuterNetEnable
	}
	return false
}

func (x *UpdateApiResponse) GetRegisterType() string {
	if x != nil {
		return x.RegisterType
	}
	return ""
}

func (x *UpdateApiResponse) GetNeedAuth() bool {
	if x != nil {
		return x.NeedAuth
	}
	return false
}

func (x *UpdateApiResponse) GetMethod() *structpb.Value {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *UpdateApiResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateApiResponse) GetRedirectAddr() string {
	if x != nil {
		return x.RedirectAddr
	}
	return ""
}

func (x *UpdateApiResponse) GetRedirectPath() string {
	if x != nil {
		return x.RedirectPath
	}
	return ""
}

func (x *UpdateApiResponse) GetRedirectType() string {
	if x != nil {
		return x.RedirectType
	}
	return ""
}

func (x *UpdateApiResponse) GetMonitorPath() string {
	if x != nil {
		return x.MonitorPath
	}
	return ""
}

func (x *UpdateApiResponse) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *UpdateApiResponse) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type GetApisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Method       string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	DiceApp      string `protobuf:"bytes,3,opt,name=diceApp,proto3" json:"diceApp,omitempty"`
	DiceService  string `protobuf:"bytes,4,opt,name=diceService,proto3" json:"diceService,omitempty"`
	RuntimeId    string `protobuf:"bytes,5,opt,name=runtimeId,proto3" json:"runtimeId,omitempty"`
	ApiPath      string `protobuf:"bytes,6,opt,name=apiPath,proto3" json:"apiPath,omitempty"`
	RegisterType string `protobuf:"bytes,7,opt,name=registerType,proto3" json:"registerType,omitempty"`
	NetType      string `protobuf:"bytes,8,opt,name=netType,proto3" json:"netType,omitempty"`
	NeedAuth     int32  `protobuf:"varint,9,opt,name=needAuth,proto3" json:"needAuth,omitempty"`
	SortField    string `protobuf:"bytes,10,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortType     string `protobuf:"bytes,11,opt,name=sortType,proto3" json:"sortType,omitempty"`
	OrgId        string `protobuf:"bytes,12,opt,name=orgId,proto3" json:"orgId,omitempty"`
	ProjectId    string `protobuf:"bytes,13,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Env          string `protobuf:"bytes,14,opt,name=env,proto3" json:"env,omitempty"`
	Page         int64  `protobuf:"varint,15,opt,name=page,proto3" json:"page,omitempty"`
	Size         int64  `protobuf:"varint,16,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetApisRequest) Reset() {
	*x = GetApisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApisRequest) ProtoMessage() {}

func (x *GetApisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApisRequest.ProtoReflect.Descriptor instead.
func (*GetApisRequest) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetApisRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetApisRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GetApisRequest) GetDiceApp() string {
	if x != nil {
		return x.DiceApp
	}
	return ""
}

func (x *GetApisRequest) GetDiceService() string {
	if x != nil {
		return x.DiceService
	}
	return ""
}

func (x *GetApisRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *GetApisRequest) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *GetApisRequest) GetRegisterType() string {
	if x != nil {
		return x.RegisterType
	}
	return ""
}

func (x *GetApisRequest) GetNetType() string {
	if x != nil {
		return x.NetType
	}
	return ""
}

func (x *GetApisRequest) GetNeedAuth() int32 {
	if x != nil {
		return x.NeedAuth
	}
	return 0
}

func (x *GetApisRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *GetApisRequest) GetSortType() string {
	if x != nil {
		return x.SortType
	}
	return ""
}

func (x *GetApisRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetApisRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetApisRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetApisRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetApisRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetApisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *pb.PageResult `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetApisResponse) Reset() {
	*x = GetApisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApisResponse) ProtoMessage() {}

func (x *GetApisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApisResponse.ProtoReflect.Descriptor instead.
func (*GetApisResponse) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetApisResponse) GetData() *pb.PageResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateApiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiRequest *ApiRequest `protobuf:"bytes,1,opt,name=apiRequest,proto3" json:"apiRequest,omitempty"`
}

func (x *CreateApiRequest) Reset() {
	*x = CreateApiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiRequest) ProtoMessage() {}

func (x *CreateApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiRequest.ProtoReflect.Descriptor instead.
func (*CreateApiRequest) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{8}
}

func (x *CreateApiRequest) GetApiRequest() *ApiRequest {
	if x != nil {
		return x.ApiRequest
	}
	return nil
}

type CreateApiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId string `protobuf:"bytes,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
}

func (x *CreateApiResponse) Reset() {
	*x = CreateApiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_micro_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiResponse) ProtoMessage() {}

func (x *CreateApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_micro_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiResponse.ProtoReflect.Descriptor instead.
func (*CreateApiResponse) Descriptor() ([]byte, []int) {
	return file_micro_api_proto_rawDescGZIP(), []int{9}
}

func (x *CreateApiResponse) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

var File_micro_api_proto protoreflect.FileDescriptor

var file_micro_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x65, 0x70, 0x61, 0x2f, 0x68, 0x65, 0x70,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49,
	0x64, 0x22, 0x27, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x03, 0x0a, 0x0a, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x63, 0x65, 0x41,
	0x70, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x63, 0x65, 0x41, 0x70,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x4e, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x61,
	0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49,
	0x64, 0x22, 0xb1, 0x02, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x1a, 0x51, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x04, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x65, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0xb2, 0x03, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x63, 0x65,
	0x41, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x63, 0x65, 0x41,
	0x70, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65,
	0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65,
	0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x41,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x52, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64,
	0x32, 0xa5, 0x06, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x91, 0x03, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xb5, 0x02, 0x12, 0xb2,
	0x02, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x3f, 0x66, 0x72, 0x6f, 0x6d, 0x3d, 0x7b, 0x66, 0x72, 0x6f, 0x6d, 0x7d, 0x26, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x3d, 0x7b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x7d, 0x26, 0x64, 0x69,
	0x63, 0x65, 0x41, 0x70, 0x70, 0x3d, 0x7b, 0x64, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x7d, 0x26,
	0x64, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3d, 0x7b, 0x64, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x7d, 0x26, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x3d, 0x7b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x7d, 0x26,
	0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x3d, 0x7b, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x7d, 0x26, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x7b,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x26, 0x6e, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x7b, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x26,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3d, 0x7b, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x7d, 0x26, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3d, 0x7b,
	0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x26, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x3d,
	0x7b, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x7d, 0x26, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x3d, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x7d, 0x26, 0x65, 0x6e,
	0x76, 0x3d, 0x7b, 0x65, 0x6e, 0x76, 0x7d, 0x26, 0x70, 0x61, 0x67, 0x65, 0x3d, 0x7b, 0x70, 0x61,
	0x67, 0x65, 0x7d, 0x26, 0x73, 0x69, 0x7a, 0x65, 0x3d, 0x7b, 0x73, 0x69, 0x7a, 0x65, 0x7d, 0x26,
	0x6e, 0x65, 0x65, 0x64, 0x41, 0x75, 0x74, 0x68, 0x3d, 0x7b, 0x6e, 0x65, 0x65, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x7d, 0x12, 0x7e, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x12, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x3a, 0x0a, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65,
	0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x32, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7b, 0x61, 0x70, 0x69, 0x49, 0x64, 0x7d,
	0x3a, 0x0a, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x68, 0x65, 0x70, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x7b, 0x61, 0x70, 0x69, 0x49, 0x64, 0x7d, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x68, 0x65, 0x70, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_micro_api_proto_rawDescOnce sync.Once
	file_micro_api_proto_rawDescData = file_micro_api_proto_rawDesc
)

func file_micro_api_proto_rawDescGZIP() []byte {
	file_micro_api_proto_rawDescOnce.Do(func() {
		file_micro_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_micro_api_proto_rawDescData)
	})
	return file_micro_api_proto_rawDescData
}

var file_micro_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_micro_api_proto_goTypes = []interface{}{
	(*DeleteApiRequest)(nil),  // 0: erda.core.hepa.api.DeleteApiRequest
	(*DeleteApiResponse)(nil), // 1: erda.core.hepa.api.DeleteApiResponse
	(*ApiRequest)(nil),        // 2: erda.core.hepa.api.ApiRequest
	(*UpdateApiRequest)(nil),  // 3: erda.core.hepa.api.UpdateApiRequest
	(*Policy)(nil),            // 4: erda.core.hepa.api.Policy
	(*UpdateApiResponse)(nil), // 5: erda.core.hepa.api.UpdateApiResponse
	(*GetApisRequest)(nil),    // 6: erda.core.hepa.api.GetApisRequest
	(*GetApisResponse)(nil),   // 7: erda.core.hepa.api.GetApisResponse
	(*CreateApiRequest)(nil),  // 8: erda.core.hepa.api.CreateApiRequest
	(*CreateApiResponse)(nil), // 9: erda.core.hepa.api.CreateApiResponse
	nil,                       // 10: erda.core.hepa.api.Policy.ConfigEntry
	(*structpb.Value)(nil),    // 11: google.protobuf.Value
	(*pb.PageResult)(nil),     // 12: erda.core.hepa.PageResult
}
var file_micro_api_proto_depIdxs = []int32{
	2,  // 0: erda.core.hepa.api.UpdateApiRequest.apiRequest:type_name -> erda.core.hepa.api.ApiRequest
	10, // 1: erda.core.hepa.api.Policy.config:type_name -> erda.core.hepa.api.Policy.ConfigEntry
	11, // 2: erda.core.hepa.api.UpdateApiResponse.displayPathPrefix:type_name -> google.protobuf.Value
	11, // 3: erda.core.hepa.api.UpdateApiResponse.method:type_name -> google.protobuf.Value
	4,  // 4: erda.core.hepa.api.UpdateApiResponse.policies:type_name -> erda.core.hepa.api.Policy
	12, // 5: erda.core.hepa.api.GetApisResponse.data:type_name -> erda.core.hepa.PageResult
	2,  // 6: erda.core.hepa.api.CreateApiRequest.apiRequest:type_name -> erda.core.hepa.api.ApiRequest
	11, // 7: erda.core.hepa.api.Policy.ConfigEntry.value:type_name -> google.protobuf.Value
	6,  // 8: erda.core.hepa.api.ApiService.GetApis:input_type -> erda.core.hepa.api.GetApisRequest
	8,  // 9: erda.core.hepa.api.ApiService.CreateApi:input_type -> erda.core.hepa.api.CreateApiRequest
	3,  // 10: erda.core.hepa.api.ApiService.UpdateApi:input_type -> erda.core.hepa.api.UpdateApiRequest
	0,  // 11: erda.core.hepa.api.ApiService.DeleteApi:input_type -> erda.core.hepa.api.DeleteApiRequest
	7,  // 12: erda.core.hepa.api.ApiService.GetApis:output_type -> erda.core.hepa.api.GetApisResponse
	9,  // 13: erda.core.hepa.api.ApiService.CreateApi:output_type -> erda.core.hepa.api.CreateApiResponse
	5,  // 14: erda.core.hepa.api.ApiService.UpdateApi:output_type -> erda.core.hepa.api.UpdateApiResponse
	1,  // 15: erda.core.hepa.api.ApiService.DeleteApi:output_type -> erda.core.hepa.api.DeleteApiResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_micro_api_proto_init() }
func file_micro_api_proto_init() {
	if File_micro_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_micro_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_micro_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_micro_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_micro_api_proto_goTypes,
		DependencyIndexes: file_micro_api_proto_depIdxs,
		MessageInfos:      file_micro_api_proto_msgTypes,
	}.Build()
	File_micro_api_proto = out.File
	file_micro_api_proto_rawDesc = nil
	file_micro_api_proto_goTypes = nil
	file_micro_api_proto_depIdxs = nil
}
