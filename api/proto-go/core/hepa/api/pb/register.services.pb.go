// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: micro_api.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterApiServiceImp micro_api.proto
func RegisterApiServiceImp(regester transport.Register, srv ApiServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterApiServiceHandler(regester, ApiServiceHandler(srv), _ops.HTTP...)
	RegisterApiServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.hepa.api.ApiService",
	)
}

var (
	apiServiceClientType  = reflect.TypeOf((*ApiServiceClient)(nil)).Elem()
	apiServiceServerType  = reflect.TypeOf((*ApiServiceServer)(nil)).Elem()
	apiServiceHandlerType = reflect.TypeOf((*ApiServiceHandler)(nil)).Elem()
)

// ApiServiceClientType .
func ApiServiceClientType() reflect.Type { return apiServiceClientType }

// ApiServiceServerType .
func ApiServiceServerType() reflect.Type { return apiServiceServerType }

// ApiServiceHandlerType .
func ApiServiceHandlerType() reflect.Type { return apiServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		apiServiceClientType,
		// server types
		apiServiceServerType,
		// handler types
		apiServiceHandlerType,
	}
}
