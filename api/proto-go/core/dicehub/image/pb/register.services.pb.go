// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: image.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterImageServiceImp image.proto
func RegisterImageServiceImp(regester transport.Register, srv ImageServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterImageServiceHandler(regester, ImageServiceHandler(srv), _ops.HTTP...)
	RegisterImageServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.dicehub.image.ImageService",
	)
}

var (
	imageServiceClientType  = reflect.TypeOf((*ImageServiceClient)(nil)).Elem()
	imageServiceServerType  = reflect.TypeOf((*ImageServiceServer)(nil)).Elem()
	imageServiceHandlerType = reflect.TypeOf((*ImageServiceHandler)(nil)).Elem()
)

// ImageServiceClientType .
func ImageServiceClientType() reflect.Type { return imageServiceClientType }

// ImageServiceServerType .
func ImageServiceServerType() reflect.Type { return imageServiceServerType }

// ImageServiceHandlerType .
func ImageServiceHandlerType() reflect.Type { return imageServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		imageServiceClientType,
		// server types
		imageServiceServerType,
		// handler types
		imageServiceHandlerType,
	}
}
