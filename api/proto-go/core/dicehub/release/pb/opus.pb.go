// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: opus.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	pb "github.com/erda-project/erda-proto-go/common/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutOnArtifactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID         uint32 `protobuf:"varint,1,opt,name=orgID,proto3" json:"orgID,omitempty"`
	OrgName       string `protobuf:"bytes,2,opt,name=orgName,proto3" json:"orgName,omitempty"`
	UserID        string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	OpusID        string `protobuf:"bytes,4,opt,name=opusID,proto3" json:"opusID,omitempty"`
	OpusVersionID string `protobuf:"bytes,5,opt,name=opusVersionID,proto3" json:"opusVersionID,omitempty"`
	ReleaseID     string `protobuf:"bytes,6,opt,name=releaseID,proto3" json:"releaseID,omitempty"`
}

func (x *PutOnArtifactsReq) Reset() {
	*x = PutOnArtifactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOnArtifactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOnArtifactsReq) ProtoMessage() {}

func (x *PutOnArtifactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_opus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOnArtifactsReq.ProtoReflect.Descriptor instead.
func (*PutOnArtifactsReq) Descriptor() ([]byte, []int) {
	return file_opus_proto_rawDescGZIP(), []int{0}
}

func (x *PutOnArtifactsReq) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *PutOnArtifactsReq) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *PutOnArtifactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PutOnArtifactsReq) GetOpusID() string {
	if x != nil {
		return x.OpusID
	}
	return ""
}

func (x *PutOnArtifactsReq) GetOpusVersionID() string {
	if x != nil {
		return x.OpusVersionID
	}
	return ""
}

func (x *PutOnArtifactsReq) GetReleaseID() string {
	if x != nil {
		return x.ReleaseID
	}
	return ""
}

type PutOffArtifactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID     uint32 `protobuf:"varint,1,opt,name=orgID,proto3" json:"orgID,omitempty"`
	UserID    string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ReleaseID string `protobuf:"bytes,3,opt,name=releaseID,proto3" json:"releaseID,omitempty"`
}

func (x *PutOffArtifactsReq) Reset() {
	*x = PutOffArtifactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOffArtifactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOffArtifactsReq) ProtoMessage() {}

func (x *PutOffArtifactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_opus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOffArtifactsReq.ProtoReflect.Descriptor instead.
func (*PutOffArtifactsReq) Descriptor() ([]byte, []int) {
	return file_opus_proto_rawDescGZIP(), []int{1}
}

func (x *PutOffArtifactsReq) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *PutOffArtifactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PutOffArtifactsReq) GetReleaseID() string {
	if x != nil {
		return x.ReleaseID
	}
	return ""
}

type ListArtifactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID      uint32   `protobuf:"varint,1,opt,name=orgID,proto3" json:"orgID,omitempty"`
	UserID     string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ReleaseIDs []string `protobuf:"bytes,3,rep,name=releaseIDs,proto3" json:"releaseIDs,omitempty"`
	PageNo     int32    `protobuf:"varint,4,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize   int32    `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListArtifactsReq) Reset() {
	*x = ListArtifactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsReq) ProtoMessage() {}

func (x *ListArtifactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_opus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsReq.ProtoReflect.Descriptor instead.
func (*ListArtifactsReq) Descriptor() ([]byte, []int) {
	return file_opus_proto_rawDescGZIP(), []int{2}
}

func (x *ListArtifactsReq) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *ListArtifactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ListArtifactsReq) GetReleaseIDs() []string {
	if x != nil {
		return x.ReleaseIDs
	}
	return nil
}

func (x *ListArtifactsReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListArtifactsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListArtifactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  map[string]*ListArtifactsRespItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListArtifactsResp) Reset() {
	*x = ListArtifactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsResp) ProtoMessage() {}

func (x *ListArtifactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_opus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsResp.ProtoReflect.Descriptor instead.
func (*ListArtifactsResp) Descriptor() ([]byte, []int) {
	return file_opus_proto_rawDescGZIP(), []int{3}
}

func (x *ListArtifactsResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListArtifactsResp) GetData() map[string]*ListArtifactsRespItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListArtifactsRespItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpusID        string `protobuf:"bytes,1,opt,name=opusID,proto3" json:"opusID,omitempty"`
	OpusVersionID string `protobuf:"bytes,2,opt,name=opusVersionID,proto3" json:"opusVersionID,omitempty"`
	ReleaseID     string `protobuf:"bytes,3,opt,name=releaseID,proto3" json:"releaseID,omitempty"`
}

func (x *ListArtifactsRespItem) Reset() {
	*x = ListArtifactsRespItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArtifactsRespItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtifactsRespItem) ProtoMessage() {}

func (x *ListArtifactsRespItem) ProtoReflect() protoreflect.Message {
	mi := &file_opus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtifactsRespItem.ProtoReflect.Descriptor instead.
func (*ListArtifactsRespItem) Descriptor() ([]byte, []int) {
	return file_opus_proto_rawDescGZIP(), []int{4}
}

func (x *ListArtifactsRespItem) GetOpusID() string {
	if x != nil {
		return x.OpusID
	}
	return ""
}

func (x *ListArtifactsRespItem) GetOpusVersionID() string {
	if x != nil {
		return x.OpusVersionID
	}
	return ""
}

func (x *ListArtifactsRespItem) GetReleaseID() string {
	if x != nil {
		return x.ReleaseID
	}
	return ""
}

var File_opus_proto protoreflect.FileDescriptor

var file_opus_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6f, 0x70, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb7, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x75, 0x73, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x75, 0x73, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x75, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70,
	0x75, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x12, 0x50, 0x75, 0x74,
	0x4f, 0x66, 0x66, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62,
	0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x69, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x75, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x75, 0x73, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x75, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x70, 0x75, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x44, 0x32, 0xc6, 0x02, 0x0a, 0x04, 0x4f,
	0x70, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e,
	0x50, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x69, 0x63,
	0x65, 0x68, 0x75, 0x62, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75,
	0x62, 0x2e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x1a, 0x14, 0xc2,
	0xc4, 0xcb, 0x1c, 0x0f, 0x22, 0x07, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62, 0x32, 0x04, 0x10,
	0x01, 0x20, 0x01, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65,
	0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x64, 0x69, 0x63, 0x65, 0x68, 0x75, 0x62, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opus_proto_rawDescOnce sync.Once
	file_opus_proto_rawDescData = file_opus_proto_rawDesc
)

func file_opus_proto_rawDescGZIP() []byte {
	file_opus_proto_rawDescOnce.Do(func() {
		file_opus_proto_rawDescData = protoimpl.X.CompressGZIP(file_opus_proto_rawDescData)
	})
	return file_opus_proto_rawDescData
}

var file_opus_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_opus_proto_goTypes = []interface{}{
	(*PutOnArtifactsReq)(nil),     // 0: erda.core.dicehub.release.PutOnArtifactsReq
	(*PutOffArtifactsReq)(nil),    // 1: erda.core.dicehub.release.PutOffArtifactsReq
	(*ListArtifactsReq)(nil),      // 2: erda.core.dicehub.release.ListArtifactsReq
	(*ListArtifactsResp)(nil),     // 3: erda.core.dicehub.release.ListArtifactsResp
	(*ListArtifactsRespItem)(nil), // 4: erda.core.dicehub.release.ListArtifactsRespItem
	nil,                           // 5: erda.core.dicehub.release.ListArtifactsResp.DataEntry
	(*pb.VoidResponse)(nil),       // 6: erda.common.VoidResponse
}
var file_opus_proto_depIdxs = []int32{
	5, // 0: erda.core.dicehub.release.ListArtifactsResp.data:type_name -> erda.core.dicehub.release.ListArtifactsResp.DataEntry
	4, // 1: erda.core.dicehub.release.ListArtifactsResp.DataEntry.value:type_name -> erda.core.dicehub.release.ListArtifactsRespItem
	0, // 2: erda.core.dicehub.release.Opus.PutOnArtifacts:input_type -> erda.core.dicehub.release.PutOnArtifactsReq
	1, // 3: erda.core.dicehub.release.Opus.PutOffArtifacts:input_type -> erda.core.dicehub.release.PutOffArtifactsReq
	2, // 4: erda.core.dicehub.release.Opus.ListArtifacts:input_type -> erda.core.dicehub.release.ListArtifactsReq
	6, // 5: erda.core.dicehub.release.Opus.PutOnArtifacts:output_type -> erda.common.VoidResponse
	6, // 6: erda.core.dicehub.release.Opus.PutOffArtifacts:output_type -> erda.common.VoidResponse
	3, // 7: erda.core.dicehub.release.Opus.ListArtifacts:output_type -> erda.core.dicehub.release.ListArtifactsResp
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_opus_proto_init() }
func file_opus_proto_init() {
	if File_opus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOnArtifactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOffArtifactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArtifactsRespItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_opus_proto_goTypes,
		DependencyIndexes: file_opus_proto_depIdxs,
		MessageInfos:      file_opus_proto_msgTypes,
	}.Build()
	File_opus_proto = out.File
	file_opus_proto_rawDesc = nil
	file_opus_proto_goTypes = nil
	file_opus_proto_depIdxs = nil
}
