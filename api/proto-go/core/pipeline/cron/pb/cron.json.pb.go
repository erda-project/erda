// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: cron.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*CronPagingRequest)(nil)
var _ json.Unmarshaler = (*CronPagingRequest)(nil)
var _ json.Marshaler = (*CronPagingResponse)(nil)
var _ json.Unmarshaler = (*CronPagingResponse)(nil)
var _ json.Marshaler = (*CronStartRequest)(nil)
var _ json.Unmarshaler = (*CronStartRequest)(nil)
var _ json.Marshaler = (*CronStartResponse)(nil)
var _ json.Unmarshaler = (*CronStartResponse)(nil)
var _ json.Marshaler = (*CronStopRequest)(nil)
var _ json.Unmarshaler = (*CronStopRequest)(nil)
var _ json.Marshaler = (*CronStopResponse)(nil)
var _ json.Unmarshaler = (*CronStopResponse)(nil)
var _ json.Marshaler = (*CronCreateRequest)(nil)
var _ json.Unmarshaler = (*CronCreateRequest)(nil)
var _ json.Marshaler = (*CronCreateResponse)(nil)
var _ json.Unmarshaler = (*CronCreateResponse)(nil)
var _ json.Marshaler = (*CronDeleteRequest)(nil)
var _ json.Unmarshaler = (*CronDeleteRequest)(nil)
var _ json.Marshaler = (*CronDeleteResponse)(nil)
var _ json.Unmarshaler = (*CronDeleteResponse)(nil)
var _ json.Marshaler = (*CronGetRequest)(nil)
var _ json.Unmarshaler = (*CronGetRequest)(nil)
var _ json.Marshaler = (*CronGetResponse)(nil)
var _ json.Unmarshaler = (*CronGetResponse)(nil)
var _ json.Marshaler = (*CronUpdateRequest)(nil)
var _ json.Unmarshaler = (*CronUpdateRequest)(nil)
var _ json.Marshaler = (*CronUpdateResponse)(nil)
var _ json.Unmarshaler = (*CronUpdateResponse)(nil)

// CronPagingRequest implement json.Marshaler.
func (m *CronPagingRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronPagingRequest implement json.Marshaler.
func (m *CronPagingRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronPagingResponse implement json.Marshaler.
func (m *CronPagingResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronPagingResponse implement json.Marshaler.
func (m *CronPagingResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronStartRequest implement json.Marshaler.
func (m *CronStartRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronStartRequest implement json.Marshaler.
func (m *CronStartRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronStartResponse implement json.Marshaler.
func (m *CronStartResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronStartResponse implement json.Marshaler.
func (m *CronStartResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronStopRequest implement json.Marshaler.
func (m *CronStopRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronStopRequest implement json.Marshaler.
func (m *CronStopRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronStopResponse implement json.Marshaler.
func (m *CronStopResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronStopResponse implement json.Marshaler.
func (m *CronStopResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronCreateRequest implement json.Marshaler.
func (m *CronCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronCreateRequest implement json.Marshaler.
func (m *CronCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronCreateResponse implement json.Marshaler.
func (m *CronCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronCreateResponse implement json.Marshaler.
func (m *CronCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronDeleteRequest implement json.Marshaler.
func (m *CronDeleteRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronDeleteRequest implement json.Marshaler.
func (m *CronDeleteRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronDeleteResponse implement json.Marshaler.
func (m *CronDeleteResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronDeleteResponse implement json.Marshaler.
func (m *CronDeleteResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronGetRequest implement json.Marshaler.
func (m *CronGetRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronGetRequest implement json.Marshaler.
func (m *CronGetRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronGetResponse implement json.Marshaler.
func (m *CronGetResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronGetResponse implement json.Marshaler.
func (m *CronGetResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronUpdateRequest implement json.Marshaler.
func (m *CronUpdateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronUpdateRequest implement json.Marshaler.
func (m *CronUpdateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CronUpdateResponse implement json.Marshaler.
func (m *CronUpdateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CronUpdateResponse implement json.Marshaler.
func (m *CronUpdateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
