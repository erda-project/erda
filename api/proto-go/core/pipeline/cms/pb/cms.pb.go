// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: cms.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PipelineCmsNs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineSource string                 `protobuf:"bytes,1,opt,name=pipeline_source,json=pipelineSource,proto3" json:"pipeline_source,omitempty"`
	Ns             string                 `protobuf:"bytes,2,opt,name=ns,proto3" json:"ns,omitempty"`
	TimeCreated    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
}

func (x *PipelineCmsNs) Reset() {
	*x = PipelineCmsNs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCmsNs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCmsNs) ProtoMessage() {}

func (x *PipelineCmsNs) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCmsNs.ProtoReflect.Descriptor instead.
func (*PipelineCmsNs) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{0}
}

func (x *PipelineCmsNs) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *PipelineCmsNs) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *PipelineCmsNs) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *PipelineCmsNs) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

type PipelineCmsConfigValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value
	// - when updating, Value is realValue;
	// - when getting, if Decrypt=true, Value=decrypt(dbValue); if Decrypt=false, Value=dbValue
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// EncryptInDB means whether encrypt in db
	EncryptInDB bool `protobuf:"varint,2,opt,name=encryptInDB,proto3" json:"encryptInDB,omitempty"`
	// Type
	// - if not specified, default type is `kv`;
	// - if type is `dice-file`, value is uuid of `dice-file`.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Operations config operations
	// if nil, use default operations according to type
	Operations *PipelineCmsConfigOperations `protobuf:"bytes,4,opt,name=operations,proto3" json:"operations,omitempty"`
	// Comment
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// From represents where the config comes from. Optional.
	From string `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	// no need to provide these fields when creating or updating.
	TimeCreated *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
}

func (x *PipelineCmsConfigValue) Reset() {
	*x = PipelineCmsConfigValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCmsConfigValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCmsConfigValue) ProtoMessage() {}

func (x *PipelineCmsConfigValue) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCmsConfigValue.ProtoReflect.Descriptor instead.
func (*PipelineCmsConfigValue) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{1}
}

func (x *PipelineCmsConfigValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PipelineCmsConfigValue) GetEncryptInDB() bool {
	if x != nil {
		return x.EncryptInDB
	}
	return false
}

func (x *PipelineCmsConfigValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PipelineCmsConfigValue) GetOperations() *PipelineCmsConfigOperations {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *PipelineCmsConfigValue) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PipelineCmsConfigValue) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PipelineCmsConfigValue) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *PipelineCmsConfigValue) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

type PipelineCmsConfigOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanDownload bool `protobuf:"varint,1,opt,name=canDownload,proto3" json:"canDownload,omitempty"`
	CanEdit     bool `protobuf:"varint,2,opt,name=canEdit,proto3" json:"canEdit,omitempty"`
	// can_delete only take affect when deleting a single config.
	// If you delete ns, all configs will be deleted.
	CanDelete bool `protobuf:"varint,3,opt,name=canDelete,proto3" json:"canDelete,omitempty"`
}

func (x *PipelineCmsConfigOperations) Reset() {
	*x = PipelineCmsConfigOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCmsConfigOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCmsConfigOperations) ProtoMessage() {}

func (x *PipelineCmsConfigOperations) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCmsConfigOperations.ProtoReflect.Descriptor instead.
func (*PipelineCmsConfigOperations) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{2}
}

func (x *PipelineCmsConfigOperations) GetCanDownload() bool {
	if x != nil {
		return x.CanDownload
	}
	return false
}

func (x *PipelineCmsConfigOperations) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *PipelineCmsConfigOperations) GetCanDelete() bool {
	if x != nil {
		return x.CanDelete
	}
	return false
}

type PipelineCmsConfigKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Decrypt            bool   `protobuf:"varint,2,opt,name=decrypt,proto3" json:"decrypt,omitempty"`
	ShowEncryptedValue bool   `protobuf:"varint,3,opt,name=showEncryptedValue,proto3" json:"showEncryptedValue,omitempty"` // whether to show original value which is encrypted
}

func (x *PipelineCmsConfigKey) Reset() {
	*x = PipelineCmsConfigKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCmsConfigKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCmsConfigKey) ProtoMessage() {}

func (x *PipelineCmsConfigKey) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCmsConfigKey.ProtoReflect.Descriptor instead.
func (*PipelineCmsConfigKey) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{3}
}

func (x *PipelineCmsConfigKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PipelineCmsConfigKey) GetDecrypt() bool {
	if x != nil {
		return x.Decrypt
	}
	return false
}

func (x *PipelineCmsConfigKey) GetShowEncryptedValue() bool {
	if x != nil {
		return x.ShowEncryptedValue
	}
	return false
}

type PipelineCmsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string                       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string                       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	EncryptInDB bool                         `protobuf:"varint,3,opt,name=encryptInDB,proto3" json:"encryptInDB,omitempty"`
	Type        string                       `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Operations  *PipelineCmsConfigOperations `protobuf:"bytes,5,opt,name=operations,proto3" json:"operations,omitempty"`
	Comment     string                       `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	From        string                       `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	TimeCreated *timestamppb.Timestamp       `protobuf:"bytes,8,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated *timestamppb.Timestamp       `protobuf:"bytes,9,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
}

func (x *PipelineCmsConfig) Reset() {
	*x = PipelineCmsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineCmsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineCmsConfig) ProtoMessage() {}

func (x *PipelineCmsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineCmsConfig.ProtoReflect.Descriptor instead.
func (*PipelineCmsConfig) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{4}
}

func (x *PipelineCmsConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PipelineCmsConfig) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PipelineCmsConfig) GetEncryptInDB() bool {
	if x != nil {
		return x.EncryptInDB
	}
	return false
}

func (x *PipelineCmsConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PipelineCmsConfig) GetOperations() *PipelineCmsConfigOperations {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *PipelineCmsConfig) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PipelineCmsConfig) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PipelineCmsConfig) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *PipelineCmsConfig) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

type CmsCreateNsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineSource string `protobuf:"bytes,1,opt,name=pipelineSource,proto3" json:"pipelineSource,omitempty"`
	Ns             string `protobuf:"bytes,2,opt,name=ns,proto3" json:"ns,omitempty"`
}

func (x *CmsCreateNsRequest) Reset() {
	*x = CmsCreateNsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsCreateNsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsCreateNsRequest) ProtoMessage() {}

func (x *CmsCreateNsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsCreateNsRequest.ProtoReflect.Descriptor instead.
func (*CmsCreateNsRequest) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{5}
}

func (x *CmsCreateNsRequest) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *CmsCreateNsRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

type CmsCreateNsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CmsCreateNsResponse) Reset() {
	*x = CmsCreateNsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsCreateNsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsCreateNsResponse) ProtoMessage() {}

func (x *CmsCreateNsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsCreateNsResponse.ProtoReflect.Descriptor instead.
func (*CmsCreateNsResponse) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{6}
}

type CmsListNsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineSource string `protobuf:"bytes,1,opt,name=pipelineSource,proto3" json:"pipelineSource,omitempty"`
	NsPrefix       string `protobuf:"bytes,2,opt,name=nsPrefix,proto3" json:"nsPrefix,omitempty"`
}

func (x *CmsListNsRequest) Reset() {
	*x = CmsListNsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsListNsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsListNsRequest) ProtoMessage() {}

func (x *CmsListNsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsListNsRequest.ProtoReflect.Descriptor instead.
func (*CmsListNsRequest) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{7}
}

func (x *CmsListNsRequest) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *CmsListNsRequest) GetNsPrefix() string {
	if x != nil {
		return x.NsPrefix
	}
	return ""
}

type CmsListNsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PipelineCmsNs `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CmsListNsResponse) Reset() {
	*x = CmsListNsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsListNsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsListNsResponse) ProtoMessage() {}

func (x *CmsListNsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsListNsResponse.ProtoReflect.Descriptor instead.
func (*CmsListNsResponse) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{8}
}

func (x *CmsListNsResponse) GetData() []*PipelineCmsNs {
	if x != nil {
		return x.Data
	}
	return nil
}

type CmsNsConfigsUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns             string                             `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	PipelineSource string                             `protobuf:"bytes,2,opt,name=pipeline_source,json=pipelineSource,proto3" json:"pipeline_source,omitempty"`
	KVs            map[string]*PipelineCmsConfigValue `protobuf:"bytes,3,rep,name=KVs,json=kvs,proto3" json:"KVs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CmsNsConfigsUpdateRequest) Reset() {
	*x = CmsNsConfigsUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsUpdateRequest) ProtoMessage() {}

func (x *CmsNsConfigsUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsUpdateRequest.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsUpdateRequest) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{9}
}

func (x *CmsNsConfigsUpdateRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *CmsNsConfigsUpdateRequest) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *CmsNsConfigsUpdateRequest) GetKVs() map[string]*PipelineCmsConfigValue {
	if x != nil {
		return x.KVs
	}
	return nil
}

type CmsNsConfigsUpdateV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns  string            `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	KVs map[string]string `protobuf:"bytes,2,rep,name=KVs,json=kvs,proto3" json:"KVs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CmsNsConfigsUpdateV1Request) Reset() {
	*x = CmsNsConfigsUpdateV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsUpdateV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsUpdateV1Request) ProtoMessage() {}

func (x *CmsNsConfigsUpdateV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsUpdateV1Request.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsUpdateV1Request) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{10}
}

func (x *CmsNsConfigsUpdateV1Request) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *CmsNsConfigsUpdateV1Request) GetKVs() map[string]string {
	if x != nil {
		return x.KVs
	}
	return nil
}

type CmsNsConfigsUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CmsNsConfigsUpdateResponse) Reset() {
	*x = CmsNsConfigsUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsUpdateResponse) ProtoMessage() {}

func (x *CmsNsConfigsUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsUpdateResponse.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsUpdateResponse) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{11}
}

type CmsNsConfigsDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns             string `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	PipelineSource string `protobuf:"bytes,2,opt,name=pipelineSource,proto3" json:"pipelineSource,omitempty"`
	// Use custom json_name option `deleteNS` for backward-compatible, like fdp.
	// Use field name `deleteNs` for a unified format with other message.
	DeleteNs    bool     `protobuf:"varint,3,opt,name=deleteNs,json=deleteNS,proto3" json:"deleteNs,omitempty"`
	DeleteForce bool     `protobuf:"varint,4,opt,name=deleteForce,proto3" json:"deleteForce,omitempty"`
	DeleteKeys  []string `protobuf:"bytes,5,rep,name=deleteKeys,proto3" json:"deleteKeys,omitempty"`
}

func (x *CmsNsConfigsDeleteRequest) Reset() {
	*x = CmsNsConfigsDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsDeleteRequest) ProtoMessage() {}

func (x *CmsNsConfigsDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsDeleteRequest.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsDeleteRequest) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{12}
}

func (x *CmsNsConfigsDeleteRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *CmsNsConfigsDeleteRequest) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *CmsNsConfigsDeleteRequest) GetDeleteNs() bool {
	if x != nil {
		return x.DeleteNs
	}
	return false
}

func (x *CmsNsConfigsDeleteRequest) GetDeleteForce() bool {
	if x != nil {
		return x.DeleteForce
	}
	return false
}

func (x *CmsNsConfigsDeleteRequest) GetDeleteKeys() []string {
	if x != nil {
		return x.DeleteKeys
	}
	return nil
}

type CmsNsConfigsDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CmsNsConfigsDeleteResponse) Reset() {
	*x = CmsNsConfigsDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsDeleteResponse) ProtoMessage() {}

func (x *CmsNsConfigsDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsDeleteResponse.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsDeleteResponse) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{13}
}

type CmsNsConfigsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ns             string                  `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	PipelineSource string                  `protobuf:"bytes,2,opt,name=pipelineSource,proto3" json:"pipelineSource,omitempty"`
	Keys           []*PipelineCmsConfigKey `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`                    // only fetch specified keys
	GlobalDecrypt  bool                    `protobuf:"varint,4,opt,name=globalDecrypt,proto3" json:"globalDecrypt,omitempty"` // global-level setting's priority is lower than key-level
}

func (x *CmsNsConfigsGetRequest) Reset() {
	*x = CmsNsConfigsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsGetRequest) ProtoMessage() {}

func (x *CmsNsConfigsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsGetRequest.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsGetRequest) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{14}
}

func (x *CmsNsConfigsGetRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *CmsNsConfigsGetRequest) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *CmsNsConfigsGetRequest) GetKeys() []*PipelineCmsConfigKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CmsNsConfigsGetRequest) GetGlobalDecrypt() bool {
	if x != nil {
		return x.GlobalDecrypt
	}
	return false
}

type CmsNsConfigsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PipelineCmsConfig `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CmsNsConfigsGetResponse) Reset() {
	*x = CmsNsConfigsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmsNsConfigsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmsNsConfigsGetResponse) ProtoMessage() {}

func (x *CmsNsConfigsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmsNsConfigsGetResponse.ProtoReflect.Descriptor instead.
func (*CmsNsConfigsGetResponse) Descriptor() ([]byte, []int) {
	return file_cms_proto_rawDescGZIP(), []int{15}
}

func (x *CmsNsConfigsGetResponse) GetData() []*PipelineCmsConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_cms_proto protoreflect.FileDescriptor

var file_cms_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x63, 0x6d, 0x73, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x0d, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x22, 0xe3, 0x02, 0x0a, 0x16, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x44,
	0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x49, 0x6e, 0x44, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x77, 0x0a, 0x1b, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x45,
	0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x22, 0x72, 0x0a, 0x14, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x11, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x44,
	0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x49, 0x6e, 0x44, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x12, 0x43, 0x6d, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0e, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x02, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x02, 0x6e, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6d, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x10,
	0x43, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01,
	0x52, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x73, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x73, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x4e, 0x0a, 0x11,
	0x43, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x02, 0x0a,
	0x19, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x0f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x03, 0x4b,
	0x56, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x56, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x1a, 0x66, 0x0a, 0x08, 0x4b, 0x56, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xb5, 0x01, 0x0a, 0x1b, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e,
	0x73, 0x12, 0x4e, 0x0a, 0x03, 0x4b, 0x56, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4b, 0x56, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6b, 0x76,
	0x73, 0x1a, 0x36, 0x0a, 0x08, 0x4b, 0x56, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6d, 0x73,
	0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x19, 0x43, 0x6d, 0x73, 0x4e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x53, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xc0, 0x01, 0x0a, 0x16, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x0e,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xef,
	0x05, 0x0a, 0x0a, 0x43, 0x6d, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01,
	0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x73, 0x12, 0x2a, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x43, 0x6d, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x15, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x63, 0x6d, 0x73, 0x2f,
	0x6e, 0x73, 0x12, 0x7f, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x12,
	0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x63, 0x6d, 0x73,
	0x2f, 0x6e, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6d,
	0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x31, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x6e, 0x73,
	0x2f, 0x7b, 0x6e, 0x73, 0x7d, 0x12, 0x9f, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x31, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x63, 0x6d, 0x73, 0x2f,
	0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x73, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43,
	0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x43, 0x6d, 0x73, 0x4e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x73, 0x7d,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6d, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cms_proto_rawDescOnce sync.Once
	file_cms_proto_rawDescData = file_cms_proto_rawDesc
)

func file_cms_proto_rawDescGZIP() []byte {
	file_cms_proto_rawDescOnce.Do(func() {
		file_cms_proto_rawDescData = protoimpl.X.CompressGZIP(file_cms_proto_rawDescData)
	})
	return file_cms_proto_rawDescData
}

var file_cms_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_cms_proto_goTypes = []interface{}{
	(*PipelineCmsNs)(nil),               // 0: erda.core.pipeline.cms.PipelineCmsNs
	(*PipelineCmsConfigValue)(nil),      // 1: erda.core.pipeline.cms.PipelineCmsConfigValue
	(*PipelineCmsConfigOperations)(nil), // 2: erda.core.pipeline.cms.PipelineCmsConfigOperations
	(*PipelineCmsConfigKey)(nil),        // 3: erda.core.pipeline.cms.PipelineCmsConfigKey
	(*PipelineCmsConfig)(nil),           // 4: erda.core.pipeline.cms.PipelineCmsConfig
	(*CmsCreateNsRequest)(nil),          // 5: erda.core.pipeline.cms.CmsCreateNsRequest
	(*CmsCreateNsResponse)(nil),         // 6: erda.core.pipeline.cms.CmsCreateNsResponse
	(*CmsListNsRequest)(nil),            // 7: erda.core.pipeline.cms.CmsListNsRequest
	(*CmsListNsResponse)(nil),           // 8: erda.core.pipeline.cms.CmsListNsResponse
	(*CmsNsConfigsUpdateRequest)(nil),   // 9: erda.core.pipeline.cms.CmsNsConfigsUpdateRequest
	(*CmsNsConfigsUpdateV1Request)(nil), // 10: erda.core.pipeline.cms.CmsNsConfigsUpdateV1Request
	(*CmsNsConfigsUpdateResponse)(nil),  // 11: erda.core.pipeline.cms.CmsNsConfigsUpdateResponse
	(*CmsNsConfigsDeleteRequest)(nil),   // 12: erda.core.pipeline.cms.CmsNsConfigsDeleteRequest
	(*CmsNsConfigsDeleteResponse)(nil),  // 13: erda.core.pipeline.cms.CmsNsConfigsDeleteResponse
	(*CmsNsConfigsGetRequest)(nil),      // 14: erda.core.pipeline.cms.CmsNsConfigsGetRequest
	(*CmsNsConfigsGetResponse)(nil),     // 15: erda.core.pipeline.cms.CmsNsConfigsGetResponse
	nil,                                 // 16: erda.core.pipeline.cms.CmsNsConfigsUpdateRequest.KVsEntry
	nil,                                 // 17: erda.core.pipeline.cms.CmsNsConfigsUpdateV1Request.KVsEntry
	(*timestamppb.Timestamp)(nil),       // 18: google.protobuf.Timestamp
}
var file_cms_proto_depIdxs = []int32{
	18, // 0: erda.core.pipeline.cms.PipelineCmsNs.timeCreated:type_name -> google.protobuf.Timestamp
	18, // 1: erda.core.pipeline.cms.PipelineCmsNs.timeUpdated:type_name -> google.protobuf.Timestamp
	2,  // 2: erda.core.pipeline.cms.PipelineCmsConfigValue.operations:type_name -> erda.core.pipeline.cms.PipelineCmsConfigOperations
	18, // 3: erda.core.pipeline.cms.PipelineCmsConfigValue.timeCreated:type_name -> google.protobuf.Timestamp
	18, // 4: erda.core.pipeline.cms.PipelineCmsConfigValue.timeUpdated:type_name -> google.protobuf.Timestamp
	2,  // 5: erda.core.pipeline.cms.PipelineCmsConfig.operations:type_name -> erda.core.pipeline.cms.PipelineCmsConfigOperations
	18, // 6: erda.core.pipeline.cms.PipelineCmsConfig.timeCreated:type_name -> google.protobuf.Timestamp
	18, // 7: erda.core.pipeline.cms.PipelineCmsConfig.timeUpdated:type_name -> google.protobuf.Timestamp
	0,  // 8: erda.core.pipeline.cms.CmsListNsResponse.data:type_name -> erda.core.pipeline.cms.PipelineCmsNs
	16, // 9: erda.core.pipeline.cms.CmsNsConfigsUpdateRequest.KVs:type_name -> erda.core.pipeline.cms.CmsNsConfigsUpdateRequest.KVsEntry
	17, // 10: erda.core.pipeline.cms.CmsNsConfigsUpdateV1Request.KVs:type_name -> erda.core.pipeline.cms.CmsNsConfigsUpdateV1Request.KVsEntry
	3,  // 11: erda.core.pipeline.cms.CmsNsConfigsGetRequest.keys:type_name -> erda.core.pipeline.cms.PipelineCmsConfigKey
	4,  // 12: erda.core.pipeline.cms.CmsNsConfigsGetResponse.data:type_name -> erda.core.pipeline.cms.PipelineCmsConfig
	1,  // 13: erda.core.pipeline.cms.CmsNsConfigsUpdateRequest.KVsEntry.value:type_name -> erda.core.pipeline.cms.PipelineCmsConfigValue
	5,  // 14: erda.core.pipeline.cms.CmsService.CreateNs:input_type -> erda.core.pipeline.cms.CmsCreateNsRequest
	7,  // 15: erda.core.pipeline.cms.CmsService.ListCmsNs:input_type -> erda.core.pipeline.cms.CmsListNsRequest
	9,  // 16: erda.core.pipeline.cms.CmsService.UpdateCmsNsConfigs:input_type -> erda.core.pipeline.cms.CmsNsConfigsUpdateRequest
	12, // 17: erda.core.pipeline.cms.CmsService.DeleteCmsNsConfigs:input_type -> erda.core.pipeline.cms.CmsNsConfigsDeleteRequest
	14, // 18: erda.core.pipeline.cms.CmsService.GetCmsNsConfigs:input_type -> erda.core.pipeline.cms.CmsNsConfigsGetRequest
	6,  // 19: erda.core.pipeline.cms.CmsService.CreateNs:output_type -> erda.core.pipeline.cms.CmsCreateNsResponse
	8,  // 20: erda.core.pipeline.cms.CmsService.ListCmsNs:output_type -> erda.core.pipeline.cms.CmsListNsResponse
	11, // 21: erda.core.pipeline.cms.CmsService.UpdateCmsNsConfigs:output_type -> erda.core.pipeline.cms.CmsNsConfigsUpdateResponse
	13, // 22: erda.core.pipeline.cms.CmsService.DeleteCmsNsConfigs:output_type -> erda.core.pipeline.cms.CmsNsConfigsDeleteResponse
	15, // 23: erda.core.pipeline.cms.CmsService.GetCmsNsConfigs:output_type -> erda.core.pipeline.cms.CmsNsConfigsGetResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cms_proto_init() }
func file_cms_proto_init() {
	if File_cms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCmsNs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCmsConfigValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCmsConfigOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCmsConfigKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineCmsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsCreateNsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsCreateNsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsListNsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsListNsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsUpdateV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmsNsConfigsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cms_proto_goTypes,
		DependencyIndexes: file_cms_proto_depIdxs,
		MessageInfos:      file_cms_proto_msgTypes,
	}.Build()
	File_cms_proto = out.File
	file_cms_proto_rawDesc = nil
	file_cms_proto_goTypes = nil
	file_cms_proto_depIdxs = nil
}
