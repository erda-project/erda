// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: trigger.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/pipeline/trigger/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// TriggerService trigger.proto
	TriggerService() pb.TriggerServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		triggerService: pb.NewTriggerServiceClient(cc),
	}
}

type serviceClients struct {
	triggerService pb.TriggerServiceClient
}

func (c *serviceClients) TriggerService() pb.TriggerServiceClient {
	return c.triggerService
}

type triggerServiceWrapper struct {
	client pb.TriggerServiceClient
	opts   []grpc1.CallOption
}

func (s *triggerServiceWrapper) RunPipelineByTriggerRequest(ctx context.Context, req *pb.PipelineTriggerRequest) (*pb.PipelineTriggerResponse, error) {
	return s.client.RunPipelineByTriggerRequest(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
