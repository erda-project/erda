// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: definition.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// update extra
type PipelineDefinitionExtraUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinitionID string `protobuf:"bytes,1,opt,name=pipelineDefinitionID,proto3" json:"pipelineDefinitionID,omitempty"`
	Extra                string `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *PipelineDefinitionExtraUpdateRequest) Reset() {
	*x = PipelineDefinitionExtraUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionExtraUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionExtraUpdateRequest) ProtoMessage() {}

func (x *PipelineDefinitionExtraUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionExtraUpdateRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionExtraUpdateRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{0}
}

func (x *PipelineDefinitionExtraUpdateRequest) GetPipelineDefinitionID() string {
	if x != nil {
		return x.PipelineDefinitionID
	}
	return ""
}

func (x *PipelineDefinitionExtraUpdateRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type PipelineDefinitionExtraUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extra *PipelineDefinitionExtra `protobuf:"bytes,1,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *PipelineDefinitionExtraUpdateResponse) Reset() {
	*x = PipelineDefinitionExtraUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionExtraUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionExtraUpdateResponse) ProtoMessage() {}

func (x *PipelineDefinitionExtraUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionExtraUpdateResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionExtraUpdateResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{1}
}

func (x *PipelineDefinitionExtraUpdateResponse) GetExtra() *PipelineDefinitionExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type PipelineDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string                   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Location          string                   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Name              string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Creator           string                   `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	Category          string                   `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	CostTime          int64                    `protobuf:"varint,6,opt,name=costTime,proto3" json:"costTime,omitempty"`
	Executor          string                   `protobuf:"bytes,7,opt,name=executor,proto3" json:"executor,omitempty"`
	Extra             *PipelineDefinitionExtra `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
	StartedAt         *timestamppb.Timestamp   `protobuf:"bytes,9,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	EndedAt           *timestamppb.Timestamp   `protobuf:"bytes,10,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	TimeCreated       *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated       *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
	SoftDeletedAt     int64                    `protobuf:"varint,13,opt,name=softDeletedAt,proto3" json:"softDeletedAt,omitempty"`
	SourceType        string                   `protobuf:"bytes,14,opt,name=sourceType,proto3" json:"sourceType,omitempty"`
	Remote            string                   `protobuf:"bytes,15,opt,name=remote,proto3" json:"remote,omitempty"`
	Ref               string                   `protobuf:"bytes,16,opt,name=ref,proto3" json:"ref,omitempty"`
	Path              string                   `protobuf:"bytes,17,opt,name=path,proto3" json:"path,omitempty"`
	FileName          string                   `protobuf:"bytes,18,opt,name=fileName,proto3" json:"fileName,omitempty"`
	PipelineSourceID  string                   `protobuf:"bytes,19,opt,name=pipelineSourceID,proto3" json:"pipelineSourceID,omitempty"`
	Status            string                   `protobuf:"bytes,20,opt,name=status,proto3" json:"status,omitempty"`
	PipelineID        int64                    `protobuf:"varint,21,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
	TotalActionNum    int64                    `protobuf:"varint,22,opt,name=totalActionNum,proto3" json:"totalActionNum,omitempty"`
	ExecutedActionNum int64                    `protobuf:"varint,23,opt,name=ExecutedActionNum,proto3" json:"ExecutedActionNum,omitempty"`
}

func (x *PipelineDefinition) Reset() {
	*x = PipelineDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinition) ProtoMessage() {}

func (x *PipelineDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinition.ProtoReflect.Descriptor instead.
func (*PipelineDefinition) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{2}
}

func (x *PipelineDefinition) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PipelineDefinition) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PipelineDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineDefinition) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PipelineDefinition) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PipelineDefinition) GetCostTime() int64 {
	if x != nil {
		return x.CostTime
	}
	return 0
}

func (x *PipelineDefinition) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *PipelineDefinition) GetExtra() *PipelineDefinitionExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *PipelineDefinition) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *PipelineDefinition) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *PipelineDefinition) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *PipelineDefinition) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

func (x *PipelineDefinition) GetSoftDeletedAt() int64 {
	if x != nil {
		return x.SoftDeletedAt
	}
	return 0
}

func (x *PipelineDefinition) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *PipelineDefinition) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *PipelineDefinition) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *PipelineDefinition) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PipelineDefinition) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PipelineDefinition) GetPipelineSourceID() string {
	if x != nil {
		return x.PipelineSourceID
	}
	return ""
}

func (x *PipelineDefinition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PipelineDefinition) GetPipelineID() int64 {
	if x != nil {
		return x.PipelineID
	}
	return 0
}

func (x *PipelineDefinition) GetTotalActionNum() int64 {
	if x != nil {
		return x.TotalActionNum
	}
	return 0
}

func (x *PipelineDefinition) GetExecutedActionNum() int64 {
	if x != nil {
		return x.ExecutedActionNum
	}
	return 0
}

type PipelineDefinitionExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string                 `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Extra              string                 `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
	TimeCreated        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
	PipelineDefinition string                 `protobuf:"bytes,5,opt,name=pipelineDefinition,proto3" json:"pipelineDefinition,omitempty"`
}

func (x *PipelineDefinitionExtra) Reset() {
	*x = PipelineDefinitionExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionExtra) ProtoMessage() {}

func (x *PipelineDefinitionExtra) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionExtra.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionExtra) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{3}
}

func (x *PipelineDefinitionExtra) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PipelineDefinitionExtra) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *PipelineDefinitionExtra) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *PipelineDefinitionExtra) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

func (x *PipelineDefinitionExtra) GetPipelineDefinition() string {
	if x != nil {
		return x.PipelineDefinition
	}
	return ""
}

// create
type PipelineDefinitionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string                   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Location          string                   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Name              string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Creator           string                   `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	PipelineSourceID  string                   `protobuf:"bytes,5,opt,name=pipelineSourceID,proto3" json:"pipelineSourceID,omitempty"`
	Category          string                   `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Extra             *PipelineDefinitionExtra `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"`
	TotalActionNum    int64                    `protobuf:"varint,8,opt,name=totalActionNum,proto3" json:"totalActionNum,omitempty"`
	ExecutedActionNum int64                    `protobuf:"varint,9,opt,name=ExecutedActionNum,proto3" json:"ExecutedActionNum,omitempty"`
	Ref               string                   `protobuf:"bytes,10,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *PipelineDefinitionCreateRequest) Reset() {
	*x = PipelineDefinitionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionCreateRequest) ProtoMessage() {}

func (x *PipelineDefinitionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionCreateRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionCreateRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{4}
}

func (x *PipelineDefinitionCreateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PipelineDefinitionCreateRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PipelineDefinitionCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineDefinitionCreateRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PipelineDefinitionCreateRequest) GetPipelineSourceID() string {
	if x != nil {
		return x.PipelineSourceID
	}
	return ""
}

func (x *PipelineDefinitionCreateRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PipelineDefinitionCreateRequest) GetExtra() *PipelineDefinitionExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *PipelineDefinitionCreateRequest) GetTotalActionNum() int64 {
	if x != nil {
		return x.TotalActionNum
	}
	return 0
}

func (x *PipelineDefinitionCreateRequest) GetExecutedActionNum() int64 {
	if x != nil {
		return x.ExecutedActionNum
	}
	return 0
}

func (x *PipelineDefinitionCreateRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type PipelineDefinitionCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinition *PipelineDefinition `protobuf:"bytes,1,opt,name=pipelineDefinition,proto3" json:"pipelineDefinition,omitempty"`
}

func (x *PipelineDefinitionCreateResponse) Reset() {
	*x = PipelineDefinitionCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionCreateResponse) ProtoMessage() {}

func (x *PipelineDefinitionCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionCreateResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionCreateResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{5}
}

func (x *PipelineDefinitionCreateResponse) GetPipelineDefinition() *PipelineDefinition {
	if x != nil {
		return x.PipelineDefinition
	}
	return nil
}

// update
type PipelineDefinitionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CostTime             int64                  `protobuf:"varint,2,opt,name=costTime,proto3" json:"costTime,omitempty"`
	Executor             string                 `protobuf:"bytes,3,opt,name=executor,proto3" json:"executor,omitempty"`
	PipelineSourceID     string                 `protobuf:"bytes,4,opt,name=pipelineSourceID,proto3" json:"pipelineSourceID,omitempty"`
	Category             string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	StartedAt            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	EndedAt              *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	PipelineDefinitionID string                 `protobuf:"bytes,8,opt,name=pipelineDefinitionID,proto3" json:"pipelineDefinitionID,omitempty"`
	Status               string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	PipelineID           int64                  `protobuf:"varint,10,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
	TotalActionNum       int64                  `protobuf:"varint,11,opt,name=totalActionNum,proto3" json:"totalActionNum,omitempty"`
	ExecutedActionNum    int64                  `protobuf:"varint,12,opt,name=ExecutedActionNum,proto3" json:"ExecutedActionNum,omitempty"`
}

func (x *PipelineDefinitionUpdateRequest) Reset() {
	*x = PipelineDefinitionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionUpdateRequest) ProtoMessage() {}

func (x *PipelineDefinitionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionUpdateRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{6}
}

func (x *PipelineDefinitionUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineDefinitionUpdateRequest) GetCostTime() int64 {
	if x != nil {
		return x.CostTime
	}
	return 0
}

func (x *PipelineDefinitionUpdateRequest) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *PipelineDefinitionUpdateRequest) GetPipelineSourceID() string {
	if x != nil {
		return x.PipelineSourceID
	}
	return ""
}

func (x *PipelineDefinitionUpdateRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PipelineDefinitionUpdateRequest) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *PipelineDefinitionUpdateRequest) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *PipelineDefinitionUpdateRequest) GetPipelineDefinitionID() string {
	if x != nil {
		return x.PipelineDefinitionID
	}
	return ""
}

func (x *PipelineDefinitionUpdateRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PipelineDefinitionUpdateRequest) GetPipelineID() int64 {
	if x != nil {
		return x.PipelineID
	}
	return 0
}

func (x *PipelineDefinitionUpdateRequest) GetTotalActionNum() int64 {
	if x != nil {
		return x.TotalActionNum
	}
	return 0
}

func (x *PipelineDefinitionUpdateRequest) GetExecutedActionNum() int64 {
	if x != nil {
		return x.ExecutedActionNum
	}
	return 0
}

type PipelineDefinitionUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinition *PipelineDefinition `protobuf:"bytes,1,opt,name=pipelineDefinition,proto3" json:"pipelineDefinition,omitempty"`
}

func (x *PipelineDefinitionUpdateResponse) Reset() {
	*x = PipelineDefinitionUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionUpdateResponse) ProtoMessage() {}

func (x *PipelineDefinitionUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionUpdateResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionUpdateResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{7}
}

func (x *PipelineDefinitionUpdateResponse) GetPipelineDefinition() *PipelineDefinition {
	if x != nil {
		return x.PipelineDefinition
	}
	return nil
}

// delete
type PipelineDefinitionDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinitionID string `protobuf:"bytes,1,opt,name=pipelineDefinitionID,proto3" json:"pipelineDefinitionID,omitempty"`
}

func (x *PipelineDefinitionDeleteRequest) Reset() {
	*x = PipelineDefinitionDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionDeleteRequest) ProtoMessage() {}

func (x *PipelineDefinitionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionDeleteRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{8}
}

func (x *PipelineDefinitionDeleteRequest) GetPipelineDefinitionID() string {
	if x != nil {
		return x.PipelineDefinitionID
	}
	return ""
}

type PipelineDefinitionDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PipelineDefinitionDeleteResponse) Reset() {
	*x = PipelineDefinitionDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionDeleteResponse) ProtoMessage() {}

func (x *PipelineDefinitionDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionDeleteResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionDeleteResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{9}
}

// get
type PipelineDefinitionGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinitionID string `protobuf:"bytes,1,opt,name=pipelineDefinitionID,proto3" json:"pipelineDefinitionID,omitempty"`
}

func (x *PipelineDefinitionGetRequest) Reset() {
	*x = PipelineDefinitionGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionGetRequest) ProtoMessage() {}

func (x *PipelineDefinitionGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionGetRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionGetRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineDefinitionGetRequest) GetPipelineDefinitionID() string {
	if x != nil {
		return x.PipelineDefinitionID
	}
	return ""
}

type PipelineDefinitionGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinition *PipelineDefinition `protobuf:"bytes,1,opt,name=pipelineDefinition,proto3" json:"pipelineDefinition,omitempty"`
}

func (x *PipelineDefinitionGetResponse) Reset() {
	*x = PipelineDefinitionGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionGetResponse) ProtoMessage() {}

func (x *PipelineDefinitionGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionGetResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionGetResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{11}
}

func (x *PipelineDefinitionGetResponse) GetPipelineDefinition() *PipelineDefinition {
	if x != nil {
		return x.PipelineDefinition
	}
	return nil
}

type PipelineDefinitionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize          int64    `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNo            int64    `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	Location          string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Name              string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	FuzzyName         string   `protobuf:"bytes,5,opt,name=fuzzyName,proto3" json:"fuzzyName,omitempty"`
	Creator           []string `protobuf:"bytes,6,rep,name=creator,proto3" json:"creator,omitempty"`
	Executor          []string `protobuf:"bytes,7,rep,name=executor,proto3" json:"executor,omitempty"`
	Category          []string `protobuf:"bytes,8,rep,name=category,proto3" json:"category,omitempty"`
	Ref               []string `protobuf:"bytes,9,rep,name=ref,proto3" json:"ref,omitempty"`
	Remote            []string `protobuf:"bytes,10,rep,name=remote,proto3" json:"remote,omitempty"`
	TimeCreated       []string `protobuf:"bytes,11,rep,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeStarted       []string `protobuf:"bytes,12,rep,name=timeStarted,proto3" json:"timeStarted,omitempty"`
	Status            []string `protobuf:"bytes,13,rep,name=status,proto3" json:"status,omitempty"`
	IdList            []string `protobuf:"bytes,14,rep,name=idList,proto3" json:"idList,omitempty"`
	AscCols           []string `protobuf:"bytes,15,rep,name=ascCols,proto3" json:"ascCols,omitempty"`
	DescCols          []string `protobuf:"bytes,16,rep,name=descCols,proto3" json:"descCols,omitempty"`
	TotalActionNum    int64    `protobuf:"varint,17,opt,name=totalActionNum,proto3" json:"totalActionNum,omitempty"`
	ExecutedActionNum int64    `protobuf:"varint,18,opt,name=ExecutedActionNum,proto3" json:"ExecutedActionNum,omitempty"`
	SourceIDList      []string `protobuf:"bytes,19,rep,name=sourceIDList,proto3" json:"sourceIDList,omitempty"`
	FilePathWithNames []string `protobuf:"bytes,20,rep,name=filePathWithNames,proto3" json:"filePathWithNames,omitempty"`
	IsOthers          bool     `protobuf:"varint,21,opt,name=isOthers,proto3" json:"isOthers,omitempty"`
}

func (x *PipelineDefinitionListRequest) Reset() {
	*x = PipelineDefinitionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionListRequest) ProtoMessage() {}

func (x *PipelineDefinitionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionListRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionListRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{12}
}

func (x *PipelineDefinitionListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PipelineDefinitionListRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *PipelineDefinitionListRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PipelineDefinitionListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineDefinitionListRequest) GetFuzzyName() string {
	if x != nil {
		return x.FuzzyName
	}
	return ""
}

func (x *PipelineDefinitionListRequest) GetCreator() []string {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetExecutor() []string {
	if x != nil {
		return x.Executor
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetRef() []string {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetRemote() []string {
	if x != nil {
		return x.Remote
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetTimeCreated() []string {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetTimeStarted() []string {
	if x != nil {
		return x.TimeStarted
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetIdList() []string {
	if x != nil {
		return x.IdList
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetAscCols() []string {
	if x != nil {
		return x.AscCols
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetDescCols() []string {
	if x != nil {
		return x.DescCols
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetTotalActionNum() int64 {
	if x != nil {
		return x.TotalActionNum
	}
	return 0
}

func (x *PipelineDefinitionListRequest) GetExecutedActionNum() int64 {
	if x != nil {
		return x.ExecutedActionNum
	}
	return 0
}

func (x *PipelineDefinitionListRequest) GetSourceIDList() []string {
	if x != nil {
		return x.SourceIDList
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetFilePathWithNames() []string {
	if x != nil {
		return x.FilePathWithNames
	}
	return nil
}

func (x *PipelineDefinitionListRequest) GetIsOthers() bool {
	if x != nil {
		return x.IsOthers
	}
	return false
}

type PipelineDefinitionStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Remotes  []string `protobuf:"bytes,2,rep,name=remotes,proto3" json:"remotes,omitempty"`
}

func (x *PipelineDefinitionStatisticsRequest) Reset() {
	*x = PipelineDefinitionStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionStatisticsRequest) ProtoMessage() {}

func (x *PipelineDefinitionStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionStatisticsRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{13}
}

func (x *PipelineDefinitionStatisticsRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PipelineDefinitionStatisticsRequest) GetRemotes() []string {
	if x != nil {
		return x.Remotes
	}
	return nil
}

type PipelineDefinitionStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineDefinitionStatistics []*PipelineDefinitionStatistics `protobuf:"bytes,1,rep,name=PipelineDefinitionStatistics,proto3" json:"PipelineDefinitionStatistics,omitempty"`
}

func (x *PipelineDefinitionStatisticsResponse) Reset() {
	*x = PipelineDefinitionStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionStatisticsResponse) ProtoMessage() {}

func (x *PipelineDefinitionStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionStatisticsResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{14}
}

func (x *PipelineDefinitionStatisticsResponse) GetPipelineDefinitionStatistics() []*PipelineDefinitionStatistics {
	if x != nil {
		return x.PipelineDefinitionStatistics
	}
	return nil
}

type PipelineDefinitionStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	FailedNum  uint64 `protobuf:"varint,2,opt,name=failedNum,proto3" json:"failedNum,omitempty"`
	RunningNum uint64 `protobuf:"varint,3,opt,name=runningNum,proto3" json:"runningNum,omitempty"`
	TotalNum   uint64 `protobuf:"varint,4,opt,name=totalNum,proto3" json:"totalNum,omitempty"`
}

func (x *PipelineDefinitionStatistics) Reset() {
	*x = PipelineDefinitionStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionStatistics) ProtoMessage() {}

func (x *PipelineDefinitionStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionStatistics.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionStatistics) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{15}
}

func (x *PipelineDefinitionStatistics) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *PipelineDefinitionStatistics) GetFailedNum() uint64 {
	if x != nil {
		return x.FailedNum
	}
	return 0
}

func (x *PipelineDefinitionStatistics) GetRunningNum() uint64 {
	if x != nil {
		return x.RunningNum
	}
	return 0
}

func (x *PipelineDefinitionStatistics) GetTotalNum() uint64 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

type PipelineDefinitionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*PipelineDefinition `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PipelineDefinitionListResponse) Reset() {
	*x = PipelineDefinitionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionListResponse) ProtoMessage() {}

func (x *PipelineDefinitionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionListResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionListResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{16}
}

func (x *PipelineDefinitionListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PipelineDefinitionListResponse) GetData() []*PipelineDefinition {
	if x != nil {
		return x.Data
	}
	return nil
}

type PipelineDefinitionUsedRefListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *PipelineDefinitionUsedRefListRequest) Reset() {
	*x = PipelineDefinitionUsedRefListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionUsedRefListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionUsedRefListRequest) ProtoMessage() {}

func (x *PipelineDefinitionUsedRefListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionUsedRefListRequest.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionUsedRefListRequest) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{17}
}

func (x *PipelineDefinitionUsedRefListRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type PipelineDefinitionUsedRefListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref []string `protobuf:"bytes,1,rep,name=ref,proto3" json:"ref,omitempty"`
}

func (x *PipelineDefinitionUsedRefListResponse) Reset() {
	*x = PipelineDefinitionUsedRefListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definition_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDefinitionUsedRefListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDefinitionUsedRefListResponse) ProtoMessage() {}

func (x *PipelineDefinitionUsedRefListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_definition_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDefinitionUsedRefListResponse.ProtoReflect.Descriptor instead.
func (*PipelineDefinitionUsedRefListResponse) Descriptor() ([]byte, []int) {
	return file_definition_proto_rawDescGZIP(), []int{18}
}

func (x *PipelineDefinitionUsedRefListResponse) GetRef() []string {
	if x != nil {
		return x.Ref
	}
	return nil
}

var File_definition_proto protoreflect.FileDescriptor

var file_definition_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1d, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b,
	0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x70, 0x0a, 0x24, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x22, 0x75, 0x0a, 0x25, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0xd6, 0x06, 0x0a, 0x12,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x12, 0x4c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x38,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6f,
	0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x22, 0xeb, 0x01, 0x0a, 0x17, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xf9, 0x02, 0x0a, 0x1f, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x2a, 0x0a, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2c,
	0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x85,
	0x01, 0x0a, 0x20, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x12, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x03, 0x0a, 0x1f, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x38,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x22, 0x85, 0x01, 0x0a, 0x20, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x1f, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x22, 0x0a, 0x20, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x1c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x82, 0x01, 0x0a, 0x1d, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x12, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x05, 0x0a,
	0x1d, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x63, 0x43, 0x6f, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x63, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x43, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2c,
	0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x57, 0x69, 0x74, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x22, 0x5b, 0x0a, 0x23, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x24, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7f, 0x0a, 0x1c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x1c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x22, 0x7d, 0x0a, 0x1e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x4a, 0x0a, 0x24, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a,
	0x25, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x32, 0xce, 0x0e, 0x0a, 0x11, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xac,
	0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xc3, 0x01,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x32, 0x1a, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3e,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x2a, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x7d, 0x12, 0xba, 0x01, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0xe8, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x42, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x43, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x12, 0x3c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2d, 0x62, 0x79, 0x2d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0xd3, 0x01, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x66, 0x73, 0x12, 0x43, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x44, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x75, 0x73, 0x65, 0x64, 0x2d, 0x72, 0x65, 0x66, 0x73,
	0x12, 0xec, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x42,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x43, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12,
	0x3e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2d, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2d, 0x62, 0x79, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0xe7, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x43, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x47, 0x1a, 0x45, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_definition_proto_rawDescOnce sync.Once
	file_definition_proto_rawDescData = file_definition_proto_rawDesc
)

func file_definition_proto_rawDescGZIP() []byte {
	file_definition_proto_rawDescOnce.Do(func() {
		file_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_definition_proto_rawDescData)
	})
	return file_definition_proto_rawDescData
}

var file_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_definition_proto_goTypes = []interface{}{
	(*PipelineDefinitionExtraUpdateRequest)(nil),  // 0: erda.core.pipeline.definition.PipelineDefinitionExtraUpdateRequest
	(*PipelineDefinitionExtraUpdateResponse)(nil), // 1: erda.core.pipeline.definition.PipelineDefinitionExtraUpdateResponse
	(*PipelineDefinition)(nil),                    // 2: erda.core.pipeline.definition.PipelineDefinition
	(*PipelineDefinitionExtra)(nil),               // 3: erda.core.pipeline.definition.PipelineDefinitionExtra
	(*PipelineDefinitionCreateRequest)(nil),       // 4: erda.core.pipeline.definition.PipelineDefinitionCreateRequest
	(*PipelineDefinitionCreateResponse)(nil),      // 5: erda.core.pipeline.definition.PipelineDefinitionCreateResponse
	(*PipelineDefinitionUpdateRequest)(nil),       // 6: erda.core.pipeline.definition.PipelineDefinitionUpdateRequest
	(*PipelineDefinitionUpdateResponse)(nil),      // 7: erda.core.pipeline.definition.PipelineDefinitionUpdateResponse
	(*PipelineDefinitionDeleteRequest)(nil),       // 8: erda.core.pipeline.definition.PipelineDefinitionDeleteRequest
	(*PipelineDefinitionDeleteResponse)(nil),      // 9: erda.core.pipeline.definition.PipelineDefinitionDeleteResponse
	(*PipelineDefinitionGetRequest)(nil),          // 10: erda.core.pipeline.definition.PipelineDefinitionGetRequest
	(*PipelineDefinitionGetResponse)(nil),         // 11: erda.core.pipeline.definition.PipelineDefinitionGetResponse
	(*PipelineDefinitionListRequest)(nil),         // 12: erda.core.pipeline.definition.PipelineDefinitionListRequest
	(*PipelineDefinitionStatisticsRequest)(nil),   // 13: erda.core.pipeline.definition.PipelineDefinitionStatisticsRequest
	(*PipelineDefinitionStatisticsResponse)(nil),  // 14: erda.core.pipeline.definition.PipelineDefinitionStatisticsResponse
	(*PipelineDefinitionStatistics)(nil),          // 15: erda.core.pipeline.definition.PipelineDefinitionStatistics
	(*PipelineDefinitionListResponse)(nil),        // 16: erda.core.pipeline.definition.PipelineDefinitionListResponse
	(*PipelineDefinitionUsedRefListRequest)(nil),  // 17: erda.core.pipeline.definition.PipelineDefinitionUsedRefListRequest
	(*PipelineDefinitionUsedRefListResponse)(nil), // 18: erda.core.pipeline.definition.PipelineDefinitionUsedRefListResponse
	(*timestamppb.Timestamp)(nil),                 // 19: google.protobuf.Timestamp
}
var file_definition_proto_depIdxs = []int32{
	3,  // 0: erda.core.pipeline.definition.PipelineDefinitionExtraUpdateResponse.extra:type_name -> erda.core.pipeline.definition.PipelineDefinitionExtra
	3,  // 1: erda.core.pipeline.definition.PipelineDefinition.extra:type_name -> erda.core.pipeline.definition.PipelineDefinitionExtra
	19, // 2: erda.core.pipeline.definition.PipelineDefinition.startedAt:type_name -> google.protobuf.Timestamp
	19, // 3: erda.core.pipeline.definition.PipelineDefinition.endedAt:type_name -> google.protobuf.Timestamp
	19, // 4: erda.core.pipeline.definition.PipelineDefinition.timeCreated:type_name -> google.protobuf.Timestamp
	19, // 5: erda.core.pipeline.definition.PipelineDefinition.timeUpdated:type_name -> google.protobuf.Timestamp
	19, // 6: erda.core.pipeline.definition.PipelineDefinitionExtra.timeCreated:type_name -> google.protobuf.Timestamp
	19, // 7: erda.core.pipeline.definition.PipelineDefinitionExtra.timeUpdated:type_name -> google.protobuf.Timestamp
	3,  // 8: erda.core.pipeline.definition.PipelineDefinitionCreateRequest.extra:type_name -> erda.core.pipeline.definition.PipelineDefinitionExtra
	2,  // 9: erda.core.pipeline.definition.PipelineDefinitionCreateResponse.pipelineDefinition:type_name -> erda.core.pipeline.definition.PipelineDefinition
	19, // 10: erda.core.pipeline.definition.PipelineDefinitionUpdateRequest.startedAt:type_name -> google.protobuf.Timestamp
	19, // 11: erda.core.pipeline.definition.PipelineDefinitionUpdateRequest.endedAt:type_name -> google.protobuf.Timestamp
	2,  // 12: erda.core.pipeline.definition.PipelineDefinitionUpdateResponse.pipelineDefinition:type_name -> erda.core.pipeline.definition.PipelineDefinition
	2,  // 13: erda.core.pipeline.definition.PipelineDefinitionGetResponse.pipelineDefinition:type_name -> erda.core.pipeline.definition.PipelineDefinition
	15, // 14: erda.core.pipeline.definition.PipelineDefinitionStatisticsResponse.PipelineDefinitionStatistics:type_name -> erda.core.pipeline.definition.PipelineDefinitionStatistics
	2,  // 15: erda.core.pipeline.definition.PipelineDefinitionListResponse.data:type_name -> erda.core.pipeline.definition.PipelineDefinition
	4,  // 16: erda.core.pipeline.definition.DefinitionService.Create:input_type -> erda.core.pipeline.definition.PipelineDefinitionCreateRequest
	6,  // 17: erda.core.pipeline.definition.DefinitionService.Update:input_type -> erda.core.pipeline.definition.PipelineDefinitionUpdateRequest
	8,  // 18: erda.core.pipeline.definition.DefinitionService.Delete:input_type -> erda.core.pipeline.definition.PipelineDefinitionDeleteRequest
	10, // 19: erda.core.pipeline.definition.DefinitionService.Get:input_type -> erda.core.pipeline.definition.PipelineDefinitionGetRequest
	12, // 20: erda.core.pipeline.definition.DefinitionService.List:input_type -> erda.core.pipeline.definition.PipelineDefinitionListRequest
	13, // 21: erda.core.pipeline.definition.DefinitionService.StatisticsGroupByRemote:input_type -> erda.core.pipeline.definition.PipelineDefinitionStatisticsRequest
	17, // 22: erda.core.pipeline.definition.DefinitionService.ListUsedRefs:input_type -> erda.core.pipeline.definition.PipelineDefinitionUsedRefListRequest
	13, // 23: erda.core.pipeline.definition.DefinitionService.StatisticsGroupByFilePath:input_type -> erda.core.pipeline.definition.PipelineDefinitionStatisticsRequest
	0,  // 24: erda.core.pipeline.definition.DefinitionService.UpdateExtra:input_type -> erda.core.pipeline.definition.PipelineDefinitionExtraUpdateRequest
	5,  // 25: erda.core.pipeline.definition.DefinitionService.Create:output_type -> erda.core.pipeline.definition.PipelineDefinitionCreateResponse
	7,  // 26: erda.core.pipeline.definition.DefinitionService.Update:output_type -> erda.core.pipeline.definition.PipelineDefinitionUpdateResponse
	9,  // 27: erda.core.pipeline.definition.DefinitionService.Delete:output_type -> erda.core.pipeline.definition.PipelineDefinitionDeleteResponse
	11, // 28: erda.core.pipeline.definition.DefinitionService.Get:output_type -> erda.core.pipeline.definition.PipelineDefinitionGetResponse
	16, // 29: erda.core.pipeline.definition.DefinitionService.List:output_type -> erda.core.pipeline.definition.PipelineDefinitionListResponse
	14, // 30: erda.core.pipeline.definition.DefinitionService.StatisticsGroupByRemote:output_type -> erda.core.pipeline.definition.PipelineDefinitionStatisticsResponse
	18, // 31: erda.core.pipeline.definition.DefinitionService.ListUsedRefs:output_type -> erda.core.pipeline.definition.PipelineDefinitionUsedRefListResponse
	14, // 32: erda.core.pipeline.definition.DefinitionService.StatisticsGroupByFilePath:output_type -> erda.core.pipeline.definition.PipelineDefinitionStatisticsResponse
	1,  // 33: erda.core.pipeline.definition.DefinitionService.UpdateExtra:output_type -> erda.core.pipeline.definition.PipelineDefinitionExtraUpdateResponse
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_definition_proto_init() }
func file_definition_proto_init() {
	if File_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionExtraUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionExtraUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionUsedRefListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definition_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDefinitionUsedRefListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_definition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_definition_proto_goTypes,
		DependencyIndexes: file_definition_proto_depIdxs,
		MessageInfos:      file_definition_proto_msgTypes,
	}.Build()
	File_definition_proto = out.File
	file_definition_proto_rawDesc = nil
	file_definition_proto_goTypes = nil
	file_definition_proto_depIdxs = nil
}
