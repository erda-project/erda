// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: definition.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterDefinitionServiceImp definition.proto
func RegisterDefinitionServiceImp(regester transport.Register, srv DefinitionServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterDefinitionServiceHandler(regester, DefinitionServiceHandler(srv), _ops.HTTP...)
	RegisterDefinitionServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.pipeline.definition.DefinitionService",
	)
}

var (
	definitionServiceClientType  = reflect.TypeOf((*DefinitionServiceClient)(nil)).Elem()
	definitionServiceServerType  = reflect.TypeOf((*DefinitionServiceServer)(nil)).Elem()
	definitionServiceHandlerType = reflect.TypeOf((*DefinitionServiceHandler)(nil)).Elem()
)

// DefinitionServiceClientType .
func DefinitionServiceClientType() reflect.Type { return definitionServiceClientType }

// DefinitionServiceServerType .
func DefinitionServiceServerType() reflect.Type { return definitionServiceServerType }

// DefinitionServiceHandlerType .
func DefinitionServiceHandlerType() reflect.Type { return definitionServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		definitionServiceClientType,
		// server types
		definitionServiceServerType,
		// handler types
		definitionServiceHandlerType,
	}
}
