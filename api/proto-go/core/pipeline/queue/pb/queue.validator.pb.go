// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: queue.proto

package pb

import (
	fmt "fmt"
	math "math"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *QueueDeleteRequest) Validate() error {
	return nil
}
func (this *QueueDeleteResponse) Validate() error {
	return nil
}
func (this *QueueUpdateRequest) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	if this.IdentityInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.IdentityInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("IdentityInfo", err)
		}
	}
	return nil
}
func (this *QueueUpdateResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *QueuePagingRequest) Validate() error {
	return nil
}
func (this *QueuePagingResponse) Validate() error {
	for _, item := range this.Queues {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Queues", err)
			}
		}
	}
	return nil
}
func (this *QueueGetRequest) Validate() error {
	return nil
}
func (this *QueueGetResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *QueueCreateRequest) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	if this.IdentityInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.IdentityInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("IdentityInfo", err)
		}
	}
	return nil
}
func (this *QueueCreateResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *Queue) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	if this.TimeCreated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeCreated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeCreated", err)
		}
	}
	if this.TimeUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeUpdated", err)
		}
	}
	if this.Usage != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Usage); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Usage", err)
		}
	}
	return nil
}
func (this *QueueUsage) Validate() error {
	for _, item := range this.ProcessingDetails {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ProcessingDetails", err)
			}
		}
	}
	for _, item := range this.PendingDetails {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PendingDetails", err)
			}
		}
	}
	return nil
}
func (this *QueueUsageItem) Validate() error {
	if this.AddedTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AddedTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AddedTime", err)
		}
	}
	return nil
}
