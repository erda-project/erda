// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: queue.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*QueueDeleteRequest)(nil)
var _ json.Unmarshaler = (*QueueDeleteRequest)(nil)
var _ json.Marshaler = (*QueueDeleteResponse)(nil)
var _ json.Unmarshaler = (*QueueDeleteResponse)(nil)
var _ json.Marshaler = (*QueueUpdateRequest)(nil)
var _ json.Unmarshaler = (*QueueUpdateRequest)(nil)
var _ json.Marshaler = (*QueueUpdateResponse)(nil)
var _ json.Unmarshaler = (*QueueUpdateResponse)(nil)
var _ json.Marshaler = (*QueuePagingRequest)(nil)
var _ json.Unmarshaler = (*QueuePagingRequest)(nil)
var _ json.Marshaler = (*QueuePagingResponse)(nil)
var _ json.Unmarshaler = (*QueuePagingResponse)(nil)
var _ json.Marshaler = (*QueueGetRequest)(nil)
var _ json.Unmarshaler = (*QueueGetRequest)(nil)
var _ json.Marshaler = (*QueueGetResponse)(nil)
var _ json.Unmarshaler = (*QueueGetResponse)(nil)
var _ json.Marshaler = (*QueueCreateRequest)(nil)
var _ json.Unmarshaler = (*QueueCreateRequest)(nil)
var _ json.Marshaler = (*QueueCreateResponse)(nil)
var _ json.Unmarshaler = (*QueueCreateResponse)(nil)
var _ json.Marshaler = (*Queue)(nil)
var _ json.Unmarshaler = (*Queue)(nil)
var _ json.Marshaler = (*QueueUsage)(nil)
var _ json.Unmarshaler = (*QueueUsage)(nil)
var _ json.Marshaler = (*QueueUsageItem)(nil)
var _ json.Unmarshaler = (*QueueUsageItem)(nil)

// QueueDeleteRequest implement json.Marshaler.
func (m *QueueDeleteRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueDeleteRequest implement json.Marshaler.
func (m *QueueDeleteRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueDeleteResponse implement json.Marshaler.
func (m *QueueDeleteResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueDeleteResponse implement json.Marshaler.
func (m *QueueDeleteResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueUpdateRequest implement json.Marshaler.
func (m *QueueUpdateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueUpdateRequest implement json.Marshaler.
func (m *QueueUpdateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueUpdateResponse implement json.Marshaler.
func (m *QueueUpdateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueUpdateResponse implement json.Marshaler.
func (m *QueueUpdateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueuePagingRequest implement json.Marshaler.
func (m *QueuePagingRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueuePagingRequest implement json.Marshaler.
func (m *QueuePagingRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueuePagingResponse implement json.Marshaler.
func (m *QueuePagingResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueuePagingResponse implement json.Marshaler.
func (m *QueuePagingResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueGetRequest implement json.Marshaler.
func (m *QueueGetRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueGetRequest implement json.Marshaler.
func (m *QueueGetRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueGetResponse implement json.Marshaler.
func (m *QueueGetResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueGetResponse implement json.Marshaler.
func (m *QueueGetResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueCreateRequest implement json.Marshaler.
func (m *QueueCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueCreateRequest implement json.Marshaler.
func (m *QueueCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueCreateResponse implement json.Marshaler.
func (m *QueueCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueCreateResponse implement json.Marshaler.
func (m *QueueCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Queue implement json.Marshaler.
func (m *Queue) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Queue implement json.Marshaler.
func (m *Queue) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueUsage implement json.Marshaler.
func (m *QueueUsage) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueUsage implement json.Marshaler.
func (m *QueueUsage) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// QueueUsageItem implement json.Marshaler.
func (m *QueueUsageItem) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// QueueUsageItem implement json.Marshaler.
func (m *QueueUsageItem) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
