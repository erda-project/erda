// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: source.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*PipelineSource)(nil)
var _ json.Unmarshaler = (*PipelineSource)(nil)
var _ json.Marshaler = (*PipelineSourceCreateRequest)(nil)
var _ json.Unmarshaler = (*PipelineSourceCreateRequest)(nil)
var _ json.Marshaler = (*PipelineSourceCreateResponse)(nil)
var _ json.Unmarshaler = (*PipelineSourceCreateResponse)(nil)
var _ json.Marshaler = (*PipelineSourceUpdateRequest)(nil)
var _ json.Unmarshaler = (*PipelineSourceUpdateRequest)(nil)
var _ json.Marshaler = (*PipelineSourceUpdateResponse)(nil)
var _ json.Unmarshaler = (*PipelineSourceUpdateResponse)(nil)
var _ json.Marshaler = (*PipelineSourceDeleteRequest)(nil)
var _ json.Unmarshaler = (*PipelineSourceDeleteRequest)(nil)
var _ json.Marshaler = (*PipelineSourceDeleteResponse)(nil)
var _ json.Unmarshaler = (*PipelineSourceDeleteResponse)(nil)
var _ json.Marshaler = (*PipelineSourceGetRequest)(nil)
var _ json.Unmarshaler = (*PipelineSourceGetRequest)(nil)
var _ json.Marshaler = (*PipelineSourceGetResponse)(nil)
var _ json.Unmarshaler = (*PipelineSourceGetResponse)(nil)
var _ json.Marshaler = (*PipelineSourceListRequest)(nil)
var _ json.Unmarshaler = (*PipelineSourceListRequest)(nil)
var _ json.Marshaler = (*PipelineSourceListResponse)(nil)
var _ json.Unmarshaler = (*PipelineSourceListResponse)(nil)

// PipelineSource implement json.Marshaler.
func (m *PipelineSource) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSource implement json.Marshaler.
func (m *PipelineSource) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceCreateRequest implement json.Marshaler.
func (m *PipelineSourceCreateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceCreateRequest implement json.Marshaler.
func (m *PipelineSourceCreateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceCreateResponse implement json.Marshaler.
func (m *PipelineSourceCreateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceCreateResponse implement json.Marshaler.
func (m *PipelineSourceCreateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceUpdateRequest implement json.Marshaler.
func (m *PipelineSourceUpdateRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceUpdateRequest implement json.Marshaler.
func (m *PipelineSourceUpdateRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceUpdateResponse implement json.Marshaler.
func (m *PipelineSourceUpdateResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceUpdateResponse implement json.Marshaler.
func (m *PipelineSourceUpdateResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceDeleteRequest implement json.Marshaler.
func (m *PipelineSourceDeleteRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceDeleteRequest implement json.Marshaler.
func (m *PipelineSourceDeleteRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceDeleteResponse implement json.Marshaler.
func (m *PipelineSourceDeleteResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceDeleteResponse implement json.Marshaler.
func (m *PipelineSourceDeleteResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceGetRequest implement json.Marshaler.
func (m *PipelineSourceGetRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceGetRequest implement json.Marshaler.
func (m *PipelineSourceGetRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceGetResponse implement json.Marshaler.
func (m *PipelineSourceGetResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceGetResponse implement json.Marshaler.
func (m *PipelineSourceGetResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceListRequest implement json.Marshaler.
func (m *PipelineSourceListRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceListRequest implement json.Marshaler.
func (m *PipelineSourceListRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PipelineSourceListResponse implement json.Marshaler.
func (m *PipelineSourceListResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PipelineSourceListResponse implement json.Marshaler.
func (m *PipelineSourceListResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
