// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: action.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterActionServiceImp action.proto
func RegisterActionServiceImp(regester transport.Register, srv ActionServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterActionServiceHandler(regester, ActionServiceHandler(srv), _ops.HTTP...)
	RegisterActionServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.pipeline.action.ActionService",
	)
}

var (
	actionServiceClientType  = reflect.TypeOf((*ActionServiceClient)(nil)).Elem()
	actionServiceServerType  = reflect.TypeOf((*ActionServiceServer)(nil)).Elem()
	actionServiceHandlerType = reflect.TypeOf((*ActionServiceHandler)(nil)).Elem()
)

// ActionServiceClientType .
func ActionServiceClientType() reflect.Type { return actionServiceClientType }

// ActionServiceServerType .
func ActionServiceServerType() reflect.Type { return actionServiceServerType }

// ActionServiceHandlerType .
func ActionServiceHandlerType() reflect.Type { return actionServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		actionServiceClientType,
		// server types
		actionServiceServerType,
		// handler types
		actionServiceHandlerType,
	}
}
