// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: lifecycle_hook_client.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/pipeline/lifecycle_hook_client/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// LifeCycleService lifecycle_hook_client.proto
	LifeCycleService() pb.LifeCycleServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		lifeCycleService: pb.NewLifeCycleServiceClient(cc),
	}
}

type serviceClients struct {
	lifeCycleService pb.LifeCycleServiceClient
}

func (c *serviceClients) LifeCycleService() pb.LifeCycleServiceClient {
	return c.lifeCycleService
}

type lifeCycleServiceWrapper struct {
	client pb.LifeCycleServiceClient
	opts   []grpc1.CallOption
}

func (s *lifeCycleServiceWrapper) LifeCycleRegister(ctx context.Context, req *pb.LifeCycleClientRegisterRequest) (*pb.LifeCycleClientRegisterResponse, error) {
	return s.client.LifeCycleRegister(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
