// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: task_error.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/dop/taskerror/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// TaskErrorService task_error.proto
	TaskErrorService() pb.TaskErrorServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		taskErrorService: pb.NewTaskErrorServiceClient(cc),
	}
}

type serviceClients struct {
	taskErrorService pb.TaskErrorServiceClient
}

func (c *serviceClients) TaskErrorService() pb.TaskErrorServiceClient {
	return c.taskErrorService
}

type taskErrorServiceWrapper struct {
	client pb.TaskErrorServiceClient
	opts   []grpc1.CallOption
}

func (s *taskErrorServiceWrapper) ListErrorLog(ctx context.Context, req *pb.ErrorLogListRequest) (*pb.ErrorLogListResponseData, error) {
	return s.client.ListErrorLog(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
