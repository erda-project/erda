// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: marketplace.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/admin/marketplace/pb"
	pb1 "github.com/erda-project/erda-proto-go/common/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// Marketplace marketplace.proto
	Marketplace() pb.MarketplaceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		marketplace: pb.NewMarketplaceClient(cc),
	}
}

type serviceClients struct {
	marketplace pb.MarketplaceClient
}

func (c *serviceClients) Marketplace() pb.MarketplaceClient {
	return c.marketplace
}

type marketplaceWrapper struct {
	client pb.MarketplaceClient
	opts   []grpc1.CallOption
}

func (s *marketplaceWrapper) ListGalleries(ctx context.Context, req *pb.ListGalleriesReq) (*pb.ListGalleriesResp, error) {
	return s.client.ListGalleries(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *marketplaceWrapper) CreateGallery(ctx context.Context, req *pb.CreateGalleryReq) (*pb1.VoidResponse, error) {
	return s.client.CreateGallery(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *marketplaceWrapper) GetGallery(ctx context.Context, req *pb.GetGalleryReq) (*pb.GetGalleryResp, error) {
	return s.client.GetGallery(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *marketplaceWrapper) DeleteGallery(ctx context.Context, req *pb.DeleteGalleryReq) (*pb1.VoidResponse, error) {
	return s.client.DeleteGallery(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
