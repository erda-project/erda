// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: marketplace.proto

package pb

import (
	fmt "fmt"
	math "math"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ListGalleriesReq) Validate() error {
	return nil
}
func (this *ListGalleriesResp) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ListGalleriesRespData) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ListGalleriesRespDataItem) Validate() error {
	if this.Publisher != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Publisher); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Publisher", err)
		}
	}
	return nil
}
func (this *User) Validate() error {
	return nil
}
func (this *GetGalleryResp) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *GetGalleryRespData) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}
func (this *GetGalleryRespDataItem) Validate() error {
	if this.Dice != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Dice); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Dice", err)
		}
	}
	if this.Spec != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Spec); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Spec", err)
		}
	}
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.Publisher != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Publisher); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Publisher", err)
		}
	}
	for _, item := range this.Params {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Params", err)
			}
		}
	}
	for _, item := range this.Outputs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Outputs", err)
			}
		}
	}
	return nil
}
func (this *ActionParam) Validate() error {
	return nil
}
func (this *ActionOutputs) Validate() error {
	return nil
}
func (this *GetGalleryReq) Validate() error {
	return nil
}
func (this *DeleteGalleryReq) Validate() error {
	return nil
}
func (this *CreateGalleryReq) Validate() error {
	if this.Spec != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Spec); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Spec", err)
		}
	}
	return nil
}
func (this *CreateGalleryReq_ReleaseSpec) Validate() error {
	return nil
}
