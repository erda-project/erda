// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: marketplace.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterMarketplaceImp marketplace.proto
func RegisterMarketplaceImp(regester transport.Register, srv MarketplaceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMarketplaceHandler(regester, MarketplaceHandler(srv), _ops.HTTP...)
	RegisterMarketplaceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.admin.marketplace.Marketplace",
	)
}

var (
	marketplaceClientType  = reflect.TypeOf((*MarketplaceClient)(nil)).Elem()
	marketplaceServerType  = reflect.TypeOf((*MarketplaceServer)(nil)).Elem()
	marketplaceHandlerType = reflect.TypeOf((*MarketplaceHandler)(nil)).Elem()
)

// MarketplaceClientType .
func MarketplaceClientType() reflect.Type { return marketplaceClientType }

// MarketplaceServerType .
func MarketplaceServerType() reflect.Type { return marketplaceServerType }

// MarketplaceHandlerType .
func MarketplaceHandlerType() reflect.Type { return marketplaceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		marketplaceClientType,
		// server types
		marketplaceServerType,
		// handler types
		marketplaceHandlerType,
	}
}
