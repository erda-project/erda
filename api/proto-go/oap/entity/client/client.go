// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: entity.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/oap/entity/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// EntityService entity.proto
	EntityService() pb.EntityServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		entityService: pb.NewEntityServiceClient(cc),
	}
}

type serviceClients struct {
	entityService pb.EntityServiceClient
}

func (c *serviceClients) EntityService() pb.EntityServiceClient {
	return c.entityService
}

type entityServiceWrapper struct {
	client pb.EntityServiceClient
	opts   []grpc1.CallOption
}

func (s *entityServiceWrapper) SetEntity(ctx context.Context, req *pb.SetEntityRequest) (*pb.SetEntityResponse, error) {
	return s.client.SetEntity(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *entityServiceWrapper) RemoveEntity(ctx context.Context, req *pb.RemoveEntityRequest) (*pb.RemoveEntityResponse, error) {
	return s.client.RemoveEntity(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *entityServiceWrapper) GetEntity(ctx context.Context, req *pb.GetEntityRequest) (*pb.GetEntityResponse, error) {
	return s.client.GetEntity(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *entityServiceWrapper) ListEntities(ctx context.Context, req *pb.ListEntitiesRequest) (*pb.ListEntitiesResponse, error) {
	return s.client.ListEntities(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
