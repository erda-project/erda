// Copyright (c) 2021 Terminus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-form. DO NOT EDIT.
// Source: common.proto

package pb

import (
	url "net/url"

	urlenc "github.com/erda-project/erda-infra/pkg/urlenc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "github.com/erda-project/erda-infra/pkg/urlenc" package it is being compiled against.
var _ urlenc.URLValuesUnmarshaler = (*Relation)(nil)
var _ urlenc.URLValuesUnmarshaler = (*Principal)(nil)

// Relation implement urlenc.URLValuesUnmarshaler.
func (m *Relation) UnmarshalURLValues(prefix string, values url.Values) error {
	for key, vals := range values {
		if len(vals) > 0 {
			switch prefix + key {
			case "traceID":
				m.TraceID = vals[0]
			case "resID":
				m.ResID = vals[0]
			case "resType":
				m.ResType = vals[0]
			case "resourceKeys":
				m.ResourceKeys = vals
			}
		}
	}
	return nil
}

// Principal implement urlenc.URLValuesUnmarshaler.
func (m *Principal) UnmarshalURLValues(prefix string, values url.Values) error {
	for key, vals := range values {
		if len(vals) > 0 {
			switch prefix + key {
			case "identity":
				m.Identity = vals[0]
			case "accessKey":
				m.AccessKey = vals[0]
			case "accessSecret":
				m.AccessSecret = vals[0]
			}
		}
	}
	return nil
}
