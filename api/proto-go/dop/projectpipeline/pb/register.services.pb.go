// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: projectpipeline.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterProjectPipelineServiceImp projectpipeline.proto
func RegisterProjectPipelineServiceImp(regester transport.Register, srv ProjectPipelineServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterProjectPipelineServiceHandler(regester, ProjectPipelineServiceHandler(srv), _ops.HTTP...)
	RegisterProjectPipelineServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.dop.projectpipeline.ProjectPipelineService",
	)
}

var (
	projectPipelineServiceClientType  = reflect.TypeOf((*ProjectPipelineServiceClient)(nil)).Elem()
	projectPipelineServiceServerType  = reflect.TypeOf((*ProjectPipelineServiceServer)(nil)).Elem()
	projectPipelineServiceHandlerType = reflect.TypeOf((*ProjectPipelineServiceHandler)(nil)).Elem()
)

// ProjectPipelineServiceClientType .
func ProjectPipelineServiceClientType() reflect.Type { return projectPipelineServiceClientType }

// ProjectPipelineServiceServerType .
func ProjectPipelineServiceServerType() reflect.Type { return projectPipelineServiceServerType }

// ProjectPipelineServiceHandlerType .
func ProjectPipelineServiceHandlerType() reflect.Type { return projectPipelineServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		projectPipelineServiceClientType,
		// server types
		projectPipelineServiceServerType,
		// handler types
		projectPipelineServiceHandlerType,
	}
}
