// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: unittest.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*TestRecordPagingRequest)(nil)
var _ json.Unmarshaler = (*TestRecordPagingRequest)(nil)
var _ json.Marshaler = (*TestRecordPagingResponse)(nil)
var _ json.Unmarshaler = (*TestRecordPagingResponse)(nil)
var _ json.Marshaler = (*TestRecordPagingResult)(nil)
var _ json.Unmarshaler = (*TestRecordPagingResult)(nil)
var _ json.Marshaler = (*TestRecordGetRequest)(nil)
var _ json.Unmarshaler = (*TestRecordGetRequest)(nil)
var _ json.Marshaler = (*TestRecordGetResponse)(nil)
var _ json.Unmarshaler = (*TestRecordGetResponse)(nil)
var _ json.Marshaler = (*TestRecord)(nil)
var _ json.Unmarshaler = (*TestRecord)(nil)
var _ json.Marshaler = (*TestTypeRequest)(nil)
var _ json.Unmarshaler = (*TestTypeRequest)(nil)
var _ json.Marshaler = (*TestTypeResponse)(nil)
var _ json.Unmarshaler = (*TestTypeResponse)(nil)
var _ json.Marshaler = (*TestCallBackRequest)(nil)
var _ json.Unmarshaler = (*TestCallBackRequest)(nil)
var _ json.Marshaler = (*TestResult)(nil)
var _ json.Unmarshaler = (*TestResult)(nil)
var _ json.Marshaler = (*TestError)(nil)
var _ json.Unmarshaler = (*TestError)(nil)
var _ json.Marshaler = (*Test)(nil)
var _ json.Unmarshaler = (*Test)(nil)
var _ json.Marshaler = (*TestTotal)(nil)
var _ json.Unmarshaler = (*TestTotal)(nil)
var _ json.Marshaler = (*TestSuite)(nil)
var _ json.Unmarshaler = (*TestSuite)(nil)
var _ json.Marshaler = (*ToolTip)(nil)
var _ json.Unmarshaler = (*ToolTip)(nil)
var _ json.Marshaler = (*CodeCoverageNode)(nil)
var _ json.Unmarshaler = (*CodeCoverageNode)(nil)
var _ json.Marshaler = (*ReportCounter)(nil)
var _ json.Unmarshaler = (*ReportCounter)(nil)
var _ json.Marshaler = (*ReportPackage)(nil)
var _ json.Unmarshaler = (*ReportPackage)(nil)
var _ json.Marshaler = (*ReportClass)(nil)
var _ json.Unmarshaler = (*ReportClass)(nil)
var _ json.Marshaler = (*ReportMethod)(nil)
var _ json.Unmarshaler = (*ReportMethod)(nil)
var _ json.Marshaler = (*TestCallBackResponse)(nil)
var _ json.Unmarshaler = (*TestCallBackResponse)(nil)

// TestRecordPagingRequest implement json.Marshaler.
func (m *TestRecordPagingRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestRecordPagingRequest implement json.Marshaler.
func (m *TestRecordPagingRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestRecordPagingResponse implement json.Marshaler.
func (m *TestRecordPagingResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestRecordPagingResponse implement json.Marshaler.
func (m *TestRecordPagingResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestRecordPagingResult implement json.Marshaler.
func (m *TestRecordPagingResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestRecordPagingResult implement json.Marshaler.
func (m *TestRecordPagingResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestRecordGetRequest implement json.Marshaler.
func (m *TestRecordGetRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestRecordGetRequest implement json.Marshaler.
func (m *TestRecordGetRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestRecordGetResponse implement json.Marshaler.
func (m *TestRecordGetResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestRecordGetResponse implement json.Marshaler.
func (m *TestRecordGetResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestRecord implement json.Marshaler.
func (m *TestRecord) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestRecord implement json.Marshaler.
func (m *TestRecord) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestTypeRequest implement json.Marshaler.
func (m *TestTypeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestTypeRequest implement json.Marshaler.
func (m *TestTypeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestTypeResponse implement json.Marshaler.
func (m *TestTypeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestTypeResponse implement json.Marshaler.
func (m *TestTypeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCallBackRequest implement json.Marshaler.
func (m *TestCallBackRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCallBackRequest implement json.Marshaler.
func (m *TestCallBackRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestResult implement json.Marshaler.
func (m *TestResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestResult implement json.Marshaler.
func (m *TestResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestError implement json.Marshaler.
func (m *TestError) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestError implement json.Marshaler.
func (m *TestError) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Test implement json.Marshaler.
func (m *Test) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Test implement json.Marshaler.
func (m *Test) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestTotal implement json.Marshaler.
func (m *TestTotal) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestTotal implement json.Marshaler.
func (m *TestTotal) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestSuite implement json.Marshaler.
func (m *TestSuite) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestSuite implement json.Marshaler.
func (m *TestSuite) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ToolTip implement json.Marshaler.
func (m *ToolTip) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ToolTip implement json.Marshaler.
func (m *ToolTip) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CodeCoverageNode implement json.Marshaler.
func (m *CodeCoverageNode) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CodeCoverageNode implement json.Marshaler.
func (m *CodeCoverageNode) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ReportCounter implement json.Marshaler.
func (m *ReportCounter) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ReportCounter implement json.Marshaler.
func (m *ReportCounter) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ReportPackage implement json.Marshaler.
func (m *ReportPackage) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ReportPackage implement json.Marshaler.
func (m *ReportPackage) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ReportClass implement json.Marshaler.
func (m *ReportClass) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ReportClass implement json.Marshaler.
func (m *ReportClass) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ReportMethod implement json.Marshaler.
func (m *ReportMethod) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ReportMethod implement json.Marshaler.
func (m *ReportMethod) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// TestCallBackResponse implement json.Marshaler.
func (m *TestCallBackResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// TestCallBackResponse implement json.Marshaler.
func (m *TestCallBackResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
