// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: unittest.proto

package pb

import (
	fmt "fmt"
	math "math"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *TestRecordPagingRequest) Validate() error {
	return nil
}
func (this *TestRecordPagingResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *TestRecordPagingResult) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}
func (this *TestRecordGetRequest) Validate() error {
	return nil
}
func (this *TestRecordGetResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *TestRecord) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.Totals != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Totals); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Totals", err)
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	// Validation of proto3 map<> fields is unsupported.
	for _, item := range this.Suites {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Suites", err)
			}
		}
	}
	for _, item := range this.CoverageReport {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CoverageReport", err)
			}
		}
	}
	return nil
}
func (this *TestTypeRequest) Validate() error {
	return nil
}
func (this *TestTypeResponse) Validate() error {
	return nil
}
func (this *TestCallBackRequest) Validate() error {
	if this.Results != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Results); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Results", err)
		}
	}
	if this.Totals != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Totals); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Totals", err)
		}
	}
	for _, item := range this.Suites {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Suites", err)
			}
		}
	}
	for _, item := range this.CoverageReport {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CoverageReport", err)
			}
		}
	}
	return nil
}
func (this *TestResult) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *TestError) Validate() error {
	return nil
}
func (this *Test) Validate() error {
	if this.Error != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Error); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Error", err)
		}
	}
	return nil
}
func (this *TestTotal) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *TestSuite) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	for _, item := range this.Tests {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tests", err)
			}
		}
	}
	if this.Totals != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Totals); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Totals", err)
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *ToolTip) Validate() error {
	return nil
}
func (this *CodeCoverageNode) Validate() error {
	if this.Tooltip != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tooltip); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tooltip", err)
		}
	}
	for _, item := range this.Children {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Children", err)
			}
		}
	}
	for _, item := range this.Counter {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Counter", err)
			}
		}
	}
	return nil
}
func (this *ReportCounter) Validate() error {
	return nil
}
func (this *ReportPackage) Validate() error {
	for _, item := range this.Class {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Class", err)
			}
		}
	}
	for _, item := range this.Counter {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Counter", err)
			}
		}
	}
	return nil
}
func (this *ReportClass) Validate() error {
	for _, item := range this.Method {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Method", err)
			}
		}
	}
	for _, item := range this.Counter {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Counter", err)
			}
		}
	}
	return nil
}
func (this *ReportMethod) Validate() error {
	for _, item := range this.Counter {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Counter", err)
			}
		}
	}
	return nil
}
func (this *TestCallBackResponse) Validate() error {
	return nil
}
