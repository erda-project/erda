// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: apim.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterExportRecordsImp apim.proto
func RegisterExportRecordsImp(regester transport.Register, srv ExportRecordsServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterExportRecordsHandler(regester, ExportRecordsHandler(srv), _ops.HTTP...)
	RegisterExportRecordsServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.dop.apim.ExportRecords",
	)
}

var (
	exportRecordsClientType  = reflect.TypeOf((*ExportRecordsClient)(nil)).Elem()
	exportRecordsServerType  = reflect.TypeOf((*ExportRecordsServer)(nil)).Elem()
	exportRecordsHandlerType = reflect.TypeOf((*ExportRecordsHandler)(nil)).Elem()
)

// ExportRecordsClientType .
func ExportRecordsClientType() reflect.Type { return exportRecordsClientType }

// ExportRecordsServerType .
func ExportRecordsServerType() reflect.Type { return exportRecordsServerType }

// ExportRecordsHandlerType .
func ExportRecordsHandlerType() reflect.Type { return exportRecordsHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		exportRecordsClientType,
		// server types
		exportRecordsServerType,
		// handler types
		exportRecordsHandlerType,
	}
}
