// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: apim.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/dop/apim/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// ExportRecords apim.proto
	ExportRecords() pb.ExportRecordsClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		exportRecords: pb.NewExportRecordsClient(cc),
	}
}

type serviceClients struct {
	exportRecords pb.ExportRecordsClient
}

func (c *serviceClients) ExportRecords() pb.ExportRecordsClient {
	return c.exportRecords
}

type exportRecordsWrapper struct {
	client pb.ExportRecordsClient
	opts   []grpc1.CallOption
}

func (s *exportRecordsWrapper) CreateExportRecord(ctx context.Context, req *pb.CreateExportRecordsReq) (*pb.CreateExportRecordsResp, error) {
	return s.client.CreateExportRecord(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *exportRecordsWrapper) ListExportRecords(ctx context.Context, req *pb.ListExportRecordsReq) (*pb.ListExportRecordsResp, error) {
	return s.client.ListExportRecords(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *exportRecordsWrapper) DeleteExportRecord(ctx context.Context, req *pb.DeleteExportRecordReq) (*pb.Empty, error) {
	return s.client.DeleteExportRecord(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
