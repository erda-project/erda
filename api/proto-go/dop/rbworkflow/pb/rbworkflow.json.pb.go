// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: rbworkflow.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*CreateRbWorkflowRequest)(nil)
var _ json.Unmarshaler = (*CreateRbWorkflowRequest)(nil)
var _ json.Marshaler = (*CreateRbWorkflowResponse)(nil)
var _ json.Unmarshaler = (*CreateRbWorkflowResponse)(nil)
var _ json.Marshaler = (*UpdateRbWorkflowRequest)(nil)
var _ json.Unmarshaler = (*UpdateRbWorkflowRequest)(nil)
var _ json.Marshaler = (*UpdateRbWorkflowResponse)(nil)
var _ json.Unmarshaler = (*UpdateRbWorkflowResponse)(nil)
var _ json.Marshaler = (*DeleteRbWorkflowRequest)(nil)
var _ json.Unmarshaler = (*DeleteRbWorkflowRequest)(nil)
var _ json.Marshaler = (*DeleteRbWorkflowResponse)(nil)
var _ json.Unmarshaler = (*DeleteRbWorkflowResponse)(nil)
var _ json.Marshaler = (*ListRbWorkflowRequest)(nil)
var _ json.Unmarshaler = (*ListRbWorkflowRequest)(nil)
var _ json.Marshaler = (*ListRbWorkflowResponse)(nil)
var _ json.Unmarshaler = (*ListRbWorkflowResponse)(nil)
var _ json.Marshaler = (*RbWorkflow)(nil)
var _ json.Unmarshaler = (*RbWorkflow)(nil)

// CreateRbWorkflowRequest implement json.Marshaler.
func (m *CreateRbWorkflowRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateRbWorkflowRequest implement json.Marshaler.
func (m *CreateRbWorkflowRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CreateRbWorkflowResponse implement json.Marshaler.
func (m *CreateRbWorkflowResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateRbWorkflowResponse implement json.Marshaler.
func (m *CreateRbWorkflowResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// UpdateRbWorkflowRequest implement json.Marshaler.
func (m *UpdateRbWorkflowRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// UpdateRbWorkflowRequest implement json.Marshaler.
func (m *UpdateRbWorkflowRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// UpdateRbWorkflowResponse implement json.Marshaler.
func (m *UpdateRbWorkflowResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// UpdateRbWorkflowResponse implement json.Marshaler.
func (m *UpdateRbWorkflowResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteRbWorkflowRequest implement json.Marshaler.
func (m *DeleteRbWorkflowRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteRbWorkflowRequest implement json.Marshaler.
func (m *DeleteRbWorkflowRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteRbWorkflowResponse implement json.Marshaler.
func (m *DeleteRbWorkflowResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteRbWorkflowResponse implement json.Marshaler.
func (m *DeleteRbWorkflowResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListRbWorkflowRequest implement json.Marshaler.
func (m *ListRbWorkflowRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListRbWorkflowRequest implement json.Marshaler.
func (m *ListRbWorkflowRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListRbWorkflowResponse implement json.Marshaler.
func (m *ListRbWorkflowResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListRbWorkflowResponse implement json.Marshaler.
func (m *ListRbWorkflowResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// RbWorkflow implement json.Marshaler.
func (m *RbWorkflow) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// RbWorkflow implement json.Marshaler.
func (m *RbWorkflow) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
