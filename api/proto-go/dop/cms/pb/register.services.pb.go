// Copyright (c) 2021 Terminus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: cicdcms.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterCICDCmsServiceImp cicdcms.proto
func RegisterCICDCmsServiceImp(regester transport.Register, srv CICDCmsServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterCICDCmsServiceHandler(regester, CICDCmsServiceHandler(srv), _ops.HTTP...)
	RegisterCICDCmsServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.dop.cms.CICDCmsService",
	)
}

var (
	cicdcmsServiceClientType  = reflect.TypeOf((*CICDCmsServiceClient)(nil)).Elem()
	cicdcmsServiceServerType  = reflect.TypeOf((*CICDCmsServiceServer)(nil)).Elem()
	cicdcmsServiceHandlerType = reflect.TypeOf((*CICDCmsServiceHandler)(nil)).Elem()
)

// CICDCmsServiceClientType .
func CICDCmsServiceClientType() reflect.Type { return cicdcmsServiceClientType }

// CICDCmsServiceServerType .
func CICDCmsServiceServerType() reflect.Type { return cicdcmsServiceServerType }

// CICDCmsServiceHandlerType .
func CICDCmsServiceHandlerType() reflect.Type { return cicdcmsServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		cicdcmsServiceClientType,
		// server types
		cicdcmsServiceServerType,
		// handler types
		cicdcmsServiceHandlerType,
	}
}
