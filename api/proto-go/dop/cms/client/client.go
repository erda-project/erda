// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: cicdcms.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/dop/cms/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// CICDCmsService cicdcms.proto
	CICDCmsService() pb.CICDCmsServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		cicdcmsService: pb.NewCICDCmsServiceClient(cc),
	}
}

type serviceClients struct {
	cicdcmsService pb.CICDCmsServiceClient
}

func (c *serviceClients) CICDCmsService() pb.CICDCmsServiceClient {
	return c.cicdcmsService
}

type cicdcmsServiceWrapper struct {
	client pb.CICDCmsServiceClient
	opts   []grpc1.CallOption
}

func (s *cicdcmsServiceWrapper) CICDCmsUpdate(ctx context.Context, req *pb.CICDCmsUpdateRequest) (*pb.CICDCmsUpdateResponse, error) {
	return s.client.CICDCmsUpdate(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *cicdcmsServiceWrapper) CICDCmsCreate(ctx context.Context, req *pb.CICDCmsCreateRequest) (*pb.CICDCmsCreateResponse, error) {
	return s.client.CICDCmsCreate(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *cicdcmsServiceWrapper) CICDCmsDelete(ctx context.Context, req *pb.CICDCmsDeleteRequest) (*pb.CICDCmsDeleteResponse, error) {
	return s.client.CICDCmsDelete(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
