// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: devworkflow.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterDevWorkflowServiceImp devworkflow.proto
func RegisterDevWorkflowServiceImp(regester transport.Register, srv DevWorkflowServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterDevWorkflowServiceHandler(regester, DevWorkflowServiceHandler(srv), _ops.HTTP...)
	RegisterDevWorkflowServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.dop.devworkflow.DevWorkflowService",
	)
}

var (
	devWorkflowServiceClientType  = reflect.TypeOf((*DevWorkflowServiceClient)(nil)).Elem()
	devWorkflowServiceServerType  = reflect.TypeOf((*DevWorkflowServiceServer)(nil)).Elem()
	devWorkflowServiceHandlerType = reflect.TypeOf((*DevWorkflowServiceHandler)(nil)).Elem()
)

// DevWorkflowServiceClientType .
func DevWorkflowServiceClientType() reflect.Type { return devWorkflowServiceClientType }

// DevWorkflowServiceServerType .
func DevWorkflowServiceServerType() reflect.Type { return devWorkflowServiceServerType }

// DevWorkflowServiceHandlerType .
func DevWorkflowServiceHandlerType() reflect.Type { return devWorkflowServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		devWorkflowServiceClientType,
		// server types
		devWorkflowServiceServerType,
		// handler types
		devWorkflowServiceHandlerType,
	}
}
