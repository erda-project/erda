// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: guide.proto

package pb

import (
	fmt "fmt"
	math "math"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ListGuideRequest) Validate() error {
	if this.Kind == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Kind", fmt.Errorf(`value '%v' must not be an empty string`, this.Kind))
	}
	if !(this.ProjectID > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("ProjectID", fmt.Errorf(`value '%v' must be greater than '0'`, this.ProjectID))
	}
	return nil
}
func (this *ListGuideResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *Guide) Validate() error {
	if this.TimeCreated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeCreated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeCreated", err)
		}
	}
	if this.TimeUpdated != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TimeUpdated); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TimeUpdated", err)
		}
	}
	return nil
}
func (this *GittarPushPayloadEvent) Validate() error {
	if this.Content != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Content); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Content", err)
		}
	}
	return nil
}
func (this *Content) Validate() error {
	if this.Pusher != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pusher); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pusher", err)
		}
	}
	return nil
}
func (this *Pusher) Validate() error {
	return nil
}
func (this *CreateGuideResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ProcessGuideRequest) Validate() error {
	if this.Kind == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Kind", fmt.Errorf(`value '%v' must not be an empty string`, this.Kind))
	}
	return nil
}
func (this *ProcessGuideResponse) Validate() error {
	return nil
}
func (this *DeleteGuideResponse) Validate() error {
	return nil
}
func (this *CancelGuideRequest) Validate() error {
	if this.ID == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ID", fmt.Errorf(`value '%v' must not be an empty string`, this.ID))
	}
	return nil
}
func (this *CancelGuideResponse) Validate() error {
	return nil
}
