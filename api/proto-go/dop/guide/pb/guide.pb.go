// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: guide.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListGuideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind      string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	ProjectID uint64 `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
}

func (x *ListGuideRequest) Reset() {
	*x = ListGuideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGuideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGuideRequest) ProtoMessage() {}

func (x *ListGuideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGuideRequest.ProtoReflect.Descriptor instead.
func (*ListGuideRequest) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{0}
}

func (x *ListGuideRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ListGuideRequest) GetProjectID() uint64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type ListGuideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Guide `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListGuideResponse) Reset() {
	*x = ListGuideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGuideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGuideResponse) ProtoMessage() {}

func (x *ListGuideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGuideResponse.ProtoReflect.Descriptor instead.
func (*ListGuideResponse) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{1}
}

func (x *ListGuideResponse) GetData() []*Guide {
	if x != nil {
		return x.Data
	}
	return nil
}

type Guide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                 `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Status      string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Creator     string                 `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Kind        string                 `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	OrgID       uint64                 `protobuf:"varint,5,opt,name=orgID,proto3" json:"orgID,omitempty"`
	OrgName     string                 `protobuf:"bytes,6,opt,name=orgName,proto3" json:"orgName,omitempty"`
	ProjectID   uint64                 `protobuf:"varint,7,opt,name=projectID,proto3" json:"projectID,omitempty"`
	AppID       uint64                 `protobuf:"varint,8,opt,name=appID,proto3" json:"appID,omitempty"`
	Branch      string                 `protobuf:"bytes,9,opt,name=branch,proto3" json:"branch,omitempty"`
	AppName     string                 `protobuf:"bytes,10,opt,name=appName,proto3" json:"appName,omitempty"`
	TimeCreated *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
}

func (x *Guide) Reset() {
	*x = Guide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guide) ProtoMessage() {}

func (x *Guide) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guide.ProtoReflect.Descriptor instead.
func (*Guide) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{2}
}

func (x *Guide) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Guide) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Guide) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Guide) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Guide) GetOrgID() uint64 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *Guide) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *Guide) GetProjectID() uint64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *Guide) GetAppID() uint64 {
	if x != nil {
		return x.AppID
	}
	return 0
}

func (x *Guide) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Guide) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Guide) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *Guide) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

type GittarPushPayloadEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event         string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Action        string   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	OrgID         string   `protobuf:"bytes,3,opt,name=orgID,proto3" json:"orgID,omitempty"`
	ProjectID     string   `protobuf:"bytes,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ApplicationID string   `protobuf:"bytes,5,opt,name=applicationID,proto3" json:"applicationID,omitempty"`
	Env           string   `protobuf:"bytes,6,opt,name=env,proto3" json:"env,omitempty"`
	TimeStamp     string   `protobuf:"bytes,7,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Content       *Content `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GittarPushPayloadEvent) Reset() {
	*x = GittarPushPayloadEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GittarPushPayloadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GittarPushPayloadEvent) ProtoMessage() {}

func (x *GittarPushPayloadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GittarPushPayloadEvent.ProtoReflect.Descriptor instead.
func (*GittarPushPayloadEvent) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{3}
}

func (x *GittarPushPayloadEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *GittarPushPayloadEvent) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref    string  `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	After  string  `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	Before string  `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	Pusher *Pusher `protobuf:"bytes,4,opt,name=pusher,proto3" json:"pusher,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{4}
}

func (x *Content) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Content) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *Content) GetBefore() string {
	if x != nil {
		return x.Before
	}
	return ""
}

func (x *Content) GetPusher() *Pusher {
	if x != nil {
		return x.Pusher
	}
	return nil
}

type Pusher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NickName string `protobuf:"bytes,3,opt,name=nickName,json=nickname,proto3" json:"nickName,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Pusher) Reset() {
	*x = Pusher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pusher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pusher) ProtoMessage() {}

func (x *Pusher) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pusher.ProtoReflect.Descriptor instead.
func (*Pusher) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{5}
}

func (x *Pusher) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Pusher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pusher) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *Pusher) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateGuideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Guide `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateGuideResponse) Reset() {
	*x = CreateGuideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuideResponse) ProtoMessage() {}

func (x *CreateGuideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuideResponse.ProtoReflect.Descriptor instead.
func (*CreateGuideResponse) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{6}
}

func (x *CreateGuideResponse) GetData() *Guide {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProcessGuideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  uint64 `protobuf:"varint,1,opt,name=appID,proto3" json:"appID,omitempty"`
	Branch string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	Kind   string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *ProcessGuideRequest) Reset() {
	*x = ProcessGuideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessGuideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessGuideRequest) ProtoMessage() {}

func (x *ProcessGuideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessGuideRequest.ProtoReflect.Descriptor instead.
func (*ProcessGuideRequest) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessGuideRequest) GetAppID() uint64 {
	if x != nil {
		return x.AppID
	}
	return 0
}

func (x *ProcessGuideRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ProcessGuideRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type ProcessGuideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcessGuideResponse) Reset() {
	*x = ProcessGuideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessGuideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessGuideResponse) ProtoMessage() {}

func (x *ProcessGuideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessGuideResponse.ProtoReflect.Descriptor instead.
func (*ProcessGuideResponse) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{8}
}

type DeleteGuideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGuideResponse) Reset() {
	*x = DeleteGuideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guide_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuideResponse) ProtoMessage() {}

func (x *DeleteGuideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_guide_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuideResponse.ProtoReflect.Descriptor instead.
func (*DeleteGuideResponse) Descriptor() ([]byte, []int) {
	return file_guide_proto_rawDescGZIP(), []int{9}
}

var File_guide_proto protoreflect.FileDescriptor

var file_guide_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x1a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f,
	0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x58, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x10, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x3e,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xef,
	0x02, 0x0a, 0x05, 0x47, 0x75, 0x69, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x83, 0x02, 0x0a, 0x16, 0x47, 0x69, 0x74, 0x74, 0x61, 0x72, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x79, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x75, 0x73, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x52, 0x06, 0x70, 0x75, 0x73, 0x68, 0x65,
	0x72, 0x22, 0x5e, 0x0a, 0x06, 0x50, 0x75, 0x73, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x40, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f,
	0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xe8, 0x05, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xd5, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x42, 0x79, 0x47, 0x69, 0x74, 0x74, 0x61, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x69, 0x74, 0x74, 0x61, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x23, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x79, 0x2d, 0x67, 0x69, 0x74, 0x74, 0x61, 0x72, 0x2d, 0x70,
	0x75, 0x73, 0x68, 0x2d, 0x68, 0x6f, 0x6f, 0x6b, 0xfa, 0x81, 0xf9, 0x1b, 0x2f, 0x0a, 0x2d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x62, 0x79, 0x2d, 0x67, 0x69, 0x74, 0x74,
	0x61, 0x72, 0x2d, 0x70, 0x75, 0x73, 0x68, 0x2d, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x75, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x75, 0x69,
	0x64, 0x65, 0xfa, 0x81, 0xf9, 0x1b, 0x0c, 0x0a, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x75, 0x69,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x1c, 0x0a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x75, 0x69, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x12, 0xd5, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x42, 0x79, 0x47, 0x69, 0x74, 0x74, 0x61, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x69, 0x74, 0x74, 0x61, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x23, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x64, 0x6f, 0x70, 0x2e, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2d, 0x62, 0x79, 0x2d, 0x67, 0x69, 0x74, 0x74, 0x61, 0x72, 0x2d, 0x70,
	0x75, 0x73, 0x68, 0x2d, 0x68, 0x6f, 0x6f, 0x6b, 0xfa, 0x81, 0xf9, 0x1b, 0x2f, 0x0a, 0x2d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x62, 0x79, 0x2d, 0x67, 0x69, 0x74, 0x74,
	0x61, 0x72, 0x2d, 0x70, 0x75, 0x73, 0x68, 0x2d, 0x68, 0x6f, 0x6f, 0x6b, 0x1a, 0x10, 0xc2, 0xc4,
	0xcb, 0x1c, 0x0b, 0x22, 0x03, 0x64, 0x6f, 0x70, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64,
	0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x64, 0x6f, 0x70, 0x2f, 0x67, 0x75, 0x69, 0x64,
	0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_guide_proto_rawDescOnce sync.Once
	file_guide_proto_rawDescData = file_guide_proto_rawDesc
)

func file_guide_proto_rawDescGZIP() []byte {
	file_guide_proto_rawDescOnce.Do(func() {
		file_guide_proto_rawDescData = protoimpl.X.CompressGZIP(file_guide_proto_rawDescData)
	})
	return file_guide_proto_rawDescData
}

var file_guide_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_guide_proto_goTypes = []interface{}{
	(*ListGuideRequest)(nil),       // 0: erda.dop.guide.ListGuideRequest
	(*ListGuideResponse)(nil),      // 1: erda.dop.guide.ListGuideResponse
	(*Guide)(nil),                  // 2: erda.dop.guide.Guide
	(*GittarPushPayloadEvent)(nil), // 3: erda.dop.guide.GittarPushPayloadEvent
	(*Content)(nil),                // 4: erda.dop.guide.Content
	(*Pusher)(nil),                 // 5: erda.dop.guide.Pusher
	(*CreateGuideResponse)(nil),    // 6: erda.dop.guide.CreateGuideResponse
	(*ProcessGuideRequest)(nil),    // 7: erda.dop.guide.ProcessGuideRequest
	(*ProcessGuideResponse)(nil),   // 8: erda.dop.guide.ProcessGuideResponse
	(*DeleteGuideResponse)(nil),    // 9: erda.dop.guide.DeleteGuideResponse
	(*timestamppb.Timestamp)(nil),  // 10: google.protobuf.Timestamp
}
var file_guide_proto_depIdxs = []int32{
	2,  // 0: erda.dop.guide.ListGuideResponse.data:type_name -> erda.dop.guide.Guide
	10, // 1: erda.dop.guide.Guide.timeCreated:type_name -> google.protobuf.Timestamp
	10, // 2: erda.dop.guide.Guide.timeUpdated:type_name -> google.protobuf.Timestamp
	4,  // 3: erda.dop.guide.GittarPushPayloadEvent.content:type_name -> erda.dop.guide.Content
	5,  // 4: erda.dop.guide.Content.pusher:type_name -> erda.dop.guide.Pusher
	2,  // 5: erda.dop.guide.CreateGuideResponse.data:type_name -> erda.dop.guide.Guide
	3,  // 6: erda.dop.guide.GuideService.CreateGuideByGittarPushHook:input_type -> erda.dop.guide.GittarPushPayloadEvent
	0,  // 7: erda.dop.guide.GuideService.ListGuide:input_type -> erda.dop.guide.ListGuideRequest
	7,  // 8: erda.dop.guide.GuideService.ProcessGuide:input_type -> erda.dop.guide.ProcessGuideRequest
	3,  // 9: erda.dop.guide.GuideService.DeleteGuideByGittarPushHook:input_type -> erda.dop.guide.GittarPushPayloadEvent
	6,  // 10: erda.dop.guide.GuideService.CreateGuideByGittarPushHook:output_type -> erda.dop.guide.CreateGuideResponse
	1,  // 11: erda.dop.guide.GuideService.ListGuide:output_type -> erda.dop.guide.ListGuideResponse
	8,  // 12: erda.dop.guide.GuideService.ProcessGuide:output_type -> erda.dop.guide.ProcessGuideResponse
	9,  // 13: erda.dop.guide.GuideService.DeleteGuideByGittarPushHook:output_type -> erda.dop.guide.DeleteGuideResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_guide_proto_init() }
func file_guide_proto_init() {
	if File_guide_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_guide_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGuideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGuideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GittarPushPayloadEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pusher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessGuideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessGuideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guide_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_guide_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_guide_proto_goTypes,
		DependencyIndexes: file_guide_proto_depIdxs,
		MessageInfos:      file_guide_proto_msgTypes,
	}.Build()
	File_guide_proto = out.File
	file_guide_proto_rawDesc = nil
	file_guide_proto_goTypes = nil
	file_guide_proto_depIdxs = nil
}
