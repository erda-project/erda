// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: protocol.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterCPServiceImp protocol.proto
func RegisterCPServiceImp(regester transport.Register, srv CPServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterCPServiceHandler(regester, CPServiceHandler(srv), _ops.HTTP...)
	RegisterCPServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.cp.CPService",
	)
}

var (
	cpserviceClientType  = reflect.TypeOf((*CPServiceClient)(nil)).Elem()
	cpserviceServerType  = reflect.TypeOf((*CPServiceServer)(nil)).Elem()
	cpserviceHandlerType = reflect.TypeOf((*CPServiceHandler)(nil)).Elem()
)

// CPServiceClientType .
func CPServiceClientType() reflect.Type { return cpserviceClientType }

// CPServiceServerType .
func CPServiceServerType() reflect.Type { return cpserviceServerType }

// CPServiceHandlerType .
func CPServiceHandlerType() reflect.Type { return cpserviceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		cpserviceClientType,
		// server types
		cpserviceServerType,
		// handler types
		cpserviceHandlerType,
	}
}
