// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: mysql.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MySQLAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstanceId string                 `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Creator    string                 `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createAt,proto3" json:"createAt,omitempty"`
	Username   string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password   string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *MySQLAccount) Reset() {
	*x = MySQLAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLAccount) ProtoMessage() {}

func (x *MySQLAccount) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLAccount.ProtoReflect.Descriptor instead.
func (*MySQLAccount) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{0}
}

func (x *MySQLAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MySQLAccount) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *MySQLAccount) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MySQLAccount) GetCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateAt
	}
	return nil
}

func (x *MySQLAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MySQLAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ListMySQLAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *ListMySQLAccountRequest) Reset() {
	*x = ListMySQLAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMySQLAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMySQLAccountRequest) ProtoMessage() {}

func (x *ListMySQLAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMySQLAccountRequest.ProtoReflect.Descriptor instead.
func (*ListMySQLAccountRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{1}
}

func (x *ListMySQLAccountRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type ListMySQLAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*MySQLAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *ListMySQLAccountResponse) Reset() {
	*x = ListMySQLAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMySQLAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMySQLAccountResponse) ProtoMessage() {}

func (x *ListMySQLAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMySQLAccountResponse.ProtoReflect.Descriptor instead.
func (*ListMySQLAccountResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{2}
}

func (x *ListMySQLAccountResponse) GetAccounts() []*MySQLAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type GenerateMySQLAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	UserID     string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GenerateMySQLAccountRequest) Reset() {
	*x = GenerateMySQLAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMySQLAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMySQLAccountRequest) ProtoMessage() {}

func (x *GenerateMySQLAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMySQLAccountRequest.ProtoReflect.Descriptor instead.
func (*GenerateMySQLAccountRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateMySQLAccountRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GenerateMySQLAccountRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GenerateMySQLAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *MySQLAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GenerateMySQLAccountResponse) Reset() {
	*x = GenerateMySQLAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMySQLAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMySQLAccountResponse) ProtoMessage() {}

func (x *GenerateMySQLAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMySQLAccountResponse.ProtoReflect.Descriptor instead.
func (*GenerateMySQLAccountResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateMySQLAccountResponse) GetAccount() *MySQLAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

type DeleteMySQLAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMySQLAccountRequest) Reset() {
	*x = DeleteMySQLAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMySQLAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMySQLAccountRequest) ProtoMessage() {}

func (x *DeleteMySQLAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMySQLAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteMySQLAccountRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteMySQLAccountRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DeleteMySQLAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteMySQLAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMySQLAccountResponse) Reset() {
	*x = DeleteMySQLAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMySQLAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMySQLAccountResponse) ProtoMessage() {}

func (x *DeleteMySQLAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMySQLAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteMySQLAccountResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{6}
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InstanceId   string            `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	AppId        string            `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	Workspace    string            `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	RuntimeId    string            `protobuf:"bytes,5,opt,name=runtimeId,proto3" json:"runtimeId,omitempty"`
	RuntimeName  string            `protobuf:"bytes,6,opt,name=runtimeName,proto3" json:"runtimeName,omitempty"`
	AccountId    string            `protobuf:"bytes,7,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PreAccountId string            `protobuf:"bytes,8,opt,name=preAccountId,proto3" json:"preAccountId,omitempty"`
	AccountState string            `protobuf:"bytes,9,opt,name=accountState,proto3" json:"accountState,omitempty"`
	Configs      map[string]string `protobuf:"bytes,10,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{7}
}

func (x *Attachment) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attachment) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Attachment) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Attachment) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *Attachment) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *Attachment) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

func (x *Attachment) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Attachment) GetPreAccountId() string {
	if x != nil {
		return x.PreAccountId
	}
	return ""
}

func (x *Attachment) GetAccountState() string {
	if x != nil {
		return x.AccountState
	}
	return ""
}

func (x *Attachment) GetConfigs() map[string]string {
	if x != nil {
		return x.Configs
	}
	return nil
}

type ListAttachmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *ListAttachmentRequest) Reset() {
	*x = ListAttachmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachmentRequest) ProtoMessage() {}

func (x *ListAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachmentRequest.ProtoReflect.Descriptor instead.
func (*ListAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{8}
}

func (x *ListAttachmentRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type ListAttachmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attachments []*Attachment `protobuf:"bytes,1,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *ListAttachmentResponse) Reset() {
	*x = ListAttachmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachmentResponse) ProtoMessage() {}

func (x *ListAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachmentResponse.ProtoReflect.Descriptor instead.
func (*ListAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{9}
}

func (x *ListAttachmentResponse) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type UpdateAttachmentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Id         uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AccountId  string `protobuf:"bytes,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *UpdateAttachmentAccountRequest) Reset() {
	*x = UpdateAttachmentAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttachmentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttachmentAccountRequest) ProtoMessage() {}

func (x *UpdateAttachmentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttachmentAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAttachmentAccountRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAttachmentAccountRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateAttachmentAccountRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAttachmentAccountRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type UpdateAttachmentAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAttachmentAccountResponse) Reset() {
	*x = UpdateAttachmentAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttachmentAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttachmentAccountResponse) ProtoMessage() {}

func (x *UpdateAttachmentAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttachmentAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateAttachmentAccountResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{11}
}

var File_mysql_proto protoreflect.FileDescriptor

var file_mysql_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x01, 0x0a, 0x0c,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x39, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x63, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x55, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x65, 0x0a,
	0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa4, 0x03, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x37, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x65, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x95, 0x08, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xd0, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x12, 0x43, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x3d, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x7d, 0x12, 0xc8, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x22, 0x2f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2d,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xc0, 0x01,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2d, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x2d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0xc7, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64,
	0x64, 0x6f, 0x6e, 0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x12, 0x40, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x2d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x3f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x3d, 0x7b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e,
	0x2e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2e,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x32, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64,
	0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x2f, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mysql_proto_rawDescOnce sync.Once
	file_mysql_proto_rawDescData = file_mysql_proto_rawDesc
)

func file_mysql_proto_rawDescGZIP() []byte {
	file_mysql_proto_rawDescOnce.Do(func() {
		file_mysql_proto_rawDescData = protoimpl.X.CompressGZIP(file_mysql_proto_rawDescData)
	})
	return file_mysql_proto_rawDescData
}

var file_mysql_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_mysql_proto_goTypes = []interface{}{
	(*MySQLAccount)(nil),                    // 0: erda.orchestrator.addon.mysql.MySQLAccount
	(*ListMySQLAccountRequest)(nil),         // 1: erda.orchestrator.addon.mysql.ListMySQLAccountRequest
	(*ListMySQLAccountResponse)(nil),        // 2: erda.orchestrator.addon.mysql.ListMySQLAccountResponse
	(*GenerateMySQLAccountRequest)(nil),     // 3: erda.orchestrator.addon.mysql.GenerateMySQLAccountRequest
	(*GenerateMySQLAccountResponse)(nil),    // 4: erda.orchestrator.addon.mysql.GenerateMySQLAccountResponse
	(*DeleteMySQLAccountRequest)(nil),       // 5: erda.orchestrator.addon.mysql.DeleteMySQLAccountRequest
	(*DeleteMySQLAccountResponse)(nil),      // 6: erda.orchestrator.addon.mysql.DeleteMySQLAccountResponse
	(*Attachment)(nil),                      // 7: erda.orchestrator.addon.mysql.Attachment
	(*ListAttachmentRequest)(nil),           // 8: erda.orchestrator.addon.mysql.ListAttachmentRequest
	(*ListAttachmentResponse)(nil),          // 9: erda.orchestrator.addon.mysql.ListAttachmentResponse
	(*UpdateAttachmentAccountRequest)(nil),  // 10: erda.orchestrator.addon.mysql.UpdateAttachmentAccountRequest
	(*UpdateAttachmentAccountResponse)(nil), // 11: erda.orchestrator.addon.mysql.UpdateAttachmentAccountResponse
	nil,                                     // 12: erda.orchestrator.addon.mysql.Attachment.ConfigsEntry
	(*timestamppb.Timestamp)(nil),           // 13: google.protobuf.Timestamp
}
var file_mysql_proto_depIdxs = []int32{
	13, // 0: erda.orchestrator.addon.mysql.MySQLAccount.createAt:type_name -> google.protobuf.Timestamp
	0,  // 1: erda.orchestrator.addon.mysql.ListMySQLAccountResponse.accounts:type_name -> erda.orchestrator.addon.mysql.MySQLAccount
	0,  // 2: erda.orchestrator.addon.mysql.GenerateMySQLAccountResponse.account:type_name -> erda.orchestrator.addon.mysql.MySQLAccount
	12, // 3: erda.orchestrator.addon.mysql.Attachment.configs:type_name -> erda.orchestrator.addon.mysql.Attachment.ConfigsEntry
	7,  // 4: erda.orchestrator.addon.mysql.ListAttachmentResponse.attachments:type_name -> erda.orchestrator.addon.mysql.Attachment
	1,  // 5: erda.orchestrator.addon.mysql.AddonMySQLService.ListMySQLAccount:input_type -> erda.orchestrator.addon.mysql.ListMySQLAccountRequest
	3,  // 6: erda.orchestrator.addon.mysql.AddonMySQLService.GenerateMySQLAccount:input_type -> erda.orchestrator.addon.mysql.GenerateMySQLAccountRequest
	5,  // 7: erda.orchestrator.addon.mysql.AddonMySQLService.DeleteMySQLAccount:input_type -> erda.orchestrator.addon.mysql.DeleteMySQLAccountRequest
	8,  // 8: erda.orchestrator.addon.mysql.AddonMySQLService.ListAttachment:input_type -> erda.orchestrator.addon.mysql.ListAttachmentRequest
	10, // 9: erda.orchestrator.addon.mysql.AddonMySQLService.UpdateAttachmentAccount:input_type -> erda.orchestrator.addon.mysql.UpdateAttachmentAccountRequest
	2,  // 10: erda.orchestrator.addon.mysql.AddonMySQLService.ListMySQLAccount:output_type -> erda.orchestrator.addon.mysql.ListMySQLAccountResponse
	4,  // 11: erda.orchestrator.addon.mysql.AddonMySQLService.GenerateMySQLAccount:output_type -> erda.orchestrator.addon.mysql.GenerateMySQLAccountResponse
	6,  // 12: erda.orchestrator.addon.mysql.AddonMySQLService.DeleteMySQLAccount:output_type -> erda.orchestrator.addon.mysql.DeleteMySQLAccountResponse
	9,  // 13: erda.orchestrator.addon.mysql.AddonMySQLService.ListAttachment:output_type -> erda.orchestrator.addon.mysql.ListAttachmentResponse
	11, // 14: erda.orchestrator.addon.mysql.AddonMySQLService.UpdateAttachmentAccount:output_type -> erda.orchestrator.addon.mysql.UpdateAttachmentAccountResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_mysql_proto_init() }
func file_mysql_proto_init() {
	if File_mysql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mysql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMySQLAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMySQLAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMySQLAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMySQLAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMySQLAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMySQLAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAttachmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAttachmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttachmentAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttachmentAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mysql_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mysql_proto_goTypes,
		DependencyIndexes: file_mysql_proto_depIdxs,
		MessageInfos:      file_mysql_proto_msgTypes,
	}.Build()
	File_mysql_proto = out.File
	file_mysql_proto_rawDesc = nil
	file_mysql_proto_goTypes = nil
	file_mysql_proto_depIdxs = nil
}
