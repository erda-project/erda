// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: mysql.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*MySQLAccount)(nil)
var _ json.Unmarshaler = (*MySQLAccount)(nil)
var _ json.Marshaler = (*ListMySQLAccountRequest)(nil)
var _ json.Unmarshaler = (*ListMySQLAccountRequest)(nil)
var _ json.Marshaler = (*ListMySQLAccountResponse)(nil)
var _ json.Unmarshaler = (*ListMySQLAccountResponse)(nil)
var _ json.Marshaler = (*GenerateMySQLAccountRequest)(nil)
var _ json.Unmarshaler = (*GenerateMySQLAccountRequest)(nil)
var _ json.Marshaler = (*GenerateMySQLAccountResponse)(nil)
var _ json.Unmarshaler = (*GenerateMySQLAccountResponse)(nil)
var _ json.Marshaler = (*DeleteMySQLAccountRequest)(nil)
var _ json.Unmarshaler = (*DeleteMySQLAccountRequest)(nil)
var _ json.Marshaler = (*DeleteMySQLAccountResponse)(nil)
var _ json.Unmarshaler = (*DeleteMySQLAccountResponse)(nil)
var _ json.Marshaler = (*Attachment)(nil)
var _ json.Unmarshaler = (*Attachment)(nil)
var _ json.Marshaler = (*ListAttachmentRequest)(nil)
var _ json.Unmarshaler = (*ListAttachmentRequest)(nil)
var _ json.Marshaler = (*ListAttachmentResponse)(nil)
var _ json.Unmarshaler = (*ListAttachmentResponse)(nil)
var _ json.Marshaler = (*UpdateAttachmentAccountRequest)(nil)
var _ json.Unmarshaler = (*UpdateAttachmentAccountRequest)(nil)
var _ json.Marshaler = (*UpdateAttachmentAccountResponse)(nil)
var _ json.Unmarshaler = (*UpdateAttachmentAccountResponse)(nil)

// MySQLAccount implement json.Marshaler.
func (m *MySQLAccount) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MySQLAccount implement json.Marshaler.
func (m *MySQLAccount) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListMySQLAccountRequest implement json.Marshaler.
func (m *ListMySQLAccountRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListMySQLAccountRequest implement json.Marshaler.
func (m *ListMySQLAccountRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListMySQLAccountResponse implement json.Marshaler.
func (m *ListMySQLAccountResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListMySQLAccountResponse implement json.Marshaler.
func (m *ListMySQLAccountResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GenerateMySQLAccountRequest implement json.Marshaler.
func (m *GenerateMySQLAccountRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GenerateMySQLAccountRequest implement json.Marshaler.
func (m *GenerateMySQLAccountRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GenerateMySQLAccountResponse implement json.Marshaler.
func (m *GenerateMySQLAccountResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GenerateMySQLAccountResponse implement json.Marshaler.
func (m *GenerateMySQLAccountResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteMySQLAccountRequest implement json.Marshaler.
func (m *DeleteMySQLAccountRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteMySQLAccountRequest implement json.Marshaler.
func (m *DeleteMySQLAccountRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteMySQLAccountResponse implement json.Marshaler.
func (m *DeleteMySQLAccountResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteMySQLAccountResponse implement json.Marshaler.
func (m *DeleteMySQLAccountResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Attachment implement json.Marshaler.
func (m *Attachment) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Attachment implement json.Marshaler.
func (m *Attachment) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListAttachmentRequest implement json.Marshaler.
func (m *ListAttachmentRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListAttachmentRequest implement json.Marshaler.
func (m *ListAttachmentRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListAttachmentResponse implement json.Marshaler.
func (m *ListAttachmentResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListAttachmentResponse implement json.Marshaler.
func (m *ListAttachmentResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// UpdateAttachmentAccountRequest implement json.Marshaler.
func (m *UpdateAttachmentAccountRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// UpdateAttachmentAccountRequest implement json.Marshaler.
func (m *UpdateAttachmentAccountRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// UpdateAttachmentAccountResponse implement json.Marshaler.
func (m *UpdateAttachmentAccountResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// UpdateAttachmentAccountResponse implement json.Marshaler.
func (m *UpdateAttachmentAccountResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
