// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: mysql.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterAddonMySQLServiceImp mysql.proto
func RegisterAddonMySQLServiceImp(regester transport.Register, srv AddonMySQLServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterAddonMySQLServiceHandler(regester, AddonMySQLServiceHandler(srv), _ops.HTTP...)
	RegisterAddonMySQLServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.orchestrator.addon.mysql.AddonMySQLService",
	)
}

var (
	addonMySQLServiceClientType  = reflect.TypeOf((*AddonMySQLServiceClient)(nil)).Elem()
	addonMySQLServiceServerType  = reflect.TypeOf((*AddonMySQLServiceServer)(nil)).Elem()
	addonMySQLServiceHandlerType = reflect.TypeOf((*AddonMySQLServiceHandler)(nil)).Elem()
)

// AddonMySQLServiceClientType .
func AddonMySQLServiceClientType() reflect.Type { return addonMySQLServiceClientType }

// AddonMySQLServiceServerType .
func AddonMySQLServiceServerType() reflect.Type { return addonMySQLServiceServerType }

// AddonMySQLServiceHandlerType .
func AddonMySQLServiceHandlerType() reflect.Type { return addonMySQLServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		addonMySQLServiceClientType,
		// server types
		addonMySQLServiceServerType,
		// handler types
		addonMySQLServiceHandlerType,
	}
}
