// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: issuerelation.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IssueRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string                 `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	TimeCreated   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	TimeUpdated   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timeUpdated,proto3" json:"timeUpdated,omitempty"`
	SoftDeletedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=softDeletedAt,proto3" json:"softDeletedAt,omitempty"`
	Relation      string                 `protobuf:"bytes,5,opt,name=relation,proto3" json:"relation,omitempty"`
	IssueID       uint64                 `protobuf:"varint,6,opt,name=issueID,proto3" json:"issueID,omitempty"`
	Type          string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Extra         string                 `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *IssueRelation) Reset() {
	*x = IssueRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueRelation) ProtoMessage() {}

func (x *IssueRelation) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueRelation.ProtoReflect.Descriptor instead.
func (*IssueRelation) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{0}
}

func (x *IssueRelation) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *IssueRelation) GetTimeCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeCreated
	}
	return nil
}

func (x *IssueRelation) GetTimeUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeUpdated
	}
	return nil
}

func (x *IssueRelation) GetSoftDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SoftDeletedAt
	}
	return nil
}

func (x *IssueRelation) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *IssueRelation) GetIssueID() uint64 {
	if x != nil {
		return x.IssueID
	}
	return 0
}

func (x *IssueRelation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IssueRelation) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

// create
type CreateIssueRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation string `protobuf:"bytes,1,opt,name=relation,proto3" json:"relation,omitempty"`
	IssueID  uint64 `protobuf:"varint,2,opt,name=issueID,proto3" json:"issueID,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Extra    string `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *CreateIssueRelationRequest) Reset() {
	*x = CreateIssueRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIssueRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssueRelationRequest) ProtoMessage() {}

func (x *CreateIssueRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssueRelationRequest.ProtoReflect.Descriptor instead.
func (*CreateIssueRelationRequest) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIssueRelationRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *CreateIssueRelationRequest) GetIssueID() uint64 {
	if x != nil {
		return x.IssueID
	}
	return 0
}

func (x *CreateIssueRelationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateIssueRelationRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type CreateIssueRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssueRelation *IssueRelation `protobuf:"bytes,1,opt,name=issueRelation,proto3" json:"issueRelation,omitempty"`
}

func (x *CreateIssueRelationResponse) Reset() {
	*x = CreateIssueRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIssueRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIssueRelationResponse) ProtoMessage() {}

func (x *CreateIssueRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIssueRelationResponse.ProtoReflect.Descriptor instead.
func (*CreateIssueRelationResponse) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{2}
}

func (x *CreateIssueRelationResponse) GetIssueRelation() *IssueRelation {
	if x != nil {
		return x.IssueRelation
	}
	return nil
}

// delete
type DeleteIssueRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationID string `protobuf:"bytes,1,opt,name=relationID,proto3" json:"relationID,omitempty"`
}

func (x *DeleteIssueRelationRequest) Reset() {
	*x = DeleteIssueRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIssueRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIssueRelationRequest) ProtoMessage() {}

func (x *DeleteIssueRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIssueRelationRequest.ProtoReflect.Descriptor instead.
func (*DeleteIssueRelationRequest) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteIssueRelationRequest) GetRelationID() string {
	if x != nil {
		return x.RelationID
	}
	return ""
}

type DeleteIssueRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteIssueRelationResponse) Reset() {
	*x = DeleteIssueRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIssueRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIssueRelationResponse) ProtoMessage() {}

func (x *DeleteIssueRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIssueRelationResponse.ProtoReflect.Descriptor instead.
func (*DeleteIssueRelationResponse) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{4}
}

// list
type ListIssueRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations []string `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty"`
	IssueIDs  []uint64 `protobuf:"varint,2,rep,packed,name=issueIDs,proto3" json:"issueIDs,omitempty"`
	Type      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ListIssueRelationRequest) Reset() {
	*x = ListIssueRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssueRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssueRelationRequest) ProtoMessage() {}

func (x *ListIssueRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssueRelationRequest.ProtoReflect.Descriptor instead.
func (*ListIssueRelationRequest) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{5}
}

func (x *ListIssueRelationRequest) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *ListIssueRelationRequest) GetIssueIDs() []uint64 {
	if x != nil {
		return x.IssueIDs
	}
	return nil
}

func (x *ListIssueRelationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListIssueRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*IssueRelation `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListIssueRelationResponse) Reset() {
	*x = ListIssueRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuerelation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssueRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssueRelationResponse) ProtoMessage() {}

func (x *ListIssueRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issuerelation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssueRelationResponse.ProtoReflect.Descriptor instead.
func (*ListIssueRelationResponse) Descriptor() ([]byte, []int) {
	return file_issuerelation_proto_rawDescGZIP(), []int{6}
}

func (x *ListIssueRelationResponse) GetData() []*IssueRelation {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_issuerelation_proto protoreflect.FileDescriptor

var file_issuerelation_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x02, 0x0a, 0x0d,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x6f, 0x66,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x6f,
	0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x7c, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x73, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c,
	0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x1d, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x44,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x44,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x89, 0x04, 0x0a, 0x14, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xa1, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x14, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0xae, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3b,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x2a, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2d, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72,
	0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x64, 0x65, 0x76, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_issuerelation_proto_rawDescOnce sync.Once
	file_issuerelation_proto_rawDescData = file_issuerelation_proto_rawDesc
)

func file_issuerelation_proto_rawDescGZIP() []byte {
	file_issuerelation_proto_rawDescOnce.Do(func() {
		file_issuerelation_proto_rawDescData = protoimpl.X.CompressGZIP(file_issuerelation_proto_rawDescData)
	})
	return file_issuerelation_proto_rawDescData
}

var file_issuerelation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_issuerelation_proto_goTypes = []interface{}{
	(*IssueRelation)(nil),               // 0: erda.apps.devflow.issuerelation.IssueRelation
	(*CreateIssueRelationRequest)(nil),  // 1: erda.apps.devflow.issuerelation.CreateIssueRelationRequest
	(*CreateIssueRelationResponse)(nil), // 2: erda.apps.devflow.issuerelation.CreateIssueRelationResponse
	(*DeleteIssueRelationRequest)(nil),  // 3: erda.apps.devflow.issuerelation.DeleteIssueRelationRequest
	(*DeleteIssueRelationResponse)(nil), // 4: erda.apps.devflow.issuerelation.DeleteIssueRelationResponse
	(*ListIssueRelationRequest)(nil),    // 5: erda.apps.devflow.issuerelation.ListIssueRelationRequest
	(*ListIssueRelationResponse)(nil),   // 6: erda.apps.devflow.issuerelation.ListIssueRelationResponse
	(*timestamppb.Timestamp)(nil),       // 7: google.protobuf.Timestamp
}
var file_issuerelation_proto_depIdxs = []int32{
	7, // 0: erda.apps.devflow.issuerelation.IssueRelation.timeCreated:type_name -> google.protobuf.Timestamp
	7, // 1: erda.apps.devflow.issuerelation.IssueRelation.timeUpdated:type_name -> google.protobuf.Timestamp
	7, // 2: erda.apps.devflow.issuerelation.IssueRelation.softDeletedAt:type_name -> google.protobuf.Timestamp
	0, // 3: erda.apps.devflow.issuerelation.CreateIssueRelationResponse.issueRelation:type_name -> erda.apps.devflow.issuerelation.IssueRelation
	0, // 4: erda.apps.devflow.issuerelation.ListIssueRelationResponse.data:type_name -> erda.apps.devflow.issuerelation.IssueRelation
	1, // 5: erda.apps.devflow.issuerelation.IssueRelationService.Create:input_type -> erda.apps.devflow.issuerelation.CreateIssueRelationRequest
	3, // 6: erda.apps.devflow.issuerelation.IssueRelationService.Delete:input_type -> erda.apps.devflow.issuerelation.DeleteIssueRelationRequest
	5, // 7: erda.apps.devflow.issuerelation.IssueRelationService.List:input_type -> erda.apps.devflow.issuerelation.ListIssueRelationRequest
	2, // 8: erda.apps.devflow.issuerelation.IssueRelationService.Create:output_type -> erda.apps.devflow.issuerelation.CreateIssueRelationResponse
	4, // 9: erda.apps.devflow.issuerelation.IssueRelationService.Delete:output_type -> erda.apps.devflow.issuerelation.DeleteIssueRelationResponse
	6, // 10: erda.apps.devflow.issuerelation.IssueRelationService.List:output_type -> erda.apps.devflow.issuerelation.ListIssueRelationResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_issuerelation_proto_init() }
func file_issuerelation_proto_init() {
	if File_issuerelation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_issuerelation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuerelation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIssueRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuerelation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIssueRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuerelation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIssueRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuerelation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIssueRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuerelation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIssueRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuerelation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIssueRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_issuerelation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_issuerelation_proto_goTypes,
		DependencyIndexes: file_issuerelation_proto_depIdxs,
		MessageInfos:      file_issuerelation_proto_msgTypes,
	}.Build()
	File_issuerelation_proto = out.File
	file_issuerelation_proto_rawDesc = nil
	file_issuerelation_proto_goTypes = nil
	file_issuerelation_proto_depIdxs = nil
}
