// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: issuerelation.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterIssueRelationServiceImp issuerelation.proto
func RegisterIssueRelationServiceImp(regester transport.Register, srv IssueRelationServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterIssueRelationServiceHandler(regester, IssueRelationServiceHandler(srv), _ops.HTTP...)
	RegisterIssueRelationServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.apps.devflow.issuerelation.IssueRelationService",
	)
}

var (
	issueRelationServiceClientType  = reflect.TypeOf((*IssueRelationServiceClient)(nil)).Elem()
	issueRelationServiceServerType  = reflect.TypeOf((*IssueRelationServiceServer)(nil)).Elem()
	issueRelationServiceHandlerType = reflect.TypeOf((*IssueRelationServiceHandler)(nil)).Elem()
)

// IssueRelationServiceClientType .
func IssueRelationServiceClientType() reflect.Type { return issueRelationServiceClientType }

// IssueRelationServiceServerType .
func IssueRelationServiceServerType() reflect.Type { return issueRelationServiceServerType }

// IssueRelationServiceHandlerType .
func IssueRelationServiceHandlerType() reflect.Type { return issueRelationServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		issueRelationServiceClientType,
		// server types
		issueRelationServiceServerType,
		// handler types
		issueRelationServiceHandlerType,
	}
}
