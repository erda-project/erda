// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: flow.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterFlowServiceImp flow.proto
func RegisterFlowServiceImp(regester transport.Register, srv FlowServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterFlowServiceHandler(regester, FlowServiceHandler(srv), _ops.HTTP...)
	RegisterFlowServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.apps.devflow.flow.FlowService",
	)
}

var (
	flowServiceClientType  = reflect.TypeOf((*FlowServiceClient)(nil)).Elem()
	flowServiceServerType  = reflect.TypeOf((*FlowServiceServer)(nil)).Elem()
	flowServiceHandlerType = reflect.TypeOf((*FlowServiceHandler)(nil)).Elem()
)

// FlowServiceClientType .
func FlowServiceClientType() reflect.Type { return flowServiceClientType }

// FlowServiceServerType .
func FlowServiceServerType() reflect.Type { return flowServiceServerType }

// FlowServiceHandlerType .
func FlowServiceHandlerType() reflect.Type { return flowServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		flowServiceClientType,
		// server types
		flowServiceServerType,
		// handler types
		flowServiceHandlerType,
	}
}
