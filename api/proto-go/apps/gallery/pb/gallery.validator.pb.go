// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gallery.proto

package pb

import (
	fmt "fmt"
	math "math"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ListOpusReq) Validate() error {
	return nil
}
func (this *ListOpusResp) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ListOpusRespData) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}
func (this *ListOpusRespDataItem) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *Presentation) Validate() error {
	if this.Parameters != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Parameters); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Parameters", err)
		}
	}
	for _, item := range this.Forms {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Forms", err)
			}
		}
	}
	return nil
}
func (this *Readme) Validate() error {
	return nil
}
func (this *Installation) Validate() error {
	return nil
}
func (this *Parameters) Validate() error {
	for _, item := range this.Parameters {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Parameters", err)
			}
		}
	}
	return nil
}
func (this *Parameter) Validate() error {
	if this.Schema != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Schema); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Schema", err)
		}
	}
	return nil
}
func (this *Form) Validate() error {
	for _, item := range this.Line {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Line", err)
			}
		}
	}
	return nil
}
func (this *Line) Validate() error {
	return nil
}
func (this *Schema) Validate() error {
	if this.Items != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Items); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *ListOpusTypesRespData) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}
func (this *OpusType) Validate() error {
	return nil
}
func (this *PutOnArtifactsReq) Validate() error {
	for _, item := range this.Readme {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Readme", err)
			}
		}
	}
	if this.Installation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Installation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Installation", err)
		}
	}
	return nil
}
func (this *ArtifactsInstallation) Validate() error {
	return nil
}
func (this *PutOffArtifactsReq) Validate() error {
	return nil
}
func (this *PutOnExtensionsReq) Validate() error {
	for _, item := range this.Readme {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Readme", err)
			}
		}
	}
	return nil
}
func (this *ListOpusVersionsReq) Validate() error {
	return nil
}
func (this *ListOpusVersionsResp) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ListOpusVersionsRespData) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	for _, item := range this.Versions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Versions", err)
			}
		}
	}
	return nil
}
func (this *ListOpusVersionRespDataVersion) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *PutOnOpusResp) Validate() error {
	return nil
}
func (this *I18N) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
