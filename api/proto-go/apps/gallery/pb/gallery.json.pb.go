// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: gallery.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*ListOpusReq)(nil)
var _ json.Unmarshaler = (*ListOpusReq)(nil)
var _ json.Marshaler = (*ListOpusResp)(nil)
var _ json.Unmarshaler = (*ListOpusResp)(nil)
var _ json.Marshaler = (*ListOpusRespData)(nil)
var _ json.Unmarshaler = (*ListOpusRespData)(nil)
var _ json.Marshaler = (*ListOpusRespDataItem)(nil)
var _ json.Unmarshaler = (*ListOpusRespDataItem)(nil)
var _ json.Marshaler = (*Presentation)(nil)
var _ json.Unmarshaler = (*Presentation)(nil)
var _ json.Marshaler = (*Readme)(nil)
var _ json.Unmarshaler = (*Readme)(nil)
var _ json.Marshaler = (*Installation)(nil)
var _ json.Unmarshaler = (*Installation)(nil)
var _ json.Marshaler = (*Parameters)(nil)
var _ json.Unmarshaler = (*Parameters)(nil)
var _ json.Marshaler = (*Parameter)(nil)
var _ json.Unmarshaler = (*Parameter)(nil)
var _ json.Marshaler = (*Form)(nil)
var _ json.Unmarshaler = (*Form)(nil)
var _ json.Marshaler = (*Line)(nil)
var _ json.Unmarshaler = (*Line)(nil)
var _ json.Marshaler = (*Schema)(nil)
var _ json.Unmarshaler = (*Schema)(nil)
var _ json.Marshaler = (*ListOpusTypesRespData)(nil)
var _ json.Unmarshaler = (*ListOpusTypesRespData)(nil)
var _ json.Marshaler = (*OpusType)(nil)
var _ json.Unmarshaler = (*OpusType)(nil)
var _ json.Marshaler = (*PutOnArtifactsReq)(nil)
var _ json.Unmarshaler = (*PutOnArtifactsReq)(nil)
var _ json.Marshaler = (*ArtifactsInstallation)(nil)
var _ json.Unmarshaler = (*ArtifactsInstallation)(nil)
var _ json.Marshaler = (*PutOffArtifactsReq)(nil)
var _ json.Unmarshaler = (*PutOffArtifactsReq)(nil)
var _ json.Marshaler = (*PutOnExtensionsReq)(nil)
var _ json.Unmarshaler = (*PutOnExtensionsReq)(nil)
var _ json.Marshaler = (*ListOpusVersionsReq)(nil)
var _ json.Unmarshaler = (*ListOpusVersionsReq)(nil)
var _ json.Marshaler = (*ListOpusVersionsResp)(nil)
var _ json.Unmarshaler = (*ListOpusVersionsResp)(nil)
var _ json.Marshaler = (*ListOpusVersionsRespData)(nil)
var _ json.Unmarshaler = (*ListOpusVersionsRespData)(nil)
var _ json.Marshaler = (*ListOpusVersionRespDataVersion)(nil)
var _ json.Unmarshaler = (*ListOpusVersionRespDataVersion)(nil)
var _ json.Marshaler = (*PutOnOpusResp)(nil)
var _ json.Unmarshaler = (*PutOnOpusResp)(nil)
var _ json.Marshaler = (*I18N)(nil)
var _ json.Unmarshaler = (*I18N)(nil)

// ListOpusReq implement json.Marshaler.
func (m *ListOpusReq) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusReq implement json.Marshaler.
func (m *ListOpusReq) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusResp implement json.Marshaler.
func (m *ListOpusResp) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusResp implement json.Marshaler.
func (m *ListOpusResp) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusRespData implement json.Marshaler.
func (m *ListOpusRespData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusRespData implement json.Marshaler.
func (m *ListOpusRespData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusRespDataItem implement json.Marshaler.
func (m *ListOpusRespDataItem) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusRespDataItem implement json.Marshaler.
func (m *ListOpusRespDataItem) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Presentation implement json.Marshaler.
func (m *Presentation) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Presentation implement json.Marshaler.
func (m *Presentation) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Readme implement json.Marshaler.
func (m *Readme) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Readme implement json.Marshaler.
func (m *Readme) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Installation implement json.Marshaler.
func (m *Installation) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Installation implement json.Marshaler.
func (m *Installation) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Parameters implement json.Marshaler.
func (m *Parameters) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Parameters implement json.Marshaler.
func (m *Parameters) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Parameter implement json.Marshaler.
func (m *Parameter) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Parameter implement json.Marshaler.
func (m *Parameter) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Form implement json.Marshaler.
func (m *Form) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Form implement json.Marshaler.
func (m *Form) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Line implement json.Marshaler.
func (m *Line) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Line implement json.Marshaler.
func (m *Line) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Schema implement json.Marshaler.
func (m *Schema) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Schema implement json.Marshaler.
func (m *Schema) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusTypesRespData implement json.Marshaler.
func (m *ListOpusTypesRespData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusTypesRespData implement json.Marshaler.
func (m *ListOpusTypesRespData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// OpusType implement json.Marshaler.
func (m *OpusType) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// OpusType implement json.Marshaler.
func (m *OpusType) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PutOnArtifactsReq implement json.Marshaler.
func (m *PutOnArtifactsReq) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PutOnArtifactsReq implement json.Marshaler.
func (m *PutOnArtifactsReq) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ArtifactsInstallation implement json.Marshaler.
func (m *ArtifactsInstallation) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ArtifactsInstallation implement json.Marshaler.
func (m *ArtifactsInstallation) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PutOffArtifactsReq implement json.Marshaler.
func (m *PutOffArtifactsReq) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PutOffArtifactsReq implement json.Marshaler.
func (m *PutOffArtifactsReq) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PutOnExtensionsReq implement json.Marshaler.
func (m *PutOnExtensionsReq) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PutOnExtensionsReq implement json.Marshaler.
func (m *PutOnExtensionsReq) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusVersionsReq implement json.Marshaler.
func (m *ListOpusVersionsReq) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusVersionsReq implement json.Marshaler.
func (m *ListOpusVersionsReq) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusVersionsResp implement json.Marshaler.
func (m *ListOpusVersionsResp) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusVersionsResp implement json.Marshaler.
func (m *ListOpusVersionsResp) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusVersionsRespData implement json.Marshaler.
func (m *ListOpusVersionsRespData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusVersionsRespData implement json.Marshaler.
func (m *ListOpusVersionsRespData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListOpusVersionRespDataVersion implement json.Marshaler.
func (m *ListOpusVersionRespDataVersion) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListOpusVersionRespDataVersion implement json.Marshaler.
func (m *ListOpusVersionRespDataVersion) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PutOnOpusResp implement json.Marshaler.
func (m *PutOnOpusResp) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PutOnOpusResp implement json.Marshaler.
func (m *PutOnOpusResp) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// I18N implement json.Marshaler.
func (m *I18N) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// I18N implement json.Marshaler.
func (m *I18N) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
