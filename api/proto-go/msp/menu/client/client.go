// Copyright (c) 2021 Terminus, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: menu.proto

package client

import (
	context "context"

	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/msp/menu/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// MenuService menu.proto
	MenuService() pb.MenuServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		menuService: pb.NewMenuServiceClient(cc),
	}
}

type serviceClients struct {
	menuService pb.MenuServiceClient
}

func (c *serviceClients) MenuService() pb.MenuServiceClient {
	return c.menuService
}

type menuServiceWrapper struct {
	client pb.MenuServiceClient
	opts   []grpc1.CallOption
}

func (s *menuServiceWrapper) GetMenu(ctx context.Context, req *pb.GetMenuRequest) (*pb.GetMenuResponse, error) {
	return s.client.GetMenu(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}

func (s *menuServiceWrapper) GetSetting(ctx context.Context, req *pb.GetSettingRequest) (*pb.GetSettingResponse, error) {
	return s.client.GetSetting(ctx, req, append(grpc.CallOptionFromContext(ctx), s.opts...)...)
}
