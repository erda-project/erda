// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: notifygroup.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNotifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ScopeType   string          `protobuf:"bytes,2,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeId     string          `protobuf:"bytes,3,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Targets     []*NotifyTarget `protobuf:"bytes,4,rep,name=targets,proto3" json:"targets,omitempty"`
	Creator     string          `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Label       string          `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	ClusterName string          `protobuf:"bytes,7,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	AutoCreate  bool            `protobuf:"varint,8,opt,name=autoCreate,json=-,proto3" json:"autoCreate,omitempty"`
	OrgID       int64           `protobuf:"varint,9,opt,name=orgID,json=-,proto3" json:"orgID,omitempty"`
}

func (x *CreateNotifyGroupRequest) Reset() {
	*x = CreateNotifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyGroupRequest) ProtoMessage() {}

func (x *CreateNotifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotifyGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNotifyGroupRequest) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *CreateNotifyGroupRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *CreateNotifyGroupRequest) GetTargets() []*NotifyTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *CreateNotifyGroupRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CreateNotifyGroupRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateNotifyGroupRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *CreateNotifyGroupRequest) GetAutoCreate() bool {
	if x != nil {
		return x.AutoCreate
	}
	return false
}

func (x *CreateNotifyGroupRequest) GetOrgID() int64 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

type NotifyTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Values []*Target `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *NotifyTarget) Reset() {
	*x = NotifyTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTarget) ProtoMessage() {}

func (x *NotifyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTarget.ProtoReflect.Descriptor instead.
func (*NotifyTarget) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{1}
}

func (x *NotifyTarget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyTarget) GetValues() []*Target {
	if x != nil {
		return x.Values
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Secret   string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{2}
}

func (x *Target) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Target) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type CreateNotifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GroupIdAndProjectId `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateNotifyGroupResponse) Reset() {
	*x = CreateNotifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyGroupResponse) ProtoMessage() {}

func (x *CreateNotifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNotifyGroupResponse) GetData() *GroupIdAndProjectId {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotifyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ScopeType string                 `protobuf:"bytes,3,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeId   string                 `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Targets   []*NotifyTarget        `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Creator   string                 `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	Label     string                 `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	ProjectId uint64                 `protobuf:"varint,9,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *NotifyGroup) Reset() {
	*x = NotifyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGroup) ProtoMessage() {}

func (x *NotifyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGroup.ProtoReflect.Descriptor instead.
func (*NotifyGroup) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{4}
}

func (x *NotifyGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyGroup) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *NotifyGroup) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *NotifyGroup) GetTargets() []*NotifyTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *NotifyGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NotifyGroup) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *NotifyGroup) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *NotifyGroup) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type QueryNotifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo      int64  `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ScopeType   string `protobuf:"bytes,3,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeId     string `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Label       string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	ClusterName string `protobuf:"bytes,6,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Name        string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryNotifyGroupRequest) Reset() {
	*x = QueryNotifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNotifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotifyGroupRequest) ProtoMessage() {}

func (x *QueryNotifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotifyGroupRequest.ProtoReflect.Descriptor instead.
func (*QueryNotifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{5}
}

func (x *QueryNotifyGroupRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *QueryNotifyGroupRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryNotifyGroupRequest) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *QueryNotifyGroupRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *QueryNotifyGroupRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *QueryNotifyGroupRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *QueryNotifyGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type QueryNotifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *QueryNotifyGroupData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UserIDs []string              `protobuf:"bytes,2,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
}

func (x *QueryNotifyGroupResponse) Reset() {
	*x = QueryNotifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNotifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotifyGroupResponse) ProtoMessage() {}

func (x *QueryNotifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotifyGroupResponse.ProtoReflect.Descriptor instead.
func (*QueryNotifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{6}
}

func (x *QueryNotifyGroupResponse) GetData() *QueryNotifyGroupData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryNotifyGroupResponse) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type QueryNotifyGroupData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NotifyGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryNotifyGroupData) Reset() {
	*x = QueryNotifyGroupData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNotifyGroupData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotifyGroupData) ProtoMessage() {}

func (x *QueryNotifyGroupData) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotifyGroupData.ProtoReflect.Descriptor instead.
func (*QueryNotifyGroupData) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{7}
}

func (x *QueryNotifyGroupData) GetList() []*NotifyGroup {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryNotifyGroupData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNotifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *GetNotifyGroupRequest) Reset() {
	*x = GetNotifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyGroupRequest) ProtoMessage() {}

func (x *GetNotifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyGroupRequest.ProtoReflect.Descriptor instead.
func (*GetNotifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{8}
}

func (x *GetNotifyGroupRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type GetNotifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *NotifyGroup `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UserIDs []string     `protobuf:"bytes,2,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
}

func (x *GetNotifyGroupResponse) Reset() {
	*x = GetNotifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyGroupResponse) ProtoMessage() {}

func (x *GetNotifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyGroupResponse.ProtoReflect.Descriptor instead.
func (*GetNotifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{9}
}

func (x *GetNotifyGroupResponse) GetData() *NotifyGroup {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetNotifyGroupResponse) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Nick        string `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`
	Avatar      string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Phone       string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Email       string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Token       string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	LastLoginAt string `protobuf:"bytes,8,opt,name=lastLoginAt,proto3" json:"lastLoginAt,omitempty"`
	PwdExpireAt string `protobuf:"bytes,9,opt,name=pwdExpireAt,proto3" json:"pwdExpireAt,omitempty"`
	Source      string `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{10}
}

func (x *UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserInfo) GetLastLoginAt() string {
	if x != nil {
		return x.LastLoginAt
	}
	return ""
}

func (x *UserInfo) GetPwdExpireAt() string {
	if x != nil {
		return x.PwdExpireAt
	}
	return ""
}

func (x *UserInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type UpdateNotifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Targets []*NotifyTarget `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	GroupID int64           `protobuf:"varint,4,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *UpdateNotifyGroupRequest) Reset() {
	*x = UpdateNotifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifyGroupRequest) ProtoMessage() {}

func (x *UpdateNotifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifyGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateNotifyGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNotifyGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNotifyGroupRequest) GetTargets() []*NotifyTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *UpdateNotifyGroupRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type UpdateNotifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GroupIdAndProjectId `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateNotifyGroupResponse) Reset() {
	*x = UpdateNotifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifyGroupResponse) ProtoMessage() {}

func (x *UpdateNotifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifyGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateNotifyGroupResponse) GetData() *GroupIdAndProjectId {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNotifyGroupDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *GetNotifyGroupDetailRequest) Reset() {
	*x = GetNotifyGroupDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyGroupDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyGroupDetailRequest) ProtoMessage() {}

func (x *GetNotifyGroupDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyGroupDetailRequest.ProtoReflect.Descriptor instead.
func (*GetNotifyGroupDetailRequest) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{13}
}

func (x *GetNotifyGroupDetailRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type GetNotifyGroupDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *NotifyGroupDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetNotifyGroupDetailResponse) Reset() {
	*x = GetNotifyGroupDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotifyGroupDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotifyGroupDetailResponse) ProtoMessage() {}

func (x *GetNotifyGroupDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotifyGroupDetailResponse.ProtoReflect.Descriptor instead.
func (*GetNotifyGroupDetailResponse) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{14}
}

func (x *GetNotifyGroupDetailResponse) GetData() *NotifyGroupDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type NotifyGroupDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                   string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ScopeType              string          `protobuf:"bytes,3,opt,name=scopeType,proto3" json:"scopeType,omitempty"`
	ScopeId                string          `protobuf:"bytes,4,opt,name=scopeId,proto3" json:"scopeId,omitempty"`
	Users                  []*NotifyUser   `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	Targets                []*NotifyTarget `protobuf:"bytes,6,rep,name=targets,proto3" json:"targets,omitempty"`
	DingdingList           []*Target       `protobuf:"bytes,7,rep,name=dingdingList,proto3" json:"dingdingList,omitempty"`
	DingdingWorknoticeList []*Target       `protobuf:"bytes,8,rep,name=dingdingWorknoticeList,proto3" json:"dingdingWorknoticeList,omitempty"`
	WebhookList            []string        `protobuf:"bytes,9,rep,name=webhookList,proto3" json:"webhookList,omitempty"`
}

func (x *NotifyGroupDetail) Reset() {
	*x = NotifyGroupDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGroupDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGroupDetail) ProtoMessage() {}

func (x *NotifyGroupDetail) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGroupDetail.ProtoReflect.Descriptor instead.
func (*NotifyGroupDetail) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyGroupDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyGroupDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyGroupDetail) GetScopeType() string {
	if x != nil {
		return x.ScopeType
	}
	return ""
}

func (x *NotifyGroupDetail) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *NotifyGroupDetail) GetUsers() []*NotifyUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *NotifyGroupDetail) GetTargets() []*NotifyTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *NotifyGroupDetail) GetDingdingList() []*Target {
	if x != nil {
		return x.DingdingList
	}
	return nil
}

func (x *NotifyGroupDetail) GetDingdingWorknoticeList() []*Target {
	if x != nil {
		return x.DingdingWorknoticeList
	}
	return nil
}

func (x *NotifyGroupDetail) GetWebhookList() []string {
	if x != nil {
		return x.WebhookList
	}
	return nil
}

type NotifyUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Mobile   string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *NotifyUser) Reset() {
	*x = NotifyUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyUser) ProtoMessage() {}

func (x *NotifyUser) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyUser.ProtoReflect.Descriptor instead.
func (*NotifyUser) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotifyUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *NotifyUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *NotifyUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *NotifyUser) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DeleteNotifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *DeleteNotifyGroupRequest) Reset() {
	*x = DeleteNotifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotifyGroupRequest) ProtoMessage() {}

func (x *DeleteNotifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotifyGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteNotifyGroupRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type DeleteNotifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GroupIdAndProjectId `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteNotifyGroupResponse) Reset() {
	*x = DeleteNotifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNotifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotifyGroupResponse) ProtoMessage() {}

func (x *DeleteNotifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotifyGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteNotifyGroupResponse) GetData() *GroupIdAndProjectId {
	if x != nil {
		return x.Data
	}
	return nil
}

type GroupIdAndProjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID   int64  `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	ProjectId uint64 `protobuf:"varint,9,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *GroupIdAndProjectId) Reset() {
	*x = GroupIdAndProjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifygroup_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupIdAndProjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupIdAndProjectId) ProtoMessage() {}

func (x *GroupIdAndProjectId) ProtoReflect() protoreflect.Message {
	mi := &file_notifygroup_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupIdAndProjectId.ProtoReflect.Descriptor instead.
func (*GroupIdAndProjectId) Descriptor() ([]byte, []int) {
	return file_notifygroup_proto_rawDescGZIP(), []int{19}
}

func (x *GroupIdAndProjectId) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *GroupIdAndProjectId) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

var File_notifygroup_proto protoreflect.FileDescriptor

var file_notifygroup_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x01, 0x2d, 0x12, 0x10, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x2d, 0x22, 0x5c, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x5e, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x02, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x40, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x78,
	0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x67, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x77, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x77, 0x64, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x9a,
	0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x5e, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x03, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x64, 0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0c, 0x64,
	0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x64,
	0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x16, 0x64,
	0x69, 0x6e, 0x67, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x5e, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x32, 0xe9, 0x09, 0x0a, 0x12, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xb9, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70,
	0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0xfa, 0x81,
	0xf9, 0x1b, 0x18, 0x0a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0xb6, 0x01, 0x0a, 0x10,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x18, 0x0a, 0x16, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0xc4, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x22, 0x0a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x7d, 0x12, 0xcd, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x1a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x22, 0x0a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x7d, 0x12, 0xe4, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x7d, 0x2f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0xfa, 0x81, 0xf9, 0x1b, 0x29, 0x0a, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x7d, 0x2f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0xcd, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x22,
	0x0a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x7d, 0x1a, 0x10, 0xc2, 0xc4, 0xcb, 0x1c, 0x0b, 0x22, 0x03, 0x6d, 0x73, 0x70, 0x32, 0x04,
	0x10, 0x01, 0x20, 0x01, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6d, 0x73,
	0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notifygroup_proto_rawDescOnce sync.Once
	file_notifygroup_proto_rawDescData = file_notifygroup_proto_rawDesc
)

func file_notifygroup_proto_rawDescGZIP() []byte {
	file_notifygroup_proto_rawDescOnce.Do(func() {
		file_notifygroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_notifygroup_proto_rawDescData)
	})
	return file_notifygroup_proto_rawDescData
}

var file_notifygroup_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_notifygroup_proto_goTypes = []interface{}{
	(*CreateNotifyGroupRequest)(nil),     // 0: erda.msp.apm.notifygroup.CreateNotifyGroupRequest
	(*NotifyTarget)(nil),                 // 1: erda.msp.apm.notifygroup.NotifyTarget
	(*Target)(nil),                       // 2: erda.msp.apm.notifygroup.Target
	(*CreateNotifyGroupResponse)(nil),    // 3: erda.msp.apm.notifygroup.CreateNotifyGroupResponse
	(*NotifyGroup)(nil),                  // 4: erda.msp.apm.notifygroup.NotifyGroup
	(*QueryNotifyGroupRequest)(nil),      // 5: erda.msp.apm.notifygroup.QueryNotifyGroupRequest
	(*QueryNotifyGroupResponse)(nil),     // 6: erda.msp.apm.notifygroup.QueryNotifyGroupResponse
	(*QueryNotifyGroupData)(nil),         // 7: erda.msp.apm.notifygroup.QueryNotifyGroupData
	(*GetNotifyGroupRequest)(nil),        // 8: erda.msp.apm.notifygroup.GetNotifyGroupRequest
	(*GetNotifyGroupResponse)(nil),       // 9: erda.msp.apm.notifygroup.GetNotifyGroupResponse
	(*UserInfo)(nil),                     // 10: erda.msp.apm.notifygroup.UserInfo
	(*UpdateNotifyGroupRequest)(nil),     // 11: erda.msp.apm.notifygroup.UpdateNotifyGroupRequest
	(*UpdateNotifyGroupResponse)(nil),    // 12: erda.msp.apm.notifygroup.UpdateNotifyGroupResponse
	(*GetNotifyGroupDetailRequest)(nil),  // 13: erda.msp.apm.notifygroup.GetNotifyGroupDetailRequest
	(*GetNotifyGroupDetailResponse)(nil), // 14: erda.msp.apm.notifygroup.GetNotifyGroupDetailResponse
	(*NotifyGroupDetail)(nil),            // 15: erda.msp.apm.notifygroup.NotifyGroupDetail
	(*NotifyUser)(nil),                   // 16: erda.msp.apm.notifygroup.NotifyUser
	(*DeleteNotifyGroupRequest)(nil),     // 17: erda.msp.apm.notifygroup.DeleteNotifyGroupRequest
	(*DeleteNotifyGroupResponse)(nil),    // 18: erda.msp.apm.notifygroup.DeleteNotifyGroupResponse
	(*GroupIdAndProjectId)(nil),          // 19: erda.msp.apm.notifygroup.GroupIdAndProjectId
	(*timestamppb.Timestamp)(nil),        // 20: google.protobuf.Timestamp
}
var file_notifygroup_proto_depIdxs = []int32{
	1,  // 0: erda.msp.apm.notifygroup.CreateNotifyGroupRequest.targets:type_name -> erda.msp.apm.notifygroup.NotifyTarget
	2,  // 1: erda.msp.apm.notifygroup.NotifyTarget.values:type_name -> erda.msp.apm.notifygroup.Target
	19, // 2: erda.msp.apm.notifygroup.CreateNotifyGroupResponse.data:type_name -> erda.msp.apm.notifygroup.GroupIdAndProjectId
	1,  // 3: erda.msp.apm.notifygroup.NotifyGroup.targets:type_name -> erda.msp.apm.notifygroup.NotifyTarget
	20, // 4: erda.msp.apm.notifygroup.NotifyGroup.createdAt:type_name -> google.protobuf.Timestamp
	7,  // 5: erda.msp.apm.notifygroup.QueryNotifyGroupResponse.data:type_name -> erda.msp.apm.notifygroup.QueryNotifyGroupData
	4,  // 6: erda.msp.apm.notifygroup.QueryNotifyGroupData.list:type_name -> erda.msp.apm.notifygroup.NotifyGroup
	4,  // 7: erda.msp.apm.notifygroup.GetNotifyGroupResponse.data:type_name -> erda.msp.apm.notifygroup.NotifyGroup
	1,  // 8: erda.msp.apm.notifygroup.UpdateNotifyGroupRequest.targets:type_name -> erda.msp.apm.notifygroup.NotifyTarget
	19, // 9: erda.msp.apm.notifygroup.UpdateNotifyGroupResponse.data:type_name -> erda.msp.apm.notifygroup.GroupIdAndProjectId
	15, // 10: erda.msp.apm.notifygroup.GetNotifyGroupDetailResponse.data:type_name -> erda.msp.apm.notifygroup.NotifyGroupDetail
	16, // 11: erda.msp.apm.notifygroup.NotifyGroupDetail.users:type_name -> erda.msp.apm.notifygroup.NotifyUser
	1,  // 12: erda.msp.apm.notifygroup.NotifyGroupDetail.targets:type_name -> erda.msp.apm.notifygroup.NotifyTarget
	2,  // 13: erda.msp.apm.notifygroup.NotifyGroupDetail.dingdingList:type_name -> erda.msp.apm.notifygroup.Target
	2,  // 14: erda.msp.apm.notifygroup.NotifyGroupDetail.dingdingWorknoticeList:type_name -> erda.msp.apm.notifygroup.Target
	19, // 15: erda.msp.apm.notifygroup.DeleteNotifyGroupResponse.data:type_name -> erda.msp.apm.notifygroup.GroupIdAndProjectId
	0,  // 16: erda.msp.apm.notifygroup.NotifyGroupService.CreateNotifyGroup:input_type -> erda.msp.apm.notifygroup.CreateNotifyGroupRequest
	5,  // 17: erda.msp.apm.notifygroup.NotifyGroupService.QueryNotifyGroup:input_type -> erda.msp.apm.notifygroup.QueryNotifyGroupRequest
	8,  // 18: erda.msp.apm.notifygroup.NotifyGroupService.GetNotifyGroup:input_type -> erda.msp.apm.notifygroup.GetNotifyGroupRequest
	11, // 19: erda.msp.apm.notifygroup.NotifyGroupService.UpdateNotifyGroup:input_type -> erda.msp.apm.notifygroup.UpdateNotifyGroupRequest
	13, // 20: erda.msp.apm.notifygroup.NotifyGroupService.GetNotifyGroupDetail:input_type -> erda.msp.apm.notifygroup.GetNotifyGroupDetailRequest
	17, // 21: erda.msp.apm.notifygroup.NotifyGroupService.DeleteNotifyGroup:input_type -> erda.msp.apm.notifygroup.DeleteNotifyGroupRequest
	3,  // 22: erda.msp.apm.notifygroup.NotifyGroupService.CreateNotifyGroup:output_type -> erda.msp.apm.notifygroup.CreateNotifyGroupResponse
	6,  // 23: erda.msp.apm.notifygroup.NotifyGroupService.QueryNotifyGroup:output_type -> erda.msp.apm.notifygroup.QueryNotifyGroupResponse
	9,  // 24: erda.msp.apm.notifygroup.NotifyGroupService.GetNotifyGroup:output_type -> erda.msp.apm.notifygroup.GetNotifyGroupResponse
	12, // 25: erda.msp.apm.notifygroup.NotifyGroupService.UpdateNotifyGroup:output_type -> erda.msp.apm.notifygroup.UpdateNotifyGroupResponse
	14, // 26: erda.msp.apm.notifygroup.NotifyGroupService.GetNotifyGroupDetail:output_type -> erda.msp.apm.notifygroup.GetNotifyGroupDetailResponse
	18, // 27: erda.msp.apm.notifygroup.NotifyGroupService.DeleteNotifyGroup:output_type -> erda.msp.apm.notifygroup.DeleteNotifyGroupResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_notifygroup_proto_init() }
func file_notifygroup_proto_init() {
	if File_notifygroup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notifygroup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNotifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNotifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNotifyGroupData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyGroupDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotifyGroupDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGroupDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNotifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifygroup_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupIdAndProjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notifygroup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notifygroup_proto_goTypes,
		DependencyIndexes: file_notifygroup_proto_depIdxs,
		MessageInfos:      file_notifygroup_proto_msgTypes,
	}.Build()
	File_notifygroup_proto = out.File
	file_notifygroup_proto_rawDesc = nil
	file_notifygroup_proto_goTypes = nil
	file_notifygroup_proto_depIdxs = nil
}
