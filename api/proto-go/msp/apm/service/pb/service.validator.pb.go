// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package pb

import (
	fmt "fmt"
	math "math"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/descriptorpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *GetServiceOverviewTopRequest) Validate() error {
	return nil
}
func (this *GetServiceOverviewTopResponse) Validate() error {
	return nil
}
func (this *GetServiceCountRequest) Validate() error {
	return nil
}
func (this *GetServiceCountResponse) Validate() error {
	return nil
}
func (this *GetServiceAnalyzerOverviewRequest) Validate() error {
	return nil
}
func (this *GetServiceAnalyzerOverviewResponse) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}
func (this *ServicesView) Validate() error {
	for _, item := range this.Views {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Views", err)
			}
		}
	}
	return nil
}
func (this *GetServicesRequest) Validate() error {
	return nil
}
func (this *GetServicesResponse) Validate() error {
	for _, item := range this.List {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("List", err)
			}
		}
	}
	return nil
}
func (this *TopTable) Validate() error {
	return nil
}
func (this *Chart) Validate() error {
	return nil
}
func (this *ServiceTop) Validate() error {
	for _, item := range this.Tops {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tops", err)
			}
		}
	}
	return nil
}
func (this *ServiceChart) Validate() error {
	for _, item := range this.View {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("View", err)
			}
		}
	}
	return nil
}
func (this *Service) Validate() error {
	return nil
}
func (this *AggregateMetric) Validate() error {
	return nil
}
