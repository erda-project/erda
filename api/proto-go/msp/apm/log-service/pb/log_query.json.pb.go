// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: log_query.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*GetFieldSettingsRequest)(nil)
var _ json.Unmarshaler = (*GetFieldSettingsRequest)(nil)
var _ json.Marshaler = (*GetFieldSettingsResponse)(nil)
var _ json.Unmarshaler = (*GetFieldSettingsResponse)(nil)
var _ json.Marshaler = (*LogField)(nil)
var _ json.Unmarshaler = (*LogField)(nil)
var _ json.Marshaler = (*SequentialSearchRequest)(nil)
var _ json.Unmarshaler = (*SequentialSearchRequest)(nil)
var _ json.Marshaler = (*SequentialSearchResponse)(nil)
var _ json.Unmarshaler = (*SequentialSearchResponse)(nil)
var _ json.Marshaler = (*PagedSearchRequest)(nil)
var _ json.Unmarshaler = (*PagedSearchRequest)(nil)
var _ json.Marshaler = (*PagedSearchResponse)(nil)
var _ json.Unmarshaler = (*PagedSearchResponse)(nil)
var _ json.Marshaler = (*LogQueryResult)(nil)
var _ json.Unmarshaler = (*LogQueryResult)(nil)
var _ json.Marshaler = (*HighlightLog)(nil)
var _ json.Unmarshaler = (*HighlightLog)(nil)
var _ json.Marshaler = (*LogItem)(nil)
var _ json.Unmarshaler = (*LogItem)(nil)
var _ json.Marshaler = (*BucketAggregationRequest)(nil)
var _ json.Unmarshaler = (*BucketAggregationRequest)(nil)
var _ json.Marshaler = (*BucketAggregationResponse)(nil)
var _ json.Unmarshaler = (*BucketAggregationResponse)(nil)
var _ json.Marshaler = (*LogFieldsAggregationResult)(nil)
var _ json.Unmarshaler = (*LogFieldsAggregationResult)(nil)
var _ json.Marshaler = (*LogFieldBucket)(nil)
var _ json.Unmarshaler = (*LogFieldBucket)(nil)
var _ json.Marshaler = (*BucketAgg)(nil)
var _ json.Unmarshaler = (*BucketAgg)(nil)
var _ json.Marshaler = (*HistogramAggregationRequest)(nil)
var _ json.Unmarshaler = (*HistogramAggregationRequest)(nil)
var _ json.Marshaler = (*HistogramAggregationResponse)(nil)
var _ json.Unmarshaler = (*HistogramAggregationResponse)(nil)
var _ json.Marshaler = (*HistogramAggregationResult)(nil)
var _ json.Unmarshaler = (*HistogramAggregationResult)(nil)
var _ json.Marshaler = (*LogStatisticResult)(nil)
var _ json.Unmarshaler = (*LogStatisticResult)(nil)
var _ json.Marshaler = (*CountHistogram)(nil)
var _ json.Unmarshaler = (*CountHistogram)(nil)
var _ json.Marshaler = (*ArrayAgg)(nil)
var _ json.Unmarshaler = (*ArrayAgg)(nil)

// GetFieldSettingsRequest implement json.Marshaler.
func (m *GetFieldSettingsRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GetFieldSettingsRequest implement json.Marshaler.
func (m *GetFieldSettingsRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// GetFieldSettingsResponse implement json.Marshaler.
func (m *GetFieldSettingsResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// GetFieldSettingsResponse implement json.Marshaler.
func (m *GetFieldSettingsResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// LogField implement json.Marshaler.
func (m *LogField) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// LogField implement json.Marshaler.
func (m *LogField) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// SequentialSearchRequest implement json.Marshaler.
func (m *SequentialSearchRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// SequentialSearchRequest implement json.Marshaler.
func (m *SequentialSearchRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// SequentialSearchResponse implement json.Marshaler.
func (m *SequentialSearchResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// SequentialSearchResponse implement json.Marshaler.
func (m *SequentialSearchResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PagedSearchRequest implement json.Marshaler.
func (m *PagedSearchRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PagedSearchRequest implement json.Marshaler.
func (m *PagedSearchRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// PagedSearchResponse implement json.Marshaler.
func (m *PagedSearchResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// PagedSearchResponse implement json.Marshaler.
func (m *PagedSearchResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// LogQueryResult implement json.Marshaler.
func (m *LogQueryResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// LogQueryResult implement json.Marshaler.
func (m *LogQueryResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// HighlightLog implement json.Marshaler.
func (m *HighlightLog) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// HighlightLog implement json.Marshaler.
func (m *HighlightLog) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// LogItem implement json.Marshaler.
func (m *LogItem) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// LogItem implement json.Marshaler.
func (m *LogItem) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// BucketAggregationRequest implement json.Marshaler.
func (m *BucketAggregationRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// BucketAggregationRequest implement json.Marshaler.
func (m *BucketAggregationRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// BucketAggregationResponse implement json.Marshaler.
func (m *BucketAggregationResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// BucketAggregationResponse implement json.Marshaler.
func (m *BucketAggregationResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// LogFieldsAggregationResult implement json.Marshaler.
func (m *LogFieldsAggregationResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// LogFieldsAggregationResult implement json.Marshaler.
func (m *LogFieldsAggregationResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// LogFieldBucket implement json.Marshaler.
func (m *LogFieldBucket) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// LogFieldBucket implement json.Marshaler.
func (m *LogFieldBucket) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// BucketAgg implement json.Marshaler.
func (m *BucketAgg) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// BucketAgg implement json.Marshaler.
func (m *BucketAgg) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// HistogramAggregationRequest implement json.Marshaler.
func (m *HistogramAggregationRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// HistogramAggregationRequest implement json.Marshaler.
func (m *HistogramAggregationRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// HistogramAggregationResponse implement json.Marshaler.
func (m *HistogramAggregationResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// HistogramAggregationResponse implement json.Marshaler.
func (m *HistogramAggregationResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// HistogramAggregationResult implement json.Marshaler.
func (m *HistogramAggregationResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// HistogramAggregationResult implement json.Marshaler.
func (m *HistogramAggregationResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// LogStatisticResult implement json.Marshaler.
func (m *LogStatisticResult) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// LogStatisticResult implement json.Marshaler.
func (m *LogStatisticResult) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CountHistogram implement json.Marshaler.
func (m *CountHistogram) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CountHistogram implement json.Marshaler.
func (m *CountHistogram) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ArrayAgg implement json.Marshaler.
func (m *ArrayAgg) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ArrayAgg implement json.Marshaler.
func (m *ArrayAgg) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
