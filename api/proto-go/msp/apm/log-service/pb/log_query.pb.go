// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: log_query.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFieldSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addon string `protobuf:"bytes,1,opt,name=addon,proto3" json:"addon,omitempty"`
}

func (x *GetFieldSettingsRequest) Reset() {
	*x = GetFieldSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldSettingsRequest) ProtoMessage() {}

func (x *GetFieldSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetFieldSettingsRequest) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetFieldSettingsRequest) GetAddon() string {
	if x != nil {
		return x.Addon
	}
	return ""
}

type GetFieldSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*LogField `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetFieldSettingsResponse) Reset() {
	*x = GetFieldSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldSettingsResponse) ProtoMessage() {}

func (x *GetFieldSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetFieldSettingsResponse) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetFieldSettingsResponse) GetData() []*LogField {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName          string `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	SupportAggregation bool   `protobuf:"varint,2,opt,name=supportAggregation,proto3" json:"supportAggregation,omitempty"`
	Display            bool   `protobuf:"varint,3,opt,name=display,proto3" json:"display,omitempty"`
	AllowEdit          bool   `protobuf:"varint,4,opt,name=allowEdit,proto3" json:"allowEdit,omitempty"`
	Group              int32  `protobuf:"varint,5,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *LogField) Reset() {
	*x = LogField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogField) ProtoMessage() {}

func (x *LogField) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogField.ProtoReflect.Descriptor instead.
func (*LogField) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{2}
}

func (x *LogField) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *LogField) GetSupportAggregation() bool {
	if x != nil {
		return x.SupportAggregation
	}
	return false
}

func (x *LogField) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *LogField) GetAllowEdit() bool {
	if x != nil {
		return x.AllowEdit
	}
	return false
}

func (x *LogField) GetGroup() int32 {
	if x != nil {
		return x.Group
	}
	return 0
}

type SequentialSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start          int64  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End            int64  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	ClusterName    string `protobuf:"bytes,3,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Addon          string `protobuf:"bytes,4,opt,name=addon,proto3" json:"addon,omitempty"`
	Query          string `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Debug          bool   `protobuf:"varint,6,opt,name=debug,proto3" json:"debug,omitempty"`
	Sort           string `protobuf:"bytes,7,opt,name=sort,proto3" json:"sort,omitempty"`
	Id             string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	TimestampNanos int64  `protobuf:"varint,9,opt,name=timestampNanos,proto3" json:"timestampNanos,omitempty"`
	Offset         int64  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Count          int64  `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SequentialSearchRequest) Reset() {
	*x = SequentialSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequentialSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequentialSearchRequest) ProtoMessage() {}

func (x *SequentialSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequentialSearchRequest.ProtoReflect.Descriptor instead.
func (*SequentialSearchRequest) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{3}
}

func (x *SequentialSearchRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SequentialSearchRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SequentialSearchRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *SequentialSearchRequest) GetAddon() string {
	if x != nil {
		return x.Addon
	}
	return ""
}

func (x *SequentialSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SequentialSearchRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *SequentialSearchRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SequentialSearchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SequentialSearchRequest) GetTimestampNanos() int64 {
	if x != nil {
		return x.TimestampNanos
	}
	return 0
}

func (x *SequentialSearchRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SequentialSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SequentialSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *LogQueryResult `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SequentialSearchResponse) Reset() {
	*x = SequentialSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequentialSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequentialSearchResponse) ProtoMessage() {}

func (x *SequentialSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequentialSearchResponse.ProtoReflect.Descriptor instead.
func (*SequentialSearchResponse) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{4}
}

func (x *SequentialSearchResponse) GetData() *LogQueryResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type PagedSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start       int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End         int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	ClusterName string   `protobuf:"bytes,3,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Addon       string   `protobuf:"bytes,4,opt,name=addon,proto3" json:"addon,omitempty"`
	Query       string   `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Debug       bool     `protobuf:"varint,6,opt,name=debug,proto3" json:"debug,omitempty"`
	PageNo      int64    `protobuf:"varint,7,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize    int64    `protobuf:"varint,8,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Sort        []string `protobuf:"bytes,9,rep,name=sort,proto3" json:"sort,omitempty"`
	Highlight   bool     `protobuf:"varint,10,opt,name=highlight,proto3" json:"highlight,omitempty"`
}

func (x *PagedSearchRequest) Reset() {
	*x = PagedSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedSearchRequest) ProtoMessage() {}

func (x *PagedSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedSearchRequest.ProtoReflect.Descriptor instead.
func (*PagedSearchRequest) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{5}
}

func (x *PagedSearchRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PagedSearchRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *PagedSearchRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *PagedSearchRequest) GetAddon() string {
	if x != nil {
		return x.Addon
	}
	return ""
}

func (x *PagedSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PagedSearchRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *PagedSearchRequest) GetPageNo() int64 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *PagedSearchRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PagedSearchRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PagedSearchRequest) GetHighlight() bool {
	if x != nil {
		return x.Highlight
	}
	return false
}

type PagedSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *LogQueryResult `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PagedSearchResponse) Reset() {
	*x = PagedSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagedSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedSearchResponse) ProtoMessage() {}

func (x *PagedSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedSearchResponse.ProtoReflect.Descriptor instead.
func (*PagedSearchResponse) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{6}
}

func (x *PagedSearchResponse) GetData() *LogQueryResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*HighlightLog `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LogQueryResult) Reset() {
	*x = LogQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogQueryResult) ProtoMessage() {}

func (x *LogQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogQueryResult.ProtoReflect.Descriptor instead.
func (*LogQueryResult) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{7}
}

func (x *LogQueryResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LogQueryResult) GetData() []*HighlightLog {
	if x != nil {
		return x.Data
	}
	return nil
}

type HighlightLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source    *LogItem                       `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Highlight map[string]*structpb.ListValue `protobuf:"bytes,2,rep,name=highlight,proto3" json:"highlight,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HighlightLog) Reset() {
	*x = HighlightLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighlightLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighlightLog) ProtoMessage() {}

func (x *HighlightLog) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighlightLog.ProtoReflect.Descriptor instead.
func (*HighlightLog) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{8}
}

func (x *HighlightLog) GetSource() *LogItem {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *HighlightLog) GetHighlight() map[string]*structpb.ListValue {
	if x != nil {
		return x.Highlight
	}
	return nil
}

type LogItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId          string            `protobuf:"bytes,1,opt,name=docId,json=_id,proto3" json:"docId,omitempty"`
	Id             string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Source         string            `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Stream         string            `protobuf:"bytes,4,opt,name=stream,proto3" json:"stream,omitempty"`
	Content        string            `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Offset         int64             `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp      int64             `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimestampNanos string            `protobuf:"bytes,8,opt,name=timestampNanos,proto3" json:"timestampNanos,omitempty"`
	Tags           map[string]string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LogItem) Reset() {
	*x = LogItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogItem) ProtoMessage() {}

func (x *LogItem) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogItem.ProtoReflect.Descriptor instead.
func (*LogItem) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{9}
}

func (x *LogItem) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *LogItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogItem) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LogItem) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *LogItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LogItem) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LogItem) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogItem) GetTimestampNanos() string {
	if x != nil {
		return x.TimestampNanos
	}
	return ""
}

func (x *LogItem) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type BucketAggregationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start       int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End         int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	ClusterName string   `protobuf:"bytes,3,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Addon       string   `protobuf:"bytes,4,opt,name=addon,proto3" json:"addon,omitempty"`
	Query       string   `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Debug       bool     `protobuf:"varint,6,opt,name=debug,proto3" json:"debug,omitempty"`
	AggFields   []string `protobuf:"bytes,7,rep,name=aggFields,proto3" json:"aggFields,omitempty"`
	TermsSize   int64    `protobuf:"varint,8,opt,name=termsSize,proto3" json:"termsSize,omitempty"`
}

func (x *BucketAggregationRequest) Reset() {
	*x = BucketAggregationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketAggregationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketAggregationRequest) ProtoMessage() {}

func (x *BucketAggregationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketAggregationRequest.ProtoReflect.Descriptor instead.
func (*BucketAggregationRequest) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{10}
}

func (x *BucketAggregationRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *BucketAggregationRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *BucketAggregationRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *BucketAggregationRequest) GetAddon() string {
	if x != nil {
		return x.Addon
	}
	return ""
}

func (x *BucketAggregationRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BucketAggregationRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *BucketAggregationRequest) GetAggFields() []string {
	if x != nil {
		return x.AggFields
	}
	return nil
}

func (x *BucketAggregationRequest) GetTermsSize() int64 {
	if x != nil {
		return x.TermsSize
	}
	return 0
}

type BucketAggregationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *LogFieldsAggregationResult `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BucketAggregationResponse) Reset() {
	*x = BucketAggregationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketAggregationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketAggregationResponse) ProtoMessage() {}

func (x *BucketAggregationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketAggregationResponse.ProtoReflect.Descriptor instead.
func (*BucketAggregationResponse) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{11}
}

func (x *BucketAggregationResponse) GetData() *LogFieldsAggregationResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogFieldsAggregationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     int64                      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	AggFields map[string]*LogFieldBucket `protobuf:"bytes,2,rep,name=aggFields,proto3" json:"aggFields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LogFieldsAggregationResult) Reset() {
	*x = LogFieldsAggregationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogFieldsAggregationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFieldsAggregationResult) ProtoMessage() {}

func (x *LogFieldsAggregationResult) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFieldsAggregationResult.ProtoReflect.Descriptor instead.
func (*LogFieldsAggregationResult) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{12}
}

func (x *LogFieldsAggregationResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LogFieldsAggregationResult) GetAggFields() map[string]*LogFieldBucket {
	if x != nil {
		return x.AggFields
	}
	return nil
}

type LogFieldBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*BucketAgg `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *LogFieldBucket) Reset() {
	*x = LogFieldBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogFieldBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFieldBucket) ProtoMessage() {}

func (x *LogFieldBucket) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFieldBucket.ProtoReflect.Descriptor instead.
func (*LogFieldBucket) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{13}
}

func (x *LogFieldBucket) GetBuckets() []*BucketAgg {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type BucketAgg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BucketAgg) Reset() {
	*x = BucketAgg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketAgg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketAgg) ProtoMessage() {}

func (x *BucketAgg) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketAgg.ProtoReflect.Descriptor instead.
func (*BucketAgg) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{14}
}

func (x *BucketAgg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BucketAgg) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type HistogramAggregationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start       int64  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End         int64  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	ClusterName string `protobuf:"bytes,3,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Addon       string `protobuf:"bytes,4,opt,name=addon,proto3" json:"addon,omitempty"`
	Query       string `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Debug       bool   `protobuf:"varint,6,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *HistogramAggregationRequest) Reset() {
	*x = HistogramAggregationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramAggregationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramAggregationRequest) ProtoMessage() {}

func (x *HistogramAggregationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramAggregationRequest.ProtoReflect.Descriptor instead.
func (*HistogramAggregationRequest) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{15}
}

func (x *HistogramAggregationRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *HistogramAggregationRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *HistogramAggregationRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *HistogramAggregationRequest) GetAddon() string {
	if x != nil {
		return x.Addon
	}
	return ""
}

func (x *HistogramAggregationRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *HistogramAggregationRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type HistogramAggregationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *HistogramAggregationResult `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HistogramAggregationResponse) Reset() {
	*x = HistogramAggregationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramAggregationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramAggregationResponse) ProtoMessage() {}

func (x *HistogramAggregationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramAggregationResponse.ProtoReflect.Descriptor instead.
func (*HistogramAggregationResponse) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{16}
}

func (x *HistogramAggregationResponse) GetData() *HistogramAggregationResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistogramAggregationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string                `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Total    int64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Interval int64                 `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
	Time     []int64               `protobuf:"varint,4,rep,packed,name=time,proto3" json:"time,omitempty"`
	Results  []*LogStatisticResult `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *HistogramAggregationResult) Reset() {
	*x = HistogramAggregationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramAggregationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramAggregationResult) ProtoMessage() {}

func (x *HistogramAggregationResult) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramAggregationResult.ProtoReflect.Descriptor instead.
func (*HistogramAggregationResult) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{17}
}

func (x *HistogramAggregationResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HistogramAggregationResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HistogramAggregationResult) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *HistogramAggregationResult) GetTime() []int64 {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *HistogramAggregationResult) GetResults() []*LogStatisticResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type LogStatisticResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data []*CountHistogram `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LogStatisticResult) Reset() {
	*x = LogStatisticResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogStatisticResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStatisticResult) ProtoMessage() {}

func (x *LogStatisticResult) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStatisticResult.ProtoReflect.Descriptor instead.
func (*LogStatisticResult) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{18}
}

func (x *LogStatisticResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogStatisticResult) GetData() []*CountHistogram {
	if x != nil {
		return x.Data
	}
	return nil
}

type CountHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *ArrayAgg `protobuf:"bytes,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountHistogram) Reset() {
	*x = CountHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountHistogram) ProtoMessage() {}

func (x *CountHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountHistogram.ProtoReflect.Descriptor instead.
func (*CountHistogram) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{19}
}

func (x *CountHistogram) GetCount() *ArrayAgg {
	if x != nil {
		return x.Count
	}
	return nil
}

type ArrayAgg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitType  string    `protobuf:"bytes,1,opt,name=unitType,proto3" json:"unitType,omitempty"`
	Unit      string    `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	ChartType string    `protobuf:"bytes,3,opt,name=chartType,proto3" json:"chartType,omitempty"`
	AxisIndex int64     `protobuf:"varint,4,opt,name=axisIndex,proto3" json:"axisIndex,omitempty"`
	Name      string    `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Tag       string    `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	Data      []float64 `protobuf:"fixed64,7,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *ArrayAgg) Reset() {
	*x = ArrayAgg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayAgg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayAgg) ProtoMessage() {}

func (x *ArrayAgg) ProtoReflect() protoreflect.Message {
	mi := &file_log_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayAgg.ProtoReflect.Descriptor instead.
func (*ArrayAgg) Descriptor() ([]byte, []int) {
	return file_log_query_proto_rawDescGZIP(), []int{20}
}

func (x *ArrayAgg) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

func (x *ArrayAgg) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ArrayAgg) GetChartType() string {
	if x != nil {
		return x.ChartType
	}
	return ""
}

func (x *ArrayAgg) GetAxisIndex() int64 {
	if x != nil {
		return x.AxisIndex
	}
	return 0
}

func (x *ArrayAgg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArrayAgg) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ArrayAgg) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_log_query_proto protoreflect.FileDescriptor

var file_log_query_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa6, 0x01, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x64, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x64, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x9f, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x64, 0x64, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61,
	0x6e, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x86, 0x02, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x53, 0x0a, 0x13, 0x50, 0x61,
	0x67, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c,
	0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x62, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x53, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69,
	0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x58, 0x0a, 0x0e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf,
	0x02, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x05, 0x64, 0x6f,
	0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x5f, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe2, 0x01, 0x0a, 0x18, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67, 0x67,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x67,
	0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x73,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x65, 0x0a, 0x19, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfd, 0x01, 0x0a,
	0x1a, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x61, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x67, 0x67, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x67, 0x67, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x66, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x3d,
	0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c,
	0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x67, 0x67, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x33, 0x0a,
	0x09, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x64, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22, 0x68,
	0x0a, 0x1c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x12, 0x4c,
	0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x38, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x41, 0x67, 0x67, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xb0, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x72, 0x61, 0x79, 0x41, 0x67, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x78,
	0x69, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x78, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0xf8, 0x06, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0xbc, 0x01, 0x0a, 0x14, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0xb0, 0x01, 0x0a, 0x11, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f,
	0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x6f, 0x6e,
	0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x64, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c,
	0x6f, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x6f,
	0x6e, 0x7d, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12,
	0xad, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x7d, 0x2f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0xab, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x31, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x7b, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x7d, 0x2f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x3e, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61,
	0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x6c,
	0x6f, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_log_query_proto_rawDescOnce sync.Once
	file_log_query_proto_rawDescData = file_log_query_proto_rawDesc
)

func file_log_query_proto_rawDescGZIP() []byte {
	file_log_query_proto_rawDescOnce.Do(func() {
		file_log_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_log_query_proto_rawDescData)
	})
	return file_log_query_proto_rawDescData
}

var file_log_query_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_log_query_proto_goTypes = []interface{}{
	(*GetFieldSettingsRequest)(nil),      // 0: erda.msp.apm.log_service.GetFieldSettingsRequest
	(*GetFieldSettingsResponse)(nil),     // 1: erda.msp.apm.log_service.GetFieldSettingsResponse
	(*LogField)(nil),                     // 2: erda.msp.apm.log_service.LogField
	(*SequentialSearchRequest)(nil),      // 3: erda.msp.apm.log_service.SequentialSearchRequest
	(*SequentialSearchResponse)(nil),     // 4: erda.msp.apm.log_service.SequentialSearchResponse
	(*PagedSearchRequest)(nil),           // 5: erda.msp.apm.log_service.PagedSearchRequest
	(*PagedSearchResponse)(nil),          // 6: erda.msp.apm.log_service.PagedSearchResponse
	(*LogQueryResult)(nil),               // 7: erda.msp.apm.log_service.LogQueryResult
	(*HighlightLog)(nil),                 // 8: erda.msp.apm.log_service.HighlightLog
	(*LogItem)(nil),                      // 9: erda.msp.apm.log_service.LogItem
	(*BucketAggregationRequest)(nil),     // 10: erda.msp.apm.log_service.BucketAggregationRequest
	(*BucketAggregationResponse)(nil),    // 11: erda.msp.apm.log_service.BucketAggregationResponse
	(*LogFieldsAggregationResult)(nil),   // 12: erda.msp.apm.log_service.LogFieldsAggregationResult
	(*LogFieldBucket)(nil),               // 13: erda.msp.apm.log_service.LogFieldBucket
	(*BucketAgg)(nil),                    // 14: erda.msp.apm.log_service.BucketAgg
	(*HistogramAggregationRequest)(nil),  // 15: erda.msp.apm.log_service.HistogramAggregationRequest
	(*HistogramAggregationResponse)(nil), // 16: erda.msp.apm.log_service.HistogramAggregationResponse
	(*HistogramAggregationResult)(nil),   // 17: erda.msp.apm.log_service.HistogramAggregationResult
	(*LogStatisticResult)(nil),           // 18: erda.msp.apm.log_service.LogStatisticResult
	(*CountHistogram)(nil),               // 19: erda.msp.apm.log_service.CountHistogram
	(*ArrayAgg)(nil),                     // 20: erda.msp.apm.log_service.ArrayAgg
	nil,                                  // 21: erda.msp.apm.log_service.HighlightLog.HighlightEntry
	nil,                                  // 22: erda.msp.apm.log_service.LogItem.TagsEntry
	nil,                                  // 23: erda.msp.apm.log_service.LogFieldsAggregationResult.AggFieldsEntry
	(*structpb.ListValue)(nil),           // 24: google.protobuf.ListValue
}
var file_log_query_proto_depIdxs = []int32{
	2,  // 0: erda.msp.apm.log_service.GetFieldSettingsResponse.data:type_name -> erda.msp.apm.log_service.LogField
	7,  // 1: erda.msp.apm.log_service.SequentialSearchResponse.data:type_name -> erda.msp.apm.log_service.LogQueryResult
	7,  // 2: erda.msp.apm.log_service.PagedSearchResponse.data:type_name -> erda.msp.apm.log_service.LogQueryResult
	8,  // 3: erda.msp.apm.log_service.LogQueryResult.data:type_name -> erda.msp.apm.log_service.HighlightLog
	9,  // 4: erda.msp.apm.log_service.HighlightLog.source:type_name -> erda.msp.apm.log_service.LogItem
	21, // 5: erda.msp.apm.log_service.HighlightLog.highlight:type_name -> erda.msp.apm.log_service.HighlightLog.HighlightEntry
	22, // 6: erda.msp.apm.log_service.LogItem.tags:type_name -> erda.msp.apm.log_service.LogItem.TagsEntry
	12, // 7: erda.msp.apm.log_service.BucketAggregationResponse.data:type_name -> erda.msp.apm.log_service.LogFieldsAggregationResult
	23, // 8: erda.msp.apm.log_service.LogFieldsAggregationResult.aggFields:type_name -> erda.msp.apm.log_service.LogFieldsAggregationResult.AggFieldsEntry
	14, // 9: erda.msp.apm.log_service.LogFieldBucket.buckets:type_name -> erda.msp.apm.log_service.BucketAgg
	17, // 10: erda.msp.apm.log_service.HistogramAggregationResponse.data:type_name -> erda.msp.apm.log_service.HistogramAggregationResult
	18, // 11: erda.msp.apm.log_service.HistogramAggregationResult.results:type_name -> erda.msp.apm.log_service.LogStatisticResult
	19, // 12: erda.msp.apm.log_service.LogStatisticResult.data:type_name -> erda.msp.apm.log_service.CountHistogram
	20, // 13: erda.msp.apm.log_service.CountHistogram.count:type_name -> erda.msp.apm.log_service.ArrayAgg
	24, // 14: erda.msp.apm.log_service.HighlightLog.HighlightEntry.value:type_name -> google.protobuf.ListValue
	13, // 15: erda.msp.apm.log_service.LogFieldsAggregationResult.AggFieldsEntry.value:type_name -> erda.msp.apm.log_service.LogFieldBucket
	15, // 16: erda.msp.apm.log_service.LogService.HistogramAggregation:input_type -> erda.msp.apm.log_service.HistogramAggregationRequest
	10, // 17: erda.msp.apm.log_service.LogService.BucketAggregation:input_type -> erda.msp.apm.log_service.BucketAggregationRequest
	5,  // 18: erda.msp.apm.log_service.LogService.PagedSearch:input_type -> erda.msp.apm.log_service.PagedSearchRequest
	3,  // 19: erda.msp.apm.log_service.LogService.SequentialSearch:input_type -> erda.msp.apm.log_service.SequentialSearchRequest
	0,  // 20: erda.msp.apm.log_service.LogService.GetFieldSettings:input_type -> erda.msp.apm.log_service.GetFieldSettingsRequest
	16, // 21: erda.msp.apm.log_service.LogService.HistogramAggregation:output_type -> erda.msp.apm.log_service.HistogramAggregationResponse
	11, // 22: erda.msp.apm.log_service.LogService.BucketAggregation:output_type -> erda.msp.apm.log_service.BucketAggregationResponse
	6,  // 23: erda.msp.apm.log_service.LogService.PagedSearch:output_type -> erda.msp.apm.log_service.PagedSearchResponse
	4,  // 24: erda.msp.apm.log_service.LogService.SequentialSearch:output_type -> erda.msp.apm.log_service.SequentialSearchResponse
	1,  // 25: erda.msp.apm.log_service.LogService.GetFieldSettings:output_type -> erda.msp.apm.log_service.GetFieldSettingsResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_log_query_proto_init() }
func file_log_query_proto_init() {
	if File_log_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_log_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequentialSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequentialSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagedSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighlightLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketAggregationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketAggregationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogFieldsAggregationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogFieldBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketAgg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistogramAggregationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistogramAggregationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistogramAggregationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogStatisticResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayAgg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_log_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_log_query_proto_goTypes,
		DependencyIndexes: file_log_query_proto_depIdxs,
		MessageInfos:      file_log_query_proto_msgTypes,
	}.Build()
	File_log_query_proto = out.File
	file_log_query_proto_rawDesc = nil
	file_log_query_proto_goTypes = nil
	file_log_query_proto_depIdxs = nil
}
