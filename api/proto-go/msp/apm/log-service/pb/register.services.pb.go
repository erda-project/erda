// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: log_query.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterLogServiceImp log_query.proto
func RegisterLogServiceImp(regester transport.Register, srv LogServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterLogServiceHandler(regester, LogServiceHandler(srv), _ops.HTTP...)
	RegisterLogServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.apm.log_service.LogService",
	)
}

var (
	logServiceClientType  = reflect.TypeOf((*LogServiceClient)(nil)).Elem()
	logServiceServerType  = reflect.TypeOf((*LogServiceServer)(nil)).Elem()
	logServiceHandlerType = reflect.TypeOf((*LogServiceHandler)(nil)).Elem()
)

// LogServiceClientType .
func LogServiceClientType() reflect.Type { return logServiceClientType }

// LogServiceServerType .
func LogServiceServerType() reflect.Type { return logServiceServerType }

// LogServiceHandlerType .
func LogServiceHandlerType() reflect.Type { return logServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		logServiceClientType,
		// server types
		logServiceServerType,
		// handler types
		logServiceHandlerType,
	}
}
