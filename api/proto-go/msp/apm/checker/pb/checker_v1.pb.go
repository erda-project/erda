// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: checker_v1.proto

package pb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/erda-project/erda-proto-go/common/pb"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCheckerV1
type CreateCheckerV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CheckerV1 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCheckerV1Request) Reset() {
	*x = CreateCheckerV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckerV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckerV1Request) ProtoMessage() {}

func (x *CreateCheckerV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckerV1Request.ProtoReflect.Descriptor instead.
func (*CreateCheckerV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCheckerV1Request) GetData() *CheckerV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCheckerV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data int64 `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCheckerV1Response) Reset() {
	*x = CreateCheckerV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckerV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckerV1Response) ProtoMessage() {}

func (x *CreateCheckerV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckerV1Response.ProtoReflect.Descriptor instead.
func (*CreateCheckerV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCheckerV1Response) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// UpdateCheckerV1
type UpdateCheckerV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *CheckerV1 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCheckerV1Request) Reset() {
	*x = UpdateCheckerV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckerV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckerV1Request) ProtoMessage() {}

func (x *UpdateCheckerV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckerV1Request.ProtoReflect.Descriptor instead.
func (*UpdateCheckerV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCheckerV1Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCheckerV1Request) GetData() *CheckerV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCheckerV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data int64 `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCheckerV1Response) Reset() {
	*x = UpdateCheckerV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckerV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckerV1Response) ProtoMessage() {}

func (x *UpdateCheckerV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckerV1Response.ProtoReflect.Descriptor instead.
func (*UpdateCheckerV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCheckerV1Response) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// DeleteCheckerV1
type DeleteCheckerV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCheckerV1Request) Reset() {
	*x = DeleteCheckerV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCheckerV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckerV1Request) ProtoMessage() {}

func (x *DeleteCheckerV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckerV1Request.ProtoReflect.Descriptor instead.
func (*DeleteCheckerV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCheckerV1Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCheckerV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CheckerV1 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCheckerV1Response) Reset() {
	*x = DeleteCheckerV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCheckerV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckerV1Response) ProtoMessage() {}

func (x *DeleteCheckerV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckerV1Response.ProtoReflect.Descriptor instead.
func (*DeleteCheckerV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCheckerV1Response) GetData() *CheckerV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetCheckerV1
type GetCheckerV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCheckerV1Request) Reset() {
	*x = GetCheckerV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckerV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckerV1Request) ProtoMessage() {}

func (x *GetCheckerV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckerV1Request.ProtoReflect.Descriptor instead.
func (*GetCheckerV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{6}
}

func (x *GetCheckerV1Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCheckerV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CheckerV1 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCheckerV1Response) Reset() {
	*x = GetCheckerV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckerV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckerV1Response) ProtoMessage() {}

func (x *GetCheckerV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckerV1Response.ProtoReflect.Descriptor instead.
func (*GetCheckerV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{7}
}

func (x *GetCheckerV1Response) GetData() *CheckerV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

// DescribeCheckersV1
type DescribeCheckersV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID int64  `protobuf:"varint,1,opt,name=projectID,json=projectId,proto3" json:"projectID,omitempty"`
	Env       string `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
}

func (x *DescribeCheckersV1Request) Reset() {
	*x = DescribeCheckersV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCheckersV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCheckersV1Request) ProtoMessage() {}

func (x *DescribeCheckersV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCheckersV1Request.ProtoReflect.Descriptor instead.
func (*DescribeCheckersV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeCheckersV1Request) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DescribeCheckersV1Request) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

type DescribeCheckersV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DescribeResultV1 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DescribeCheckersV1Response) Reset() {
	*x = DescribeCheckersV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCheckersV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCheckersV1Response) ProtoMessage() {}

func (x *DescribeCheckersV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCheckersV1Response.ProtoReflect.Descriptor instead.
func (*DescribeCheckersV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeCheckersV1Response) GetData() *DescribeResultV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

// DescribeCheckerV1
type DescribeCheckerV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Period string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *DescribeCheckerV1Request) Reset() {
	*x = DescribeCheckerV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCheckerV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCheckerV1Request) ProtoMessage() {}

func (x *DescribeCheckerV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCheckerV1Request.ProtoReflect.Descriptor instead.
func (*DescribeCheckerV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeCheckerV1Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DescribeCheckerV1Request) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

type DescribeCheckerV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DescribeResultV1 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DescribeCheckerV1Response) Reset() {
	*x = DescribeCheckerV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCheckerV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCheckerV1Response) ProtoMessage() {}

func (x *DescribeCheckerV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCheckerV1Response.ProtoReflect.Descriptor instead.
func (*DescribeCheckerV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeCheckerV1Response) GetData() *DescribeResultV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetCheckerStatusV1
type GetCheckerStatusV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCheckerStatusV1Request) Reset() {
	*x = GetCheckerStatusV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckerStatusV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckerStatusV1Request) ProtoMessage() {}

func (x *GetCheckerStatusV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckerStatusV1Request.ProtoReflect.Descriptor instead.
func (*GetCheckerStatusV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{12}
}

func (x *GetCheckerStatusV1Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCheckerStatusV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CheckerStatusV1 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCheckerStatusV1Response) Reset() {
	*x = GetCheckerStatusV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckerStatusV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckerStatusV1Response) ProtoMessage() {}

func (x *GetCheckerStatusV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckerStatusV1Response.ProtoReflect.Descriptor instead.
func (*GetCheckerStatusV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{13}
}

func (x *GetCheckerStatusV1Response) GetData() *CheckerStatusV1 {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckerStatusV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   []int64  `protobuf:"varint,1,rep,packed,name=time,proto3" json:"time,omitempty"`
	Status []string `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *CheckerStatusV1) Reset() {
	*x = CheckerStatusV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerStatusV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerStatusV1) ProtoMessage() {}

func (x *CheckerStatusV1) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerStatusV1.ProtoReflect.Descriptor instead.
func (*CheckerStatusV1) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{14}
}

func (x *CheckerStatusV1) GetTime() []int64 {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CheckerStatusV1) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

// GetCheckerIssuesV1
type GetCheckerIssuesV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCheckerIssuesV1Request) Reset() {
	*x = GetCheckerIssuesV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckerIssuesV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckerIssuesV1Request) ProtoMessage() {}

func (x *GetCheckerIssuesV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckerIssuesV1Request.ProtoReflect.Descriptor instead.
func (*GetCheckerIssuesV1Request) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{15}
}

func (x *GetCheckerIssuesV1Request) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCheckerIssuesV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*structpb.Value `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCheckerIssuesV1Response) Reset() {
	*x = GetCheckerIssuesV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckerIssuesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckerIssuesV1Response) ProtoMessage() {}

func (x *GetCheckerIssuesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckerIssuesV1Response.ProtoReflect.Descriptor instead.
func (*GetCheckerIssuesV1Response) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{16}
}

func (x *GetCheckerIssuesV1Response) GetData() []*structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

// common
type CheckerV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode      string                     `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	ProjectID int64                      `protobuf:"varint,3,opt,name=projectID,json=projectId,proto3" json:"projectID,omitempty"`
	Env       string                     `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
	Config    map[string]*structpb.Value `protobuf:"bytes,5,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckerV1) Reset() {
	*x = CheckerV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerV1) ProtoMessage() {}

func (x *CheckerV1) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerV1.ProtoReflect.Descriptor instead.
func (*CheckerV1) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{17}
}

func (x *CheckerV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckerV1) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *CheckerV1) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *CheckerV1) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *CheckerV1) GetConfig() map[string]*structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

type HttpModeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string          `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`               // request url
	Method     string          `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`         // request method
	Headers    *structpb.Value `protobuf:"bytes,3,opt,name=headers,proto3" json:"headers,omitempty"`       // request headers
	Body       *structpb.Value `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`             // request body
	Triggering []*Condition    `protobuf:"bytes,5,rep,name=triggering,proto3" json:"triggering,omitempty"` // triggering conditions
	Retry      int64           `protobuf:"varint,6,opt,name=retry,proto3" json:"retry,omitempty"`          // retry count
	Interval   int64           `protobuf:"varint,7,opt,name=interval,proto3" json:"interval,omitempty"`    // request interval
}

func (x *HttpModeConfig) Reset() {
	*x = HttpModeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpModeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpModeConfig) ProtoMessage() {}

func (x *HttpModeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpModeConfig.ProtoReflect.Descriptor instead.
func (*HttpModeConfig) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{18}
}

func (x *HttpModeConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpModeConfig) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpModeConfig) GetHeaders() *structpb.Value {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpModeConfig) GetBody() *structpb.Value {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HttpModeConfig) GetTriggering() []*Condition {
	if x != nil {
		return x.Triggering
	}
	return nil
}

func (x *HttpModeConfig) GetRetry() int64 {
	if x != nil {
		return x.Retry
	}
	return 0
}

func (x *HttpModeConfig) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operate string          `protobuf:"bytes,2,opt,name=operate,proto3" json:"operate,omitempty"`
	Value   *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{19}
}

func (x *Condition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Condition) GetOperate() string {
	if x != nil {
		return x.Operate
	}
	return ""
}

func (x *Condition) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type DescribeResultV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownCount int64                     `protobuf:"varint,1,opt,name=downCount,proto3" json:"downCount,omitempty"`
	Metrics   map[int64]*DescribeItemV1 `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DescribeResultV1) Reset() {
	*x = DescribeResultV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeResultV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeResultV1) ProtoMessage() {}

func (x *DescribeResultV1) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeResultV1.ProtoReflect.Descriptor instead.
func (*DescribeResultV1) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeResultV1) GetDownCount() int64 {
	if x != nil {
		return x.DownCount
	}
	return 0
}

func (x *DescribeResultV1) GetMetrics() map[int64]*DescribeItemV1 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type DescribeItemV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode         string                     `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	Url          string                     `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Status       string                     `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Uptime       string                     `protobuf:"bytes,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Downtime     string                     `protobuf:"bytes,6,opt,name=downtime,proto3" json:"downtime,omitempty"`
	DownDuration string                     `protobuf:"bytes,7,opt,name=downDuration,proto3" json:"downDuration,omitempty"`
	Latency      float64                    `protobuf:"fixed64,8,opt,name=latency,proto3" json:"latency,omitempty"`
	RequestId    string                     `protobuf:"bytes,9,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Apdex        float64                    `protobuf:"fixed64,10,opt,name=apdex,proto3" json:"apdex,omitempty"`
	Avg          float64                    `protobuf:"fixed64,11,opt,name=avg,proto3" json:"avg,omitempty"`
	Max          float64                    `protobuf:"fixed64,12,opt,name=max,proto3" json:"max,omitempty"`
	Min          float64                    `protobuf:"fixed64,13,opt,name=min,proto3" json:"min,omitempty"`
	Chart        *CheckerChartV1            `protobuf:"bytes,14,opt,name=chart,proto3" json:"chart,omitempty"`
	Config       map[string]*structpb.Value `protobuf:"bytes,15,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DescribeItemV1) Reset() {
	*x = DescribeItemV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeItemV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeItemV1) ProtoMessage() {}

func (x *DescribeItemV1) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeItemV1.ProtoReflect.Descriptor instead.
func (*DescribeItemV1) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{21}
}

func (x *DescribeItemV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeItemV1) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *DescribeItemV1) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DescribeItemV1) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DescribeItemV1) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *DescribeItemV1) GetDowntime() string {
	if x != nil {
		return x.Downtime
	}
	return ""
}

func (x *DescribeItemV1) GetDownDuration() string {
	if x != nil {
		return x.DownDuration
	}
	return ""
}

func (x *DescribeItemV1) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

func (x *DescribeItemV1) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DescribeItemV1) GetApdex() float64 {
	if x != nil {
		return x.Apdex
	}
	return 0
}

func (x *DescribeItemV1) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *DescribeItemV1) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *DescribeItemV1) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DescribeItemV1) GetChart() *CheckerChartV1 {
	if x != nil {
		return x.Chart
	}
	return nil
}

func (x *DescribeItemV1) GetConfig() map[string]*structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

type CheckerChartV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latency []float64 `protobuf:"fixed64,1,rep,packed,name=latency,proto3" json:"latency,omitempty"`
	Time    []int64   `protobuf:"varint,2,rep,packed,name=time,proto3" json:"time,omitempty"`
	Status  []string  `protobuf:"bytes,3,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *CheckerChartV1) Reset() {
	*x = CheckerChartV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerChartV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerChartV1) ProtoMessage() {}

func (x *CheckerChartV1) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerChartV1.ProtoReflect.Descriptor instead.
func (*CheckerChartV1) Descriptor() ([]byte, []int) {
	return file_checker_v1_proto_rawDescGZIP(), []int{22}
}

func (x *CheckerChartV1) GetLatency() []float64 {
	if x != nil {
		return x.Latency
	}
	return nil
}

func (x *CheckerChartV1) GetTime() []int64 {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CheckerChartV1) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_checker_v1_proto protoreflect.FileDescriptor

var file_checker_v1_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x55, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x20, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20,
	0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x56, 0x31, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x03, 0x65, 0x6e,
	0x76, 0x22, 0x58, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x56, 0x31, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x18, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x57, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x31, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x31, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d,
	0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x48, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a,
	0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x6e, 0x76, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x56, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x51, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9b, 0x02, 0x0a, 0x0e, 0x48,
	0x74, 0x74, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x58, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x65, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xe1, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x1a, 0x60, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x31, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x97, 0x04, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x56, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x6f, 0x77, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x64, 0x65,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x70, 0x64, 0x65, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x31, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x12, 0x48, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x56, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x51, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a,
	0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x56, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x90, 0x0c, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x56, 0x31, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x12, 0x2c,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70,
	0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0xfa,
	0x81, 0xf9, 0x1b, 0x16, 0x0a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61,
	0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0xb7, 0x01, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x12, 0x2c,
	0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65,
	0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70,
	0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0xfa, 0x81, 0xf9, 0x1b, 0x1b, 0x0a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb1, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x12, 0x2c, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xfa, 0x81, 0xf9, 0x1b, 0x1b, 0x0a, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x12, 0x29, 0x2e, 0x65, 0x72, 0x64, 0x61,
	0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xdc, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x56, 0x31, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64,
	0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72,
	0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f,
	0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x3d, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x7d, 0xfa, 0x81, 0xf9, 0x1b,
	0x21, 0x0a, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0xcb, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x31, 0x12, 0x2e, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0xfa, 0x81, 0xf9, 0x1b, 0x25, 0x0a, 0x23, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0xc8, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x31, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d,
	0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e,
	0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0xfa, 0x81, 0xf9, 0x1b, 0x22, 0x0a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x56, 0x31, 0x12, 0x2f, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x70,
	0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x72, 0x64, 0x61, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61,
	0x70, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0xfa,
	0x81, 0xf9, 0x1b, 0x22, 0x0a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61,
	0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x1a, 0x10, 0xc2, 0xc4, 0xcb, 0x1c, 0x0b, 0x22, 0x03, 0x6d,
	0x73, 0x70, 0x32, 0x04, 0x10, 0x01, 0x20, 0x01, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x65, 0x72, 0x64, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x6f, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x70, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checker_v1_proto_rawDescOnce sync.Once
	file_checker_v1_proto_rawDescData = file_checker_v1_proto_rawDesc
)

func file_checker_v1_proto_rawDescGZIP() []byte {
	file_checker_v1_proto_rawDescOnce.Do(func() {
		file_checker_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_checker_v1_proto_rawDescData)
	})
	return file_checker_v1_proto_rawDescData
}

var file_checker_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_checker_v1_proto_goTypes = []interface{}{
	(*CreateCheckerV1Request)(nil),     // 0: erda.msp.apm.checker.CreateCheckerV1Request
	(*CreateCheckerV1Response)(nil),    // 1: erda.msp.apm.checker.CreateCheckerV1Response
	(*UpdateCheckerV1Request)(nil),     // 2: erda.msp.apm.checker.UpdateCheckerV1Request
	(*UpdateCheckerV1Response)(nil),    // 3: erda.msp.apm.checker.UpdateCheckerV1Response
	(*DeleteCheckerV1Request)(nil),     // 4: erda.msp.apm.checker.DeleteCheckerV1Request
	(*DeleteCheckerV1Response)(nil),    // 5: erda.msp.apm.checker.DeleteCheckerV1Response
	(*GetCheckerV1Request)(nil),        // 6: erda.msp.apm.checker.GetCheckerV1Request
	(*GetCheckerV1Response)(nil),       // 7: erda.msp.apm.checker.GetCheckerV1Response
	(*DescribeCheckersV1Request)(nil),  // 8: erda.msp.apm.checker.DescribeCheckersV1Request
	(*DescribeCheckersV1Response)(nil), // 9: erda.msp.apm.checker.DescribeCheckersV1Response
	(*DescribeCheckerV1Request)(nil),   // 10: erda.msp.apm.checker.DescribeCheckerV1Request
	(*DescribeCheckerV1Response)(nil),  // 11: erda.msp.apm.checker.DescribeCheckerV1Response
	(*GetCheckerStatusV1Request)(nil),  // 12: erda.msp.apm.checker.GetCheckerStatusV1Request
	(*GetCheckerStatusV1Response)(nil), // 13: erda.msp.apm.checker.GetCheckerStatusV1Response
	(*CheckerStatusV1)(nil),            // 14: erda.msp.apm.checker.CheckerStatusV1
	(*GetCheckerIssuesV1Request)(nil),  // 15: erda.msp.apm.checker.GetCheckerIssuesV1Request
	(*GetCheckerIssuesV1Response)(nil), // 16: erda.msp.apm.checker.GetCheckerIssuesV1Response
	(*CheckerV1)(nil),                  // 17: erda.msp.apm.checker.CheckerV1
	(*HttpModeConfig)(nil),             // 18: erda.msp.apm.checker.HttpModeConfig
	(*Condition)(nil),                  // 19: erda.msp.apm.checker.Condition
	(*DescribeResultV1)(nil),           // 20: erda.msp.apm.checker.DescribeResultV1
	(*DescribeItemV1)(nil),             // 21: erda.msp.apm.checker.DescribeItemV1
	(*CheckerChartV1)(nil),             // 22: erda.msp.apm.checker.CheckerChartV1
	nil,                                // 23: erda.msp.apm.checker.CheckerV1.ConfigEntry
	nil,                                // 24: erda.msp.apm.checker.DescribeResultV1.MetricsEntry
	nil,                                // 25: erda.msp.apm.checker.DescribeItemV1.ConfigEntry
	(*structpb.Value)(nil),             // 26: google.protobuf.Value
}
var file_checker_v1_proto_depIdxs = []int32{
	17, // 0: erda.msp.apm.checker.CreateCheckerV1Request.data:type_name -> erda.msp.apm.checker.CheckerV1
	17, // 1: erda.msp.apm.checker.UpdateCheckerV1Request.data:type_name -> erda.msp.apm.checker.CheckerV1
	17, // 2: erda.msp.apm.checker.DeleteCheckerV1Response.data:type_name -> erda.msp.apm.checker.CheckerV1
	17, // 3: erda.msp.apm.checker.GetCheckerV1Response.data:type_name -> erda.msp.apm.checker.CheckerV1
	20, // 4: erda.msp.apm.checker.DescribeCheckersV1Response.data:type_name -> erda.msp.apm.checker.DescribeResultV1
	20, // 5: erda.msp.apm.checker.DescribeCheckerV1Response.data:type_name -> erda.msp.apm.checker.DescribeResultV1
	14, // 6: erda.msp.apm.checker.GetCheckerStatusV1Response.data:type_name -> erda.msp.apm.checker.CheckerStatusV1
	26, // 7: erda.msp.apm.checker.GetCheckerIssuesV1Response.data:type_name -> google.protobuf.Value
	23, // 8: erda.msp.apm.checker.CheckerV1.config:type_name -> erda.msp.apm.checker.CheckerV1.ConfigEntry
	26, // 9: erda.msp.apm.checker.HttpModeConfig.headers:type_name -> google.protobuf.Value
	26, // 10: erda.msp.apm.checker.HttpModeConfig.body:type_name -> google.protobuf.Value
	19, // 11: erda.msp.apm.checker.HttpModeConfig.triggering:type_name -> erda.msp.apm.checker.Condition
	26, // 12: erda.msp.apm.checker.Condition.value:type_name -> google.protobuf.Value
	24, // 13: erda.msp.apm.checker.DescribeResultV1.metrics:type_name -> erda.msp.apm.checker.DescribeResultV1.MetricsEntry
	22, // 14: erda.msp.apm.checker.DescribeItemV1.chart:type_name -> erda.msp.apm.checker.CheckerChartV1
	25, // 15: erda.msp.apm.checker.DescribeItemV1.config:type_name -> erda.msp.apm.checker.DescribeItemV1.ConfigEntry
	26, // 16: erda.msp.apm.checker.CheckerV1.ConfigEntry.value:type_name -> google.protobuf.Value
	21, // 17: erda.msp.apm.checker.DescribeResultV1.MetricsEntry.value:type_name -> erda.msp.apm.checker.DescribeItemV1
	26, // 18: erda.msp.apm.checker.DescribeItemV1.ConfigEntry.value:type_name -> google.protobuf.Value
	0,  // 19: erda.msp.apm.checker.CheckerV1Service.CreateCheckerV1:input_type -> erda.msp.apm.checker.CreateCheckerV1Request
	2,  // 20: erda.msp.apm.checker.CheckerV1Service.UpdateCheckerV1:input_type -> erda.msp.apm.checker.UpdateCheckerV1Request
	4,  // 21: erda.msp.apm.checker.CheckerV1Service.DeleteCheckerV1:input_type -> erda.msp.apm.checker.DeleteCheckerV1Request
	6,  // 22: erda.msp.apm.checker.CheckerV1Service.GetCheckerV1:input_type -> erda.msp.apm.checker.GetCheckerV1Request
	8,  // 23: erda.msp.apm.checker.CheckerV1Service.DescribeCheckersV1:input_type -> erda.msp.apm.checker.DescribeCheckersV1Request
	10, // 24: erda.msp.apm.checker.CheckerV1Service.DescribeCheckerV1:input_type -> erda.msp.apm.checker.DescribeCheckerV1Request
	12, // 25: erda.msp.apm.checker.CheckerV1Service.GetCheckerStatusV1:input_type -> erda.msp.apm.checker.GetCheckerStatusV1Request
	15, // 26: erda.msp.apm.checker.CheckerV1Service.GetCheckerIssuesV1:input_type -> erda.msp.apm.checker.GetCheckerIssuesV1Request
	1,  // 27: erda.msp.apm.checker.CheckerV1Service.CreateCheckerV1:output_type -> erda.msp.apm.checker.CreateCheckerV1Response
	3,  // 28: erda.msp.apm.checker.CheckerV1Service.UpdateCheckerV1:output_type -> erda.msp.apm.checker.UpdateCheckerV1Response
	5,  // 29: erda.msp.apm.checker.CheckerV1Service.DeleteCheckerV1:output_type -> erda.msp.apm.checker.DeleteCheckerV1Response
	7,  // 30: erda.msp.apm.checker.CheckerV1Service.GetCheckerV1:output_type -> erda.msp.apm.checker.GetCheckerV1Response
	9,  // 31: erda.msp.apm.checker.CheckerV1Service.DescribeCheckersV1:output_type -> erda.msp.apm.checker.DescribeCheckersV1Response
	11, // 32: erda.msp.apm.checker.CheckerV1Service.DescribeCheckerV1:output_type -> erda.msp.apm.checker.DescribeCheckerV1Response
	13, // 33: erda.msp.apm.checker.CheckerV1Service.GetCheckerStatusV1:output_type -> erda.msp.apm.checker.GetCheckerStatusV1Response
	16, // 34: erda.msp.apm.checker.CheckerV1Service.GetCheckerIssuesV1:output_type -> erda.msp.apm.checker.GetCheckerIssuesV1Response
	27, // [27:35] is the sub-list for method output_type
	19, // [19:27] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_checker_v1_proto_init() }
func file_checker_v1_proto_init() {
	if File_checker_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checker_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckerV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckerV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckerV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckerV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCheckerV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCheckerV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckerV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckerV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCheckersV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCheckersV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCheckerV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCheckerV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckerStatusV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckerStatusV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerStatusV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckerIssuesV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckerIssuesV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpModeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeResultV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeItemV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerChartV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checker_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checker_v1_proto_goTypes,
		DependencyIndexes: file_checker_v1_proto_depIdxs,
		MessageInfos:      file_checker_v1_proto_msgTypes,
	}.Build()
	File_checker_v1_proto = out.File
	file_checker_v1_proto_rawDesc = nil
	file_checker_v1_proto_goTypes = nil
	file_checker_v1_proto_depIdxs = nil
}
