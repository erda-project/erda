// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: apm_alert.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterAlertServiceImp apm_alert.proto
func RegisterAlertServiceImp(regester transport.Register, srv AlertServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterAlertServiceHandler(regester, AlertServiceHandler(srv), _ops.HTTP...)
	RegisterAlertServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.apm.alert.AlertService",
	)
}

var (
	alertServiceClientType  = reflect.TypeOf((*AlertServiceClient)(nil)).Elem()
	alertServiceServerType  = reflect.TypeOf((*AlertServiceServer)(nil)).Elem()
	alertServiceHandlerType = reflect.TypeOf((*AlertServiceHandler)(nil)).Elem()
)

// AlertServiceClientType .
func AlertServiceClientType() reflect.Type { return alertServiceClientType }

// AlertServiceServerType .
func AlertServiceServerType() reflect.Type { return alertServiceServerType }

// AlertServiceHandlerType .
func AlertServiceHandlerType() reflect.Type { return alertServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		alertServiceClientType,
		// server types
		alertServiceServerType,
		// handler types
		alertServiceHandlerType,
	}
}
