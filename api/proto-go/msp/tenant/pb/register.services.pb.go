// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: tenant.proto

package pb

import (
	reflect "reflect"

	transport "github.com/erda-project/erda-infra/pkg/transport"
)

// RegisterTenantServiceImp tenant.proto
func RegisterTenantServiceImp(regester transport.Register, srv TenantServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterTenantServiceHandler(regester, TenantServiceHandler(srv), _ops.HTTP...)
	RegisterTenantServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.tenant.TenantService",
	)
}

var (
	tenantServiceClientType  = reflect.TypeOf((*TenantServiceClient)(nil)).Elem()
	tenantServiceServerType  = reflect.TypeOf((*TenantServiceServer)(nil)).Elem()
	tenantServiceHandlerType = reflect.TypeOf((*TenantServiceHandler)(nil)).Elem()
)

// TenantServiceClientType .
func TenantServiceClientType() reflect.Type { return tenantServiceClientType }

// TenantServiceServerType .
func TenantServiceServerType() reflect.Type { return tenantServiceServerType }

// TenantServiceHandlerType .
func TenantServiceHandlerType() reflect.Type { return tenantServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		tenantServiceClientType,
		// server types
		tenantServiceServerType,
		// handler types
		tenantServiceHandlerType,
	}
}
