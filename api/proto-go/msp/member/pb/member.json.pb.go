// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: member.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"

	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*ScopeRoleAccessRequest)(nil)
var _ json.Unmarshaler = (*ScopeRoleAccessRequest)(nil)
var _ json.Marshaler = (*Scope)(nil)
var _ json.Unmarshaler = (*Scope)(nil)
var _ json.Marshaler = (*ScopeRoleAccessResponse)(nil)
var _ json.Unmarshaler = (*ScopeRoleAccessResponse)(nil)
var _ json.Marshaler = (*ScopeRoleData)(nil)
var _ json.Unmarshaler = (*ScopeRoleData)(nil)
var _ json.Marshaler = (*ScopeResource)(nil)
var _ json.Unmarshaler = (*ScopeResource)(nil)
var _ json.Marshaler = (*ListMemberRequest)(nil)
var _ json.Unmarshaler = (*ListMemberRequest)(nil)
var _ json.Marshaler = (*ListMemberResponse)(nil)
var _ json.Unmarshaler = (*ListMemberResponse)(nil)
var _ json.Marshaler = (*MemberList)(nil)
var _ json.Unmarshaler = (*MemberList)(nil)
var _ json.Marshaler = (*Member)(nil)
var _ json.Unmarshaler = (*Member)(nil)
var _ json.Marshaler = (*CreateOrUpdateMemberRequest)(nil)
var _ json.Unmarshaler = (*CreateOrUpdateMemberRequest)(nil)
var _ json.Marshaler = (*MemberAddOptions)(nil)
var _ json.Unmarshaler = (*MemberAddOptions)(nil)
var _ json.Marshaler = (*CreateOrUpdateMemberResponse)(nil)
var _ json.Unmarshaler = (*CreateOrUpdateMemberResponse)(nil)
var _ json.Marshaler = (*DeleteMemberRequest)(nil)
var _ json.Unmarshaler = (*DeleteMemberRequest)(nil)
var _ json.Marshaler = (*DeleteMemberResponse)(nil)
var _ json.Unmarshaler = (*DeleteMemberResponse)(nil)
var _ json.Marshaler = (*ListMemberRolesRequest)(nil)
var _ json.Unmarshaler = (*ListMemberRolesRequest)(nil)
var _ json.Marshaler = (*ListMemberRolesResponse)(nil)
var _ json.Unmarshaler = (*ListMemberRolesResponse)(nil)
var _ json.Marshaler = (*RoleList)(nil)
var _ json.Unmarshaler = (*RoleList)(nil)
var _ json.Marshaler = (*RoleInfo)(nil)
var _ json.Unmarshaler = (*RoleInfo)(nil)

// ScopeRoleAccessRequest implement json.Marshaler.
func (m *ScopeRoleAccessRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ScopeRoleAccessRequest implement json.Marshaler.
func (m *ScopeRoleAccessRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Scope implement json.Marshaler.
func (m *Scope) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Scope implement json.Marshaler.
func (m *Scope) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ScopeRoleAccessResponse implement json.Marshaler.
func (m *ScopeRoleAccessResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ScopeRoleAccessResponse implement json.Marshaler.
func (m *ScopeRoleAccessResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ScopeRoleData implement json.Marshaler.
func (m *ScopeRoleData) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ScopeRoleData implement json.Marshaler.
func (m *ScopeRoleData) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ScopeResource implement json.Marshaler.
func (m *ScopeResource) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ScopeResource implement json.Marshaler.
func (m *ScopeResource) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListMemberRequest implement json.Marshaler.
func (m *ListMemberRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListMemberRequest implement json.Marshaler.
func (m *ListMemberRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListMemberResponse implement json.Marshaler.
func (m *ListMemberResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListMemberResponse implement json.Marshaler.
func (m *ListMemberResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MemberList implement json.Marshaler.
func (m *MemberList) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MemberList implement json.Marshaler.
func (m *MemberList) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Member implement json.Marshaler.
func (m *Member) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Member implement json.Marshaler.
func (m *Member) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CreateOrUpdateMemberRequest implement json.Marshaler.
func (m *CreateOrUpdateMemberRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateOrUpdateMemberRequest implement json.Marshaler.
func (m *CreateOrUpdateMemberRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// MemberAddOptions implement json.Marshaler.
func (m *MemberAddOptions) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// MemberAddOptions implement json.Marshaler.
func (m *MemberAddOptions) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// CreateOrUpdateMemberResponse implement json.Marshaler.
func (m *CreateOrUpdateMemberResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// CreateOrUpdateMemberResponse implement json.Marshaler.
func (m *CreateOrUpdateMemberResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteMemberRequest implement json.Marshaler.
func (m *DeleteMemberRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteMemberRequest implement json.Marshaler.
func (m *DeleteMemberRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DeleteMemberResponse implement json.Marshaler.
func (m *DeleteMemberResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DeleteMemberResponse implement json.Marshaler.
func (m *DeleteMemberResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListMemberRolesRequest implement json.Marshaler.
func (m *ListMemberRolesRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListMemberRolesRequest implement json.Marshaler.
func (m *ListMemberRolesRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// ListMemberRolesResponse implement json.Marshaler.
func (m *ListMemberRolesResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// ListMemberRolesResponse implement json.Marshaler.
func (m *ListMemberRolesResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// RoleList implement json.Marshaler.
func (m *RoleList) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// RoleList implement json.Marshaler.
func (m *RoleList) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// RoleInfo implement json.Marshaler.
func (m *RoleInfo) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// RoleInfo implement json.Marshaler.
func (m *RoleInfo) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
