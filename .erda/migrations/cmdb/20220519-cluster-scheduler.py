"""
Generated by Erda Migrator.
Please implement the function entry, and add it to the list entries.
"""

import json
import django.db.models


class CoClusters(django.db.models.Model):
    """
    generated by erda-cli
    """

    id = django.db.models.BigIntegerField()
    org_id = django.db.models.BigIntegerField()
    name = django.db.models.CharField()
    display_name = django.db.models.CharField()
    type = django.db.models.CharField()
    cloud_vendor = django.db.models.CharField()
    logo = django.db.models.TextField()
    description = django.db.models.TextField()
    wildcard_domain = django.db.models.CharField()
    config = django.db.models.TextField()
    urls = django.db.models.TextField()
    settings = django.db.models.TextField()
    scheduler = django.db.models.TextField()
    opsconfig = django.db.models.TextField()
    resource = django.db.models.TextField()
    sys = django.db.models.TextField()
    created_at = django.db.models.DateTimeField(auto_now=True)
    updated_at = django.db.models.DateTimeField(auto_now=True, auto_now_add=True)
    manage_config = django.db.models.TextField()
    cluster_info = django.db.models.TextField()
    
    class Meta:
        db_table = "co_clusters"


def entry():
    clusters = CoClusters.objects.all()
    for cluster in clusters:
        try:
            schedConfig = json.loads(cluster.scheduler)
            schedConfig['enableWorkspace'] = True
            s = json.dumps(schedConfig)
        except Execption as e:
            print("cluster %s json parse error, exception: %s, skip" % (cluster.name, e))
            continue
        cluster.scheduler = s
        cluster.save()

entries: [callable] = [
    entry,
]
