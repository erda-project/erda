http-server:
  addr: ":8080"
health:

grpc-server:
  addr: ":7080"

http-server@admin:
  addr: ":9080"
pprof:

service-register:

mysql:
  host: "${MYSQL_HOST:localhost}"
  port: ${MYSQL_PORT:3306}
  username: "${MYSQL_USERNAME:root}"
  password: "${MYSQL_PASSWORD:123456}"
  database: "${MYSQL_DATABASE:dice}"

elasticsearch:
  urls: "${ES_URL:http://localhost:9200}"
  security: ${ES_SECURITY_ENABLE:false}
  username: "${ES_SECURITY_USERNAME}"
  password: "${ES_SECURITY_PASSWORD}"

etcd:
  endpoints: "${ETCD_ENDPOINTS:https://localhost:2379}"
  tls:
    cert_file: "${ETCD_CERT_FILE:/certs/etcd-client.pem}"
    cert_key_file: "${ETCD_CERT_KEY_FILE:/certs/etcd-client-key.pem}"
    ca_file: "${ETCD_CA_FILE:/certs/etcd-ca.pem}"

etcd-election:
  root_path: "/msp-election"

redis:
  addr: "${REDIS_ADDR}"
  password: "${REDIS_PASSWORD}"
  db: ${REDIS_DB:0}
  master_name: "${REDIS_MASTER_NAME}"
  sentinels_addr: "${REDIS_SENTINELS_ADDR}"

cassandra:
  _enable: ${CASSANDRA_ENABLE:true}
  host: "${CASSANDRA_ADDR:localhost:9042}"
  security: ${CASSANDRA_SECURITY_ENABLE:false}
  username: ${CASSANDRA_SECURITY_USERNAME}
  password: ${CASSANDRA_SECURITY_PASSWORD}
  timeout: "${CASSANDRA_TIMEOUT:3s}"

# span
elasticsearch@span:
  _enable: ${SPAN_ELASTICSEARCH_ENABLE:false}
  urls: "${SPAN_ELASTICSEARCH_URL:http://localhost:9200}"
  security: ${SPAN_ELASTICSEARCH_SECURITY_ENABLE:false}
  username: "${SPAN_ELASTICSEARCH_SECURITY_USERNAME}"
  password: "${SPAN_ELASTICSEARCH_SECURITY_PASSWORD}"

elasticsearch.index.loader@span:
  _enable: ${QUERY_SPAN_FROM_ES_ENABLE:false}
  load_mode: "LoadWithCache"
  index_reload_interval: "1m"
  query_index_time_range: true
  cache_key_prefix: "es-index-span"
  match:
    - prefix: "erda-spans-"
      patterns:
        - "<org>-{number}"
        - "<org>.<key>-{number}"
storage-retention-strategy@span:
  _enable: ${QUERY_SPAN_FROM_ES_ENABLE:false}
  default_ttl: "${SPAN_TTL:168h}"
  load_from_database: false
  ttl_reload_interval: "3m"
elasticsearch.index.retention-strategy@span:
  _enable: ${QUERY_SPAN_FROM_ES_ENABLE:false}
  key_patterns:
    - "erda-spans-<org>.<key>-{number}"
elasticsearch.index.cleaner@span:
  _enable: ${QUERY_SPAN_FROM_ES_ENABLE:false}
  check_interval: "30m"
  print_onluy: true
  disk_clean:
    enable: ${SPAN_DISK_CLEAN_ENABLE:true}
    check_interval: "1m"
    high_disk_usage_percent: ${HIGH_DISK_USAGE_PERCENT:80} # 触发磁盘清理的容量占比
    low_disk_usage_percent: ${LOW_DISK_USAGE_PERCENT:70} # 触发磁盘清理时，尽量清理到的目标容量占比
    min_indices_store: "${MIN_INDICES_STORE_PERCENT:10GB}" # 磁盘使用率高时，保证 索引最少可以占用的容量
    min_indices_store_percent: ${MIN_INDICES_STORE_PERCENT:10} # 磁盘使用率高时，保证 索引最少可以占用总磁盘总量的百分比
    rollover_body_file: "${CONFIG_PATH}/index_rollover_min.json"
    rollover_alias_patterns:
      - index: "erda-spans-<org>-{number}"
        alias: "erda-spans-<org>-rollover"
      - index: "erda-spans-<org>.<key>-{number}"
        alias: "erda-spans-<org>.<key>-rollover"
span-storage-elasticsearch:
  _enable: ${QUERY_SPAN_FROM_ES_ENABLE:false}
  query_timeout: "1m"
  read_page_size: 200


i18n:
  common:
    - conf/common/i18n/common.yml
    - conf/common/i18n/apis.yml
    - conf/msp/i18n/msp-i18n.yaml

metric-report-client:
  report_config:
    collector:
      addr: "${COLLECTOR_ADDR:collector:7076}"
      username: ${COLLECTOR_AUTH_USERNAME}
      password: ${COLLECTOR_AUTH_PASSWORD}

grpc-client@erda.core.monitor.metric:
  addr: "${MONITOR_GRPC_ADDR:monitor:7080}"
erda.core.monitor.metric-client:

grpc-client@erda.core.monitor.alert:
  addr: "${MONITOR_GRPC_ADDR:monitor:7080}"
erda.core.monitor.alert-client:

grpc-client@erda.core.monitor.event:
  addr: "${MONITOR_GRPC_ADDR:monitor:7080}"
#  addr: "${MONITOR_GRPC_ADDR_LOCAL:localhost:7080}"
erda.core.monitor.event-client:

grpc-client@erda.oap.entity:
  addr: "${MONITOR_GRPC_ADDR:monitor:7080}"
erda.oap.entity-client:

erda.msp.apm.alert:
  micro_service_filter_tags: "${MICRO_SERVICE_FILTER_TAGS:_metric_name,_metric_scope,_metric_scope_id}"

permission:

msp.permission:

audit:

grpc-client@erda.core.services.authentication.credentials.accesskey:
  addr: "${CORE_SERVICES_GRPC_ADDR:core-services:9537}"
erda.core.services.authentication.credentials.accesskey-client:
erda.msp.credential:

erda.msp.menu:
erda.msp.configcenter:
erda.msp.registercenter:
erda.msp.member:
erda.msp.apm.notifygroup:

erda.msp.apm.adapter:
  collector_url: ${COLLECTOR_PUBLIC_URL:https://collector.erda.cloud}
  libraryFiles:
    - ${CONFIG_PATH}/instrumentationlibrary/instrumentationlibrary.yaml
  configFiles:
    - ${CONFIG_PATH}/instrumentationlibrary/jaeger-template.yaml

# checker
erda.msp.apm.checker: # checkers apis

erda.msp.apm.checker.storage.cache.sync:
  cache_key: "${CHECKER_CACHE_KEY:checkers}"
  delay_on_start: "5s"
  interval: "5m"

# for debug
# erda.msp.apm.checker.task.fetcher.fixed:
#   checkers:
#       - id: 1
#         name: "test-http"
#         type: "http"
#         config:
#           url: "http://baidu.com"
#         tags:
#           custom_tag: "custom"

erda.msp.apm.checker.task.fetcher.scheduled:
  cache_key: "${CHECKER_CACHE_KEY:checkers}"
  load_checkers_interval: "10s" # load checkers for worker
  max_schedule_interval: "3m" # schedule all checkers to ndoes

erda.msp.apm.checker.task.plugins.http:
erda.msp.apm.checker.task:
  default_periodic_worker_interval: "30s"

erda.msp.apm.trace.query:
  query_source: "${TRACE_QUERY_SOURCE:cassandra}"
  cassandra:
    keyspace:
      name: "spot_prod"
      auto: false # auto generate keyspace

erda.msp.apm.exception.query:
  query_source: "${EXCEPTION_QUERY_SOURCE:cassandra}"
  cassandra:
    keyspace:
      name: "spot_prod"
      auto: false # auto generate keyspace

# apm metric
erda.msp.apm.metric:
  monitor_url: "http://${MONITOR_ADDR:monitor:7096}"

erda.msp.tenant:
erda.msp.tenant.project:

#resource deploy related
erda.msp.resource:
erda.msp.resource.deploy.coordinator:
erda.msp.resource.deploy.handlers.apigateway:
  main_cluster_info:
    name: "${DICE_CLUSTER_NAME}"
    root_domain: "${DICE_ROOT_DOMAIN}"
    protocol: "${DICE_PROTOCOL}"
    http_port: "${DICE_HTTP_PORT}"
    https_port: "${DICE_HTTPS_PORT}"
erda.msp.resource.deploy.handlers.configcenter:
erda.msp.resource.deploy.handlers.etcd:
erda.msp.resource.deploy.handlers.generalability:
erda.msp.resource.deploy.handlers.jvmprofiler:
erda.msp.resource.deploy.handlers.loganalytics:
erda.msp.resource.deploy.handlers.loges:
erda.msp.resource.deploy.handlers.logexporter:
erda.msp.resource.deploy.handlers.logservice:
erda.msp.resource.deploy.handlers.monitor:
  ta_collect_url: "//${COLLECTOR_PUBLIC_ADDR:analytics.terminus.io}/collect"
  ta_static_url: "//${COLLECTOR_PUBLIC_ADDR:static.terminus.io}/ta.js"
erda.msp.resource.deploy.handlers.monitorcollector:
erda.msp.resource.deploy.handlers.monitorkafka:
erda.msp.resource.deploy.handlers.monitorzk:
erda.msp.resource.deploy.handlers.mysql:
erda.msp.resource.deploy.handlers.nacos:
erda.msp.resource.deploy.handlers.postgresql:
erda.msp.resource.deploy.handlers.registercenter:
erda.msp.resource.deploy.handlers.servicemesh:
erda.msp.resource.deploy.handlers.zkproxy:
erda.msp.resource.deploy.handlers.zookeeper:





