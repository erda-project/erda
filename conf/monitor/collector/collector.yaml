http-server:
  addr: ":7076"

health:
  path: "/api/health"

service-register:

grpc-client@erda.core.services.authentication.credentials.accesskey.accessKeyService:
  addr: "${CORE_SERVICES_GRPC_ADDR:core-services:9537}"
erda.core.services.authentication.credentials.accesskey-client:

erda.oap.collector.interceptor:
erda.oap.collector.authentication:
  sync_interval: ${COLLECTOR_AUTHENTICATION_AK_SYNC_INTERVAL:2m}

erda.oap.collector.core:
  pipelines:
    - receivers: ["erda.oap.collector.receiver.collector"]
      exporters: ["erda.oap.collector.exporter.kafka@collector"]
    - receivers:
        - "erda.oap.collector.receiver.jaeger"
        - "erda.oap.collector.receiver.opentelemetry"
      exporters: ["erda.oap.collector.exporter.kafka@erda-spans"]
    - receivers:
        #- "erda.oap.collector.receiver.dummy"
        - "erda.oap.collector.receiver.prometheus-remote-write"
      processors:
        - "erda.oap.collector.processor.k8s-tagger@prw"
        - "erda.oap.collector.processor.modifier"
        - "erda.oap.collector.processor.modifier@addmeta"
      exporters:
        #- "erda.oap.collector.exporter.stdout"
        - "erda.oap.collector.exporter.kafka@spot-metrics"

# ************* receivers *************
erda.oap.collector.receiver.dummy:
  rate: 3s
  metric_sample: '{"name":"kubernetes_nodes_cadvisor","timeUnixNano":1640936985459000000,"relations":null,"attributes":{"container":"go-demo","container_name":"go-demo","host_ip":"10.118.177.94","id":"/kubepods/burstable/podff0b8bf8-4b48-4092-8f78-0bb9fffd75b4/67f7e9a8b0993ebdf8883a0ad8be9c3978b04883e56a156a8de563afa467d49d","image":"sha256:4a72b6f8d32bed5550174f75ba10f753e46eb04b8b9af8a96332030b7cdc9682","instance":"virtual-kubelet-cn-hangzhou-k","kubernetes_pod_annotations_msp_erda_cloud_application_name":"testeci","kubernetes_pod_annotations_msp_erda_cloud_cluster_name":"csi-test","kubernetes_pod_annotations_msp_erda_cloud_monitor_log_collector":"http://u4dddc0d5c9f4413981ca856eb0e0b121.addon-monitor-collector--u4dddc0d5c9f4413981ca856eb0e0b121.svc.cluster.local:7076/collect/logs/container","kubernetes_pod_annotations_msp_erda_cloud_monitor_log_key":"tf504d4c4cca845228d459ce60056185a","kubernetes_pod_annotations_msp_erda_cloud_msp_env_id":"09293f90cbc9ed09e0ec9a9df2b69212","kubernetes_pod_annotations_msp_erda_cloud_msp_log_attach":"true","kubernetes_pod_annotations_msp_erda_cloud_org_name":"laowang","kubernetes_pod_annotations_msp_erda_cloud_project_name":"testeci","kubernetes_pod_annotations_msp_erda_cloud_runtime_name":"master","kubernetes_pod_annotations_msp_erda_cloud_service_name":"go-demo","kubernetes_pod_annotations_msp_erda_cloud_terminus_key":"09293f90cbc9ed09e0ec9a9df2b69212","kubernetes_pod_annotations_msp_erda_cloud_terminus_log_key":"tf504d4c4cca845228d459ce60056185a","kubernetes_pod_annotations_msp_erda_cloud_workspace":"prod","kubernetes_pod_ip":"10.0.6.22","kubernetes_pod_name":"go-demo-d3b3fbf9a2-78bbf8b6d4-wm5wq","kubernetes_pod_namespace":"project-1-prod","kubernetes_pod_uid":"ff0b8bf8-4b48-4092-8f78-0bb9fffd75b4","name":"67f7e9a8b0993ebdf8883a0ad8be9c3978b04883e56a156a8de563afa467d49d","namespace":"project-1-prod","pod":"go-demo-d3b3fbf9a2-78bbf8b6d4-wm5wq","pod_name":"go-demo-d3b3fbf9a2-78bbf8b6d4-wm5wq","pod_source":"eci","prometheus":"default/prometheus","prometheus_replica":"prometheus-prometheus-0"},"dataPoints":{"container_cpu_usage_seconds_total":500}}'

erda.oap.collector.receiver.prometheus-remote-write:

erda.oap.collector.receiver.jaeger:

erda.oap.collector.receiver.opentelemetry:

#erda.oap.collector.receiver.fluent-bit:

erda.oap.collector.receiver.collector:
  metadata_key_of_topic: "KAFKA-TOPIC"
  auth:
    skip: ${RECEIVER_COLLECTOR_AUTH_SKIP:false}

# ************* receivers *************

# ************* processors *************
erda.oap.collector.processor.k8s-tagger@prw:
  namepass: ["kubernetes_nodes_cadvisor"]
  pod:
    watch_selector:
      namespace: ""
      label_selector: ""
      field_slector: ""
    add_metadata:
      label_include: []
      annotation_include:
        - "msp.erda.cloud/application_name"
        - "msp.erda.cloud/org_name"
        - "msp.erda.cloud/project_name"
        - "msp.erda.cloud/runtime_name"
        - "msp.erda.cloud/service_name"
        - "msp.erda.cloud/terminus_key"
        - "msp.erda.cloud/workspace"
      finders:
        - indexer: pod_name
          matcher: "%{namespace}/%{pod}"

erda.oap.collector.processor.modifier:
  namepass: ["kubernetes_nodes_cadvisor"]
  rules:
    - action: drop
      key: kubernetes_pod_name
    - action: drop
      key: kubernetes_pod_namespace
    - action: rename
      key: pod
      value: pod_name
    - action: rename
      key: namespace
      value: pod_namespace
    - action: drop
      key: kubernetes_pod_annotations_msp_erda_cloud_monitor_log_collector
    - action: drop
      key: kubernetes_pod_annotations_msp_erda_cloud_monitor_log_key
    - action: drop
      key: kubernetes_pod_annotations_msp_erda_cloud_msp_log_attach
    - action: drop
      key: kubernetes_pod_annotations_msp_erda_cloud_terminus_log_key
    - action: drop
      key: instance
    - action: drop
      key: prometheus
    - action: drop
      key: prometheus_replica
    - action: trim_left
      key: kubernetes_
    - action: trim_left
      key: pod_annotations_msp_erda_cloud_
    - action: copy
      key: pod_uid
      # for business
      value: service_instance_id
    - action: add
      key: cluster_name
      value: ${DICE_CLUSTER_NAME}
    - action: add
      key: org_name
      value: ${DICE_ORG_NAME}

erda.oap.collector.processor.modifier@addmeta:
  rules:
    - action: add
      key: _meta
      value: "true"
    - action: add
      key: _metric_scope
      value: org
    - action: copy
      key: org_name
      value: _metric_scope_id

# ************* processors *************

# ************* exporters *************
erda.oap.collector.exporter.stdout:

erda.oap.collector.exporter.kafka@collector:
  metadata_key_of_topic: "KAFKA-TOPIC"
  producer:
    shared: "false"
    batch:
      size: 1 # already batch in third client
    options:
      # channel size in Go Library
      go.produce.channel.size: 1
      # queue size in C Library
      queue.buffering.max.kbytes: 204800 # 200MB

erda.oap.collector.exporter.kafka@spot-metrics:
  producer:
    shared: "false"
    topic: "spot-metrics"
    batch:
      size: 1 # already batch in third library
    options:
      # channel size in Go Library
      go.produce.channel.size: 1
      # queue size in C Library
      queue.buffering.max.kbytes: 51200 # 50MB


erda.oap.collector.exporter.kafka@erda-spans:
  producer:
    shared: "false"
    topic: "erda-spans"
    batch:
      size: 1 # already batch in third library
    options:
      # channel size in Go Library
      go.produce.channel.size: 1
      # queue size in C Library
      queue.buffering.max.kbytes: 204800 # 200MB


# ************* exporters *************

kubernetes:
  master_url: ${MASTER_VIP_URL:https://kubernetes.default.svc:443}
  root_ca_file: ${K8S_CA_FILE:/var/run/secrets/kubernetes.io/serviceaccount/ca.crt}
  token_file: ${K8S_TOKEN_FILE:/var/run/secrets/kubernetes.io/serviceaccount/token}
#  config_path: .kube/config

kafka:
  servers: ${BOOTSTRAP_SERVERS:localhost:9092}

monitor-collector:
  _enable: ${COLLECTOR_ENABLE:true}
  ta_sampling_rate: ${COLLECTOR_BROWSER_SAMPLING_RATE:100}
  output:
    parallelism: ${KAFKA_PARALLELISM:3}
    shared: "false"
    batch:
      size: 1
      timeout: "30s"
    options:
      go.produce.channel.size: ${COLLECTOR_KAFKA_PRODUCE_CHANNEL_SIZE:1}
      queue.buffering.max.kbytes: ${COLLECTOR_KAFKA_QUEUE_SIZE_KB:204800} # 200MB

  auth:
    username: "${COLLECTOR_AUTH_USERNAME:collector}"
    password: "${COLLECTOR_AUTH_PASSWORD:G$9767bP32drYFPWrK4XMLRMTatiM6cU}"
    force: ${COLLECTOR_AUTH_FORCE:false}
    skip: ${COLLECTOR_AUTH_SKIP:false}

pprof:
http-server@admin:
  addr: ":7078"
