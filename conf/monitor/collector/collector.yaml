http-server:
    addr: ":7076"

health:
    path: "/api/health"

service-register:

erda.oap.collector.receiver.jaeger:
  enable: "${COLLECTOR_RECEIVER_JAEGER_ENABLE:true}"
  kafka:
#    server: ${BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      topic: ${COLLECTOR_RECEIVER_JAEGER_KAFKA_TOPIC:msp_jaeger_trace}
      shared: "false"
      options:
            go.produce.channel.size: ${COLLECTOR_RECEIVER_JAEGER_KAFKA_PRODUCE_CHANNEL_SIZE:100}
            queue.buffering.max.kbytes: ${COLLECTOR_RECEIVER_JAEGER_KAFKA_QUEUE_SIZE_KB:204800} # 200MB

kafka@receiver-jaeger:
  servers: ${BOOTSTRAP_SERVERS:localhost:9092}

grpc-client@erda.core.services.authentication.credentials.accesskey:
    addr: "${CORE_SERVICES_GRPC_ADDR:core-services:9537}"
erda.core.services.authentication.credentials.accesskey-client:

kafka:
    producer:
        options:
            go.produce.channel.size: ${COLLECTOR_KAFKA_PRODUCE_CHANNEL_SIZE:100}
            queue.buffering.max.kbytes: ${COLLECTOR_KAFKA_QUEUE_SIZE_KB:524288} # 500MB

monitor-collector:
    _enable: ${COLLECTOR_ENABLE:true}
    ta_sampling_rate: ${COLLECTOR_BROWSER_SAMPLING_RATE:100}
    output:
        parallelism: ${KAFKA_PARALLELISM:3}
        batch:
            size: ${KAFKA_BATCH_SIZE:50}
            timeout: "30s"
    auth:
        username: "${COLLECTOR_AUTH_USERNAME:collector}"
        password: "${COLLECTOR_AUTH_PASSWORD:G$9767bP32drYFPWrK4XMLRMTatiM6cU}"
        force: ${COLLECTOR_AUTH_FORCE:false}
    sign_auth:
        sync_interval: ${COLLECTOR_AK_SYNC_INTERVAL:3m}
        expired_duration: ${COLLECTOR_AK_EXPIRED_DURATION:10m}

pprof:
http-server@admin:
    addr: ":7078"
