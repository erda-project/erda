http-server:
  addr: ":7096"
health:
  path: "/api/health"

grpc-server:
  addr: ":7080"

service-register:

elasticsearch:
  urls: "${ES_URL:http://localhost:9200}"
  security: ${ES_SECURITY_ENABLE:false}
  username: "${ES_SECURITY_USERNAME}"
  password: "${ES_SECURITY_PASSWORD}"

#elasticsearch@logs:
#  urls: "${LOGS_ES_URL:http://localhost:9200}"
#  security: ${LOGS_ES_SECURITY_ENABLE:false}
#  username: "${LOGS_ES_SECURITY_USERNAME}"
#  password: "${LOGS_ES_SECURITY_PASSWORD}"

cassandra:
  _enable: ${CASSANDRA_ENABLE:false}
  host: "${CASSANDRA_ADDR:localhost:9042}"
  security: ${CASSANDRA_SECURITY_ENABLE:false}
  username: ${CASSANDRA_SECURITY_USERNAME}
  password: ${CASSANDRA_SECURITY_PASSWORD}
  timeout: "${CASSANDRA_TIMEOUT:3s}"

mysql:
  host: "${MYSQL_HOST:localhost}"
  port: ${MYSQL_PORT:3306}
  username: "${MYSQL_USERNAME:root}"
  password: "${MYSQL_PASSWORD:123456}"
  database: "${MYSQL_DATABASE:dice}"

etcd:
  endpoints: "${ETCD_ENDPOINTS:http://localhost:2379}"
  tls:
    cert_file: "${ETCD_CERT_FILE:/certs/etcd-client.pem}"
    cert_key_file: "${ETCD_CERT_KEY_FILE:/certs/etcd-client-key.pem}"
    ca_file: "${ETCD_CA_FILE:/certs/etcd-ca.pem}"

etcd-election@index:
  root_path: "/erda/monitor-index-clean-election"

redis:
  addr: "${REDIS_ADDR}"
  password: "${REDIS_PASSWORD}"
  db: ${REDIS_DB:0}
  master_name: "${REDIS_MASTER_NAME}"
  sentinels_addr: "${REDIS_SENTINELS_ADDR}"

permission:

# log
elasticsearch@log:
  _enable: ${LOG_ELASTICSEARCH_ENABLE:false}
  urls: "${LOG_ELASTICSEARCH_URL:http://localhost:9200}"
  security: ${LOG_ELASTICSEARCH_SECURITY_ENABLE:false}
  username: "${LOG_ELASTICSEARCH_SECURITY_USERNAME}"
  password: "${LOG_ELASTICSEARCH_SECURITY_PASSWORD}"
elasticsearch.index.loader@log:
  _enable: ${QUERY_LOG_FROM_ES_ENABLE:true}
  load_mode: "LoadWithCache"
  index_reload_interval: "1m"
  query_index_time_range: true
  cache_key_prefix: "es-index-log"
  default_index: "index__for__not__exist"
  match:
    - prefix: "erda-logs-"
      patterns:
        - "<org>-{number}"
        - "<org>.<key>-{number}"
storage-retention-strategy@log:
  _enable: ${QUERY_LOG_FROM_ES_ENABLE:true}
  default_ttl: "${LOG_TTL:168h}"
  load_from_database: true
  ttl_reload_interval: "3m"
elasticsearch.index.retention-strategy@log:
  _enable: ${QUERY_LOG_FROM_ES_ENABLE:true}
  key_patterns:
    - "erda-logs-<org>.<key>-{number}"
elasticsearch.index.cleaner@log:
  _enable: ${QUERY_LOG_FROM_ES_ENABLE:true}
  check_interval: "30m"
  disk_clean:
    enable: ${LOG_DISK_CLEAN_ENABLE:true}
    check_interval: "1m"
    high_disk_usage_percent: ${HIGH_DISK_USAGE_PERCENT:80} # 触发磁盘清理的容量占比
    low_disk_usage_percent: ${LOW_DISK_USAGE_PERCENT:70} # 触发磁盘清理时，尽量清理到的目标容量占比
    min_indices_store: "${MIN_INDICES_STORE_PERCENT:10GB}" # 磁盘使用率高时，保证 索引最少可以占用的容量
    min_indices_store_percent: ${MIN_INDICES_STORE_PERCENT:10} # 磁盘使用率高时，保证 索引最少可以占用总磁盘总量的百分比
    rollover_body_file: "${CONFIG_PATH}/index_rollover_min.json"
    rollover_alias_patterns:
      - index: "erda-logs-<org>-{number}"
        alias: "erda-logs-<org>-rollover"
      - index: "erda-logs-<org>.<key>-{number}"
        alias: "erda-logs-<org>.<key>-rollover"
log-storage-elasticsearch:
  _enable: ${QUERY_LOG_FROM_ES_ENABLE:true}
  query_timeout: "1m"
  read_page_size: 200
kubernetes-logs-storage:
  _enable: ${QUERY_LOG_FROM_K8S_API_ENABLE:false}
  pod_info_cache_size: 256
  pod_info_cache_expiration: "3h"
  buffer_lines: 200
log-storage-cassandra:
  _enable: ${QUERY_LOG_FROM_CASSANDRA_ENABLE:false}
  read_page_size: 201
  cassandra:
    keyspace:
      name: "spot_prod"
erda.core.monitor.log.query:
  download_api_throttling:
    current_limit: ${LOG_DOWNLOAD_API_THROTTLING_CURRENT_LIMIT:200}

# event
elasticsearch@event:
  _enable: ${EVENT_ELASTICSEARCH_ENABLE:false}
  urls: "${EVENT_ELASTICSEARCH_URL:http://localhost:9200}"
  security: ${EVENT_ELASTICSEARCH_SECURITY_ENABLE:false}
  username: "${EVENT_ELASTICSEARCH_SECURITY_USERNAME}"
  password: "${EVENT_ELASTICSEARCH_SECURITY_PASSWORD}"
elasticsearch.index.loader@event:
  _enable: ${QUERY_EVENT_FROM_ES_ENABLE:true}
  load_mode: "LoadWithCache"
  index_reload_interval: "1m"
  query_index_time_range: true
  cache_key_prefix: "es-index-event"
  match:
    - prefix: "erda-events-"
      patterns:
        - "<event>-<namespace>-{number}"
        - "<event>-<namespace>.<key>-{number}"
storage-retention-strategy@event:
  _enable: ${QUERY_EVENT_FROM_ES_ENABLE:true}
  default_ttl: "${EVENT_TTL:168h}"
  load_from_database: false
  ttl_reload_interval: "3m"
elasticsearch.index.retention-strategy@event:
  _enable: ${QUERY_EVENT_FROM_ES_ENABLE:true}
  key_patterns:
    - "erda-events-<event>-<namespace>.<key>-{number}"
elasticsearch.index.cleaner@event:
  _enable: ${QUERY_EVENT_FROM_ES_ENABLE:true}
  check_interval: "30m"
  disk_clean:
    enable: ${EVENT_DISK_CLEAN_ENABLE:true}
    check_interval: "1m"
    high_disk_usage_percent: ${HIGH_DISK_USAGE_PERCENT:80} # 触发磁盘清理的容量占比
    low_disk_usage_percent: ${LOW_DISK_USAGE_PERCENT:70} # 触发磁盘清理时，尽量清理到的目标容量占比
    min_indices_store: "${MIN_INDICES_STORE_SIZE:10GB}" # 磁盘使用率高时，保证 索引最少可以占用的容量
    min_indices_store_percent: ${MIN_INDICES_STORE_PERCENT:10} # 磁盘使用率高时，保证 索引最少可以占用总磁盘总量的百分比
    rollover_body_file: "${CONFIG_PATH}/index_rollover_min.json"
    rollover_alias_patterns:
      - index: "erda-events-<event>-<namespace>-{number}"
        alias: "erda-events-<event>-<namespace>-rollover"
      - index: "erda-events-<event>-<namespace>.<key>-{number}"
        alias: "erda-events-<event>-<namespace>.<key>-rollover"
event-storage-elasticsearch:
  _enable: ${QUERY_EVENT_FROM_ES_ENABLE:true}
  query_timeout: "1m"
  read_page_size: 50
erda.core.monitor.event.query:

# metric
elasticsearch.index.loader@metric:
  load_mode: "LoadWithCache"
  index_reload_interval: "1m"
  query_index_time_range: true
  cache_key_prefix: "es-index-metric"
  default_index: "spot-empty"
  match:
    - prefix: "spot-"
      patterns:
        - "empty"
        - "<metric>-<namespace>.<key>-r-{number}"
        - "<metric>-<namespace>-r-{number}"
        - "<metric>-<namespace>-m-{}"
        - "<metric>-<namespace>-m-{}"
        - "<metric>-<namespace>.<key>-<timestamp>"
        - "<metric>-<namespace>-<timestamp>"
        - "<metric>-<namespace>.<key>"
        - "<metric>-<namespace>"
storage-retention-strategy@metric:
  default_ttl: "${METRIC_TTL:168h}"
  load_from_database: true
  ttl_reload_interval: "3m"
elasticsearch.index.retention-strategy@metric:
  key_patterns:
    - "spot-<metric>-<namespace>.<key>-r-{number}"
    - "spot-<metric>-<namespace>.<key>-<timestamp>"
elasticsearch.index.cleaner@metric:
  check_interval: "30m"
  disk_clean:
    enable: ${METRIC_DISK_CLEAN_ENABLE:true}
    check_interval: "1m"
    high_disk_usage_percent: ${HIGH_DISK_USAGE_PERCENT:80} # 触发磁盘清理的容量占比
    low_disk_usage_percent: ${LOW_DISK_USAGE_PERCENT:70} # 触发磁盘清理时，尽量清理到的目标容量占比
    min_indices_store: "${MIN_INDICES_STORE_SIZE:10GB}" # 磁盘使用率高时，保证 索引最少可以占用的容量
    min_indices_store_percent: ${MIN_INDICES_STORE_PERCENT:10} # 磁盘使用率高时，保证 索引最少可以占用总磁盘总量的百分比
    rollover_body_file: "${CONFIG_PATH}/index_rollover_min.json"
    rollover_alias_patterns:
      - index: "spot-<metric>-<namespace>-r-{number}"
        alias: "spot-<metric>-<namespace>-rollover"
      - index: "spot-<metric>-<namespace>.<key>-r-{number}"
        alias: "spot-<metric>-<namespace>.<key>-rollover"
erda.core.monitor.metric:
  chart_meta:
    path: ${CONFIG_PATH}/charts
    reload_interval: "30s"
  metric_meta:
    sources:
      - "index"
      - "file"
      - "database"
    group_files:
      - "${CONFIG_PATH}/metricmeta/groups/org.yml"
      - "${CONFIG_PATH}/metricmeta/groups/micro_service.yml"
    metric_meta_path: "${CONFIG_PATH}/metricmeta/metrics"

metric-query-example:
  _enable: ${METRIC_QUERY_EXAMPLE_ENABLE:false}
metrics-query-compatibility:
  _enable: ${METRIC_QUERY_ENABLE:true}
  chart_meta:
    path: ${CONFIG_PATH}/charts

# entity
elasticsearch@entity:
  _enable: ${ENTITY_ELASTICSEARCH_ENABLE:false}
  urls: "${ENTITY_ELASTICSEARCH_URL:http://localhost:9200}"
  security: ${ENTITY_ELASTICSEARCH_SECURITY_ENABLE:false}
  username: "${ENTITY_ELASTICSEARCH_SECURITY_USERNAME}"
  password: "${ENTITY_ELASTICSEARCH_SECURITY_PASSWORD}"
entity-storage-elasticsearch:
  query_timeout: "1m"
  index_type: "entity"
  pattern: "erda-entity-<type>"
erda.oap.entity:

erda.core.monitor.alertdetail:

#logs-index-query:
#  query_back_es: ${LOGS_QUERY_BACK_ES:false}
#  index_field_settings:
#    file: ${CONFIG_PATH}/logs/default_field_settings.yml
log-metric-rules:
node-topo:
#apm providers
apm-runtime:
apm-topology:
apm-report:

erda.core.monitor.alert:
  #  micro_service_filter_tags: "${MICRO_SERVICE_FILTER_TAGS:metric_name,_metric_name,metric_scope,_metric_scope,metric_scope_id,_metric_scope_id,cluster_name,host_ip,org_id,org_name,project_id,project_name,application_id,application_name,runtime_id,runtime_name,service_id,service_name,component_name,addon_name,workspace,cpu_request,cpu_limit,cpu_origin,mem_request,mem_limit,mem_origin,job_id,addon_id,instance_id,instance_type,edas_app_id,edas_app_name,edas_group_id,pod_name,pod_namespace,pod_ip,terminus_key}"
  micro_service_filter_tags: "${MICRO_SERVICE_FILTER_TAGS:_metric_name,_metric_scope,_metric_scope_id}"
  #  org_filter_tags: "${ORG_FILTER_TAGS:size,platform_addon,os,kernel_version,container_id,version,is_edge,login_callback,namespace,app_config_namespace,container_name,container_image,http_port,image_version,deployment,ssh_user,deployment_id,email_smtp_port,openapi_addr,ingress_version,email_smtp_is_ssl,openapi_token_for_action_bootstrap,email_smtp_host,ssh_password,email_smtp_display_user,metric_name,_metric_name,metric_scope,_metric_scope,metric_scope_id,_metric_scope_id,org_id,org_name,component_name,addon_name,workspace,cpu_request,cpu_limit,cpu_origin,mem_request,mem_limit,mem_origin,edas_app_id,edas_app_name,edas_group_id,pod_name,pod_namespace,pod_ip,terminus_key,root_domain,email_smtp_username,inside,email_smtp_username,cluster_type,protocol,email_smtp_password,storage_mountpoint,terminus_version,email_smtp_display_user,openapi_public_url}"
  org_filter_tags: "${ORG_FILTER_TAGS:_metric_name,_metric_scope,_metric_scope_id}"
  micro_service_other_filter_tags: "${MICRO_SERVICE_OTHER_FILTER_TAGS:application_id}"
  silence_policy: "${SILENCE_POLICY:fixed,doubled}"
  alert_conditions: "${CONFIG_PATH}/alert/trigger_conditions.yaml"
  cassandra:
    enabled: ${QUERY_EVENT_FROM_CASSANDRA_ENABLE:false}
    session:
      keyspace:
        name: "spot_prod"
    gc_grace_seconds: 86400

report-apis:
  pipeline:
    version: "1.1"
    action_type: "reportengine"
    action_version: "1.0"
  report_cron:
    daily_cron: "0 9 * * *"
    weekly_cron: "0 9 * * 1"
    monthly_cron: "0 20 * * *"
  cluster_name: "${DICE_CLUSTER_NAME}"

org-apis:
  offline_timeout: "${DASHBOARD_OFFLINE_TIMEOUT:3s}"
  offline_sleep: "${DASHBOARD_OFFLINE_SLEEP:3m}"
runtime-apis:
project-apis:
erda.core.monitor.settings:
erda.core.monitor.dataview:
dataview-v1:
template:

erda.core.services.filemanager:

erda.core.monitor.diagnotor:
  agent_image: "${DIAGNOTOR_AGENT_IMAGE}"

k8s-client-manager:
  cache_ttl: "10m"
  cache_size: 5000

i18n:
  common:
    - conf/common/i18n/common.yml
    - conf/common/i18n/apis.yml
  files:
    - ${CONFIG_PATH}/i18n/settings.yml
    - ${CONFIG_PATH}/i18n/org-resource.yml
    - ${CONFIG_PATH}/i18n/alert.yml
    - ${CONFIG_PATH}/i18n/log-metrics.yml
    - ${CONFIG_PATH}/i18n/charts.yml
    - ${CONFIG_PATH}/i18n/topology.yml
i18n@metric:
  common:
    - ${CONFIG_PATH}/metricmeta/i18n/_common.yml
  files:
    - ${CONFIG_PATH}/metricmeta/i18n

notify-query:
  files:
    - ${CONFIG_PATH}/notify/notify

# admin
http-server@admin:
  addr: ":7098"
pprof:
prometheus:

monitor-monitoring:
  usage_sync_interval:
    metric: ${MONITOR_MONITORING_METRIC_SYNC_INTERVAL}

grpc-client@erda.core.services.notify.channel:
  addr: "${CORE_SERVICES_GRPC_ADDR:core-services:9537}"
erda.core.services.notify.channel-client:

erda.core.monitor.expression:
  alert_rules: ${CONFIG_PATH}/alert/rules
  metric_rules: ${CONFIG_PATH}/analyzer/metrics

audit:
