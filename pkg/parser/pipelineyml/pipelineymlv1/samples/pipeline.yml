general_config: &general_config
  image_resource:
    type: docker-image
    source:
      repository: ((default.docker.image.repo))
      tag: ((default.docker.image.tag))
  inputs:
  - name: repo

general_config_with_agent: &general_config_with_agent
  image_resource:
    type: docker-image
    source:
      repository: ((default.docker.image.repo))
      tag: ((default.docker.image.tag))
  inputs:
  - name: repo
  - name: action-agent-image
  - name: action-agent-md5

filters: &filters
  filters:
  - type: git-branch
    excepts:
    - ^.*$

pipeline_build_sh: &pipeline_build_sh
  path: repo/build/pipeline_build.sh


version: '1.0'

stages:
- name: repo
  tasks:
  - get: repo
    params:
      depth: 1

- name: build
  tasks:
  - aggregate:
    - task: command
      config:
        <<: *general_config
        run:
          path: repo/build/command_build.sh

    - task: cmdb
      config:
        <<: *general_config
        outputs:
        - name: cmdb-image
        run:
          <<: *pipeline_build_sh
          args: ["cmdb"]

    - task: officer
      config:
        <<: *general_config
        outputs:
        - name: officer-image
        run:
          <<: *pipeline_build_sh
          args: ["officer"]

    - task: soldier
      config:
        <<: *general_config
        outputs:
        - name: soldier-image
        run:
          <<: *pipeline_build_sh
          args: ["soldier"]

    - task: dicehub
      config:
        <<: *general_config
        outputs:
        - name: dicehub-image
        run:
          <<: *pipeline_build_sh
          args: ["dicehub"]

    - task: eventbox
      config:
        <<: *general_config
        outputs:
        - name: eventbox-image
        run:
          <<: *pipeline_build_sh
          args: ["eventbox"]

    - task: openapi
      config:
        <<: *general_config
        outputs:
        - name: openapi-image
        run:
          <<: *pipeline_build_sh
          args: ["openapi"]

    - task: orchestrator
      config:
        <<: *general_config
        outputs:
        - name: orchestrator-image
        run:
          <<: *pipeline_build_sh
          args: ["orchestrator"]

    - task: scheduler
      config:
        <<: *general_config
        outputs:
        - name: scheduler-image
        run:
          <<: *pipeline_build_sh
          args: ["scheduler"]

    - task: pipeline
      config:
        <<: *general_config
        outputs:
        - name: pipeline-image
        run:
          <<: *pipeline_build_sh
          args: ["pipeline"]

    - task: qa
      config:
        <<: *general_config
        outputs:
        - name: qa-image
        run:
          <<: *pipeline_build_sh
          args: ["qa"]

    - task: action-agent
      config:
        <<: *general_config
        outputs:
        - name: action-agent-image
        - name: action-agent-md5
        run:
          <<: *pipeline_build_sh
          args: ["action-agent"]

- name: actions
  tasks:
  - aggregate:
    # 用于运行自定义任务的 image
    - task: default-action-image
      config:
        <<: *general_config_with_agent
        run:
          <<: *pipeline_build_sh
          args: ["default-action-image"]

    - task: git-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: git-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - git-action

    - task: buildpack-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: buildpack-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - buildpack-action

    - task: bp-compile-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: bp-compile-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - bp-compile-action

    - task: bp-image-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: bp-image-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - bp-image-action

    - task: dicehub-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: dicehub-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - dicehub-action

    - task: dice-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: dice-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - dice-action

    - task: ability-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: ability-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - ability-action

    - task: addon-register-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: addon-register-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - addon-register-action

    - task: it-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: it-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - it-action

    - task: sonar-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: sonar-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - sonar-action

    - task: ut-action
      config:
        <<: *general_config_with_agent
        outputs:
        - name: ut-action-image
        run:
          <<: *pipeline_build_sh
          args:
          - ut-action

- name: render-RELEASE-VERSION
  tasks:
  - task: render-diceyml-pre.sh
    config:
      <<: *general_config_with_agent
      outputs:
      - name: new-init
      - name: new-diceyml
      run:
        path: repo/build/pipeline_replace_release_version.sh

- name: release
  tasks:
  - put: release
    params:
      init_sql: new-init
      dice_yml: new-diceyml
      release_files: new-init/pipeline/image_list.txt,new-init/pipeline.yml,new-diceyml/dice.yml
      replacement_images:
      # components
      - cmdb-image
      - officer-image
      - soldier-image
      - dicehub-image
      - eventbox-image
      - openapi-image
      - orchestrator-image
      - scheduler-image
      - pipeline-image
      - qa-image
      # actions
      - git-action-image
      - buildpack-action-image
      - bp-compile-action-image
      - bp-image-action-image
      - dicehub-action-image
      - dice-action-image
      - ability-action-image
      - addon-register-action-image
      - it-action-image
      - sonar-action-image
      - ut-action-image

resources:
- name: repo
  type: git
  source:
    uri: ((gittar.repo))
    branch: ((gittar.branch))
    username: ((gittar.username))
    password: ((gittar.password))

### no dice.yml validate
- name: release
  type: dicehub
  source:
    app_id: ((dice.id))
    uri: ((dice.url))
    operator_id: ((dice.operator.id))
    workspace: ((dice.env))
    branch: ((gittar.branch))
    check_diceyml: false
