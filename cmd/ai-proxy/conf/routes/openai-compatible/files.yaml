# OpenAI Files API - https://platform.openai.com/docs/api-reference/files
routes:
  # Upload file
  - path: /v1/files
    method: POST
    request_filters:
      - name: audit
        config: { stage: in-log }
      - name: rate-limit
      - name: audit # save audit after rate limit
        config: { stage: in-create-audit }
      - name: context
      - name: context-file
      - name: audit
        config: { stage: in-context-parsed }
      - name: reserved-header
      - name: openai-compatible-director
      - name: set-response-chunk-splitter
      - name: audit
        config: { stage: out-log }
      - name: audit
        config: { stage: out-update }
    response_filters:
      - name: audit
        config: { stage: in-log }
      - name: audit
        config: { stage: in-update }
      - name: set-ai-proxy-header
      - name: ensure-content-type
      - name: audit
        config: { stage: in-parsed }
      - name: audit
        config: { stage: out-log }
      - name: error-status-handler

  # List files
  - path: /v1/files
    method: GET
    request_filters:
      - name: audit
        config: { stage: in-log }
      - name: rate-limit
      - name: audit # save audit after rate limit
        config: { stage: in-create-audit }
      - name: context
      - name: context-file
      - name: audit
        config: { stage: in-context-parsed }
      - name: reserved-header
      - name: openai-compatible-director
      - name: set-response-chunk-splitter
      - name: audit
        config: { stage: out-log }
      - name: audit
        config: { stage: out-update }
    response_filters:
      - name: audit
        config: { stage: in-log }
      - name: audit
        config: { stage: in-update }
      - name: set-ai-proxy-header
      - name: ensure-content-type
      - name: audit
        config: { stage: in-parsed }
      - name: audit
        config: { stage: out-log }
      - name: error-status-handler

  # Retrieve file
  - path: /v1/files/{file_id}
    method: GET
    request_filters:
      - name: audit
        config: { stage: in-log }
      - name: rate-limit
      - name: audit # save audit after rate limit
        config: { stage: in-create-audit }
      - name: context
      - name: context-file
      - name: audit
        config: { stage: in-context-parsed }
      - name: reserved-header
      - name: openai-compatible-director
      - name: set-response-chunk-splitter
      - name: audit
        config: { stage: out-log }
      - name: audit
        config: { stage: out-update }
    response_filters:
      - name: audit
        config: { stage: in-log }
      - name: audit
        config: { stage: in-update }
      - name: set-ai-proxy-header
      - name: ensure-content-type
      - name: audit
        config: { stage: in-parsed }
      - name: audit
        config: { stage: out-log }
      - name: error-status-handler

  # Delete file
  - path: /v1/files/{file_id}
    method: DELETE
    request_filters:
      - name: audit
        config: { stage: in-log }
      - name: rate-limit
      - name: audit # save audit after rate limit
        config: { stage: in-create-audit }
      - name: context
      - name: context-file
      - name: audit
        config: { stage: in-context-parsed }
      - name: reserved-header
      - name: openai-compatible-director
      - name: set-response-chunk-splitter
      - name: audit
        config: { stage: out-log }
      - name: audit
        config: { stage: out-update }
    response_filters:
      - name: audit
        config: { stage: in-log }
      - name: audit
        config: { stage: in-update }
      - name: set-ai-proxy-header
      - name: ensure-content-type
      - name: audit
        config: { stage: in-parsed }
      - name: audit
        config: { stage: out-log }
      - name: error-status-handler

  # Retrieve file content
  - path: /v1/files/{file_id}/content
    method: GET
    request_filters:
      - name: audit
        config: { stage: in-log }
      - name: rate-limit
      - name: audit # save audit after rate limit
        config: { stage: in-create-audit }
      - name: context
      - name: context-file
      - name: audit
        config: { stage: in-context-parsed }
      - name: reserved-header
      - name: openai-compatible-director
      - name: set-response-chunk-splitter
      - name: audit
        config: { stage: out-log }
      - name: audit
        config: { stage: out-update }
    response_filters:
      - name: audit
        config: { stage: in-log }
      - name: audit
        config: { stage: in-update }
      - name: set-ai-proxy-header
      - name: ensure-content-type
      - name: audit
        config: { stage: in-parsed }
      - name: audit
        config: { stage: out-log }
      - name: error-status-handler
